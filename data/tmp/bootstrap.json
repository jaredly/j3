{"map":{"0":{"type":"rich-text","contents":[{"id":"8fd26af0-7082-4132-96f0-eb9bd9a651aa","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"Bootstrap (js) parser + compiler","styles":{}}],"children":[]}],"loc":0},"2":{"type":"rich-text","contents":[{"id":"68285dbb-f6ad-428e-a83c-89f93b2af3cf","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Parser consumes (Node)s and produces (stmt /  expr)","styles":{}}],"children":[]}],"loc":2},"8":{"type":"blank","loc":8},"10":{"type":"rich-text","contents":[{"id":"9ce7f4f1-7ee8-47c2-bd25-480e7a33babf","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Compile to js","styles":{}}],"children":[]}],"loc":10},"17":{"type":"blank","loc":17},"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArray(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('')\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21},"23":{"type":"raw-code","lang":"javascript","raw":"c = {\n  prim: (prim, loc=-1) => ({type: 'eprim', 0: prim, 1: loc}),\n  int: (v, loc=-1) => ({type: 'pint', 0: v, 1: loc}),\n  bool: (v, loc=-1) => ({type: 'pbool', 0: v, 1: loc}),\n  evar: (text, loc=-1) => ({type: 'evar', 0: text, 1: loc}),\n  app: (target, arg, loc=-1) => ({type: 'eapp', 0: target, 1: arg, 2: loc}),\n  nil: l => c.evar('nil', l),\n  cons: (a, b, l) => c.app(c.app(c.evar('cons', l), a, l), b, l),\n  list: (values, l) => {\n    let v = c.nil(l)\n    for (let i=values.length-1;i>=0;i--) {\n      v = c.cons(values[i], v, l)\n    }\n    return v\n  },\n  \n}","loc":23},"25":{"type":"raw-code","lang":"javascript","raw":"arr = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":25},"27":{"type":"raw-code","lang":"javascript","raw":"cons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":27},"29":{"type":"raw-code","lang":"javascript","raw":"nil = {type: 'nil'}","loc":29},"31":{"type":"list","values":[40,41],"loc":31},"33":{"type":"raw-code","lang":"javascript","raw":"parse = node => {\n  switch (node.type) {\n    case 'identifier': {\n      return parsePrim(node) || c.evar(node.text, node.loc)\n    }\n    case 'array': {\n      return c.list(node.values.map(parse), node.loc)\n    }\n    case 'string': {\n      const exprs = node.templates.map(t => parse(t.expr))\n      return {type: 'estr', 0: node.first.text, 1: arr(\n        node.templates.map((t, i) => pair(exprs[i], t.suffix.text))\n      )}\n    }\n    case 'list': {\n      if (!node.values.length) return c.evar('()', node.loc)\n      if (node.values[0].type === 'identifier') {\n        const first = node.values[0].text;\n        if (forms[first]) {\n          const res = forms[first](node.loc, ...node.values.slice(1))\n          if (res) return res\n        }\n      }\n      const values = node.values.map(parse)\n      let res = values[0]\n      for (let i=1; i<values.length; i++) {\n        res = c.app(res, values[i], node.loc)\n      }\n      return res\n    }\n    case 'array': {\n      if (!node.values.length) return c.evar('nil', node.loc)\n      let last = node.values[node.values.length - 1]\n      let res = last.type === 'spread'\n        ? parse(last.contents)\n        : c.cons(parse(last), c.nil(node.loc), node.loc)\n      for (let i=node.values.length - 2; i>=0; i--) {\n        res = c.cons(parse(node.values[i]), res)\n      }\n      return res\n    }\n  }\n  throw new Error(`cant parse ${JSON.stringify(node)}`)\n}","loc":33},"35":{"type":"rich-text","contents":[{"id":"d75f4bc9-5f31-4967-b242-4c02865ab461","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Tree-Walking Evaluator","styles":{}}],"children":[]}],"loc":35},"40":{"type":"identifier","text":"parse","loc":40},"41":{"type":"identifier","text":"1","loc":41},"42":{"type":"raw-code","lang":"javascript","raw":"parsePrim = node => {\n  const v = +node.text\n  if (!isNaN(v)) {\n    return c.prim(c.int(v, node.loc), node.loc)\n  }\n  if (node.text === 'true' || node.text === 'false') {\n    return c.prim(c.bool(node.text === 'true', node.loc), node.loc)\n  }\n}","loc":42},"46":{"type":"list","values":[48,49],"loc":46},"48":{"type":"identifier","text":"parse","loc":48},"49":{"type":"identifier","text":"true","loc":49},"50":{"type":"list","values":[52,53],"loc":50},"52":{"type":"identifier","text":"parse","loc":52},"53":{"type":"array","values":[54,55,56],"loc":53},"54":{"type":"identifier","text":"1","loc":54},"55":{"type":"identifier","text":"2","loc":55},"56":{"type":"identifier","text":"3","loc":56},"57":{"type":"raw-code","lang":"javascript","raw":"pair = (a, b) => ({type: ',', 0: a, 1: b})","loc":57},"61":{"type":"list","values":[63,64],"loc":61},"63":{"type":"identifier","text":"parse","loc":63},"64":{"type":"string","first":65,"templates":[{"expr":66,"suffix":67}],"loc":64},"65":{"type":"stringText","loc":65,"text":"hi"},"66":{"type":"identifier","text":"1","loc":66},"67":{"type":"stringText","text":"","loc":67},"68":{"type":"raw-code","lang":"javascript","raw":"forms = {\n  fn: (loc, args, body) => {\n    if (!args || !body) return\n    if (args.type !== 'array') return\n    const pats = args.values.map(parsePat)\n    return foldr(parse(body), pats, (body, arg) => ({type: 'elambda', 0: arg, 1: body, 2: loc}))\n  },\n  let: (loc, bindings, body) => {\n    if (!bindings || !body) return\n    if (bindings.type !== 'array') return\n    const pairs = makePairs(bindings.values)\n    return foldr(parse(body), pairs, (body, [pat, init]) => {\n      return {type: 'elet', 0: parsePat(pat), 1: parse(init), 2: body, 3: loc}\n    })\n  },\n  match: (loc, target, ...rest) => {\n    if (!target || !rest.length) return\n    const cases = makePairs(rest)\n    return {type: 'ematch', 0: parse(target), 1: arr(cases.map(([pat, body]) => pair(parsePat(pat), parse(body)))), 2: loc}\n  },\n  '@': (loc, inner) => ({type: 'equot', 0: parse(inner), 1: loc}),\n  '@@': (loc, inner) => ({type: 'equot', 0: inner, 1: loc}),\n  '@!': (loc, inner) => ({type: 'equot', 0: parseStmt(inner), 1: loc}),\n  'if': (loc, cond, yes, no) => ({type: 'ematch', 0: parse(cond), 1: arr([pair(\n    {type: 'pprim', 0: {type: 'pbool', 0: true, 1: loc}, 1: loc},\n    parse(yes)\n    ), pair(\n      {type: 'pany', 0: loc},\n      parse(no)\n    )\n  ])}),\n}","loc":68},"70":{"type":"raw-code","lang":"javascript","raw":"foldr = (init, items, f) => items.length === 0 ? init : f(foldr(init, items.slice(1), f), items[0])","loc":70},"76":{"type":"raw-code","lang":"javascript","raw":"parsePat = node => {\n  switch (node.type) {\n    case 'identifier':\n      switch(node.text) {\n        case '_': return p.any(node.loc)\n        case 'true': case 'false':\n          return p.prim(p.bool(node.text === 'true', node.loc), node.loc)\n      }\n      const v = +node.text\n      if (!isNaN(v)) return p.prim(p.int(v, node.loc), node.loc)\n      return {type: 'pvar', 0: node.text, 1: node.loc}\n    case 'string':\n      return {type: 'pstr', 0: node.first.text, 1: node.loc}\n    case 'list':\n      if (!node.values.length) return p.con('()', [], node.loc)\n      if (node.values[0].type !== 'identifier') throw new Error('pat exp must start with identifier')\n      return p.con(node.values[0].text, node.values.slice(1).map(parsePat), node.loc)\n    case 'array':\n      if (!node.values.length) return p.nil(node.loc)\n      let last = node.values[node.values.length - 1]\n      let res = last.type === 'spread' ? parsePat(last.contents) : p.cons(parsePat(last), p.nil(node.loc), node.loc)\n      for (let i=node.values.length - 2; i>=0; i--) {\n        res = p.cons(parsePat(node.values[i]), res, node.loc)\n      }\n      return res\n  }\n  throw new Error('unknown pat' + JSON.stringify(node))\n}","loc":76},"78":{"type":"list","values":[80,81,82],"loc":78},"80":{"type":"identifier","text":",","loc":80},"81":{"type":"identifier","text":"test","loc":81},"82":{"type":"array","values":[83,116,127,152,170,191],"loc":82},"83":{"type":"list","values":[84,88,86],"loc":83},"84":{"type":"identifier","text":",","loc":84},"86":{"type":"string","first":115,"templates":[],"loc":86},"87":{"type":"identifier","text":"@","loc":87},"88":{"type":"list","values":[87,89],"loc":88},"89":{"type":"identifier","text":"1","loc":89},"98":{"type":"raw-code","lang":"javascript","raw":"unwrapArray = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":98},"109":{"type":"raw-code","lang":"javascript","raw":"unwrapArray(arr([1,2,3]))","loc":109},"111":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapArray(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":111},"113":{"type":"raw-code","lang":"javascript","raw":"test = v => valueToString(parse(v))","loc":113},"115":{"type":"stringText","loc":115,"text":"(eprim (pint 1 89) 89)"},"116":{"type":"list","values":[117,118,119],"loc":116},"117":{"type":"identifier","text":",","loc":117},"118":{"type":"array","values":[],"loc":118},"119":{"type":"string","first":120,"templates":[],"loc":119},"120":{"type":"stringText","loc":120,"text":"(evar \\\"nil\\\" 118)"},"127":{"type":"list","values":[128,134,130],"loc":127},"128":{"type":"identifier","text":",","loc":128},"129":{"type":"list","values":[131,132,133],"loc":129},"130":{"type":"string","first":151,"templates":[],"loc":130},"131":{"type":"identifier","text":"fn","loc":131},"132":{"type":"array","values":[136],"loc":132},"133":{"type":"identifier","text":"1","loc":133},"134":{"type":"list","values":[135,129],"loc":134},"135":{"type":"identifier","text":"@","loc":135},"136":{"type":"identifier","text":"a","loc":136},"137":{"type":"raw-code","lang":"javascript","raw":"loop = (v, f) => f(v, n => loop(n, f))","loc":137},"140":{"type":"list","values":[142,146],"loc":140},"142":{"type":"identifier","text":"@","loc":142},"146":{"type":"identifier","text":"12","loc":146},"149":{"type":"raw-code","lang":"javascript","raw":"makePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":149},"151":{"type":"stringText","loc":151,"text":"(elambda (pvar \\\"a\\\" 136) (eprim (pint 1 133) 133) 129)"},"152":{"type":"list","values":[153,154,155],"loc":152},"153":{"type":"identifier","text":",","loc":153},"154":{"type":"list","values":[156,157],"loc":154},"155":{"type":"string","first":169,"templates":[],"loc":155},"156":{"type":"identifier","text":"@","loc":156},"157":{"type":"list","values":[160,161,162,163,164,166],"loc":157},"159":{"type":"blank","loc":159},"160":{"type":"identifier","text":"match","loc":160},"161":{"type":"identifier","text":"x","loc":161},"162":{"type":"identifier","text":"1","loc":162},"163":{"type":"identifier","text":"2","loc":163},"164":{"type":"string","first":165,"templates":[],"loc":164},"165":{"type":"stringText","loc":165,"text":"hi"},"166":{"type":"identifier","text":"1","loc":166},"169":{"type":"stringText","loc":169,"text":"(ematch (evar \\\"x\\\" 161) [(, (pprim (pint 1 162) 162) (eprim (pint 2 163) 163)) (, (pstr \\\"hi\\\" 164) (eprim (pint 1 166) 166))] 157)"},"170":{"type":"list","values":[171,172,173],"loc":170},"171":{"type":"identifier","text":",","loc":171},"172":{"type":"list","values":[174,175],"loc":172},"173":{"type":"string","first":190,"templates":[],"loc":173},"174":{"type":"identifier","text":"@","loc":174},"175":{"type":"list","values":[178,179,186],"loc":175},"177":{"type":"blank","loc":177},"178":{"type":"identifier","text":"let","loc":178},"179":{"type":"array","values":[180,185],"loc":179},"180":{"type":"list","values":[181,182,184],"loc":180},"181":{"type":"identifier","text":",","loc":181},"182":{"type":"identifier","text":"a","loc":182},"184":{"type":"identifier","text":"b","loc":184},"185":{"type":"identifier","text":"c","loc":185},"186":{"type":"identifier","text":"d","loc":186},"188":{"type":"raw-code","lang":"javascript","raw":"p = {\n  prim: (v, loc=-1) => ({type: 'pprim', 0: v, 1: loc}),\n  bool: (v, loc=-1) => ({type: 'pbool', 0: v, 1: loc}),\n  int: (v, loc=-1) => ({type: 'pint', 0: v, 1: loc}),\n  any: loc => ({type: 'pany', 0: loc}),\n  con: (name, args, loc) => ({type: 'pcon', 0: name, 1: arr(args), 2: loc}),\n  cons: (one, two, loc) => p.con('cons', [one, two], loc),\n  nil: loc => p.con('nil', [], loc),\n}","loc":188},"190":{"type":"stringText","loc":190,"text":"(elet (pcon \\\",\\\" [(pvar \\\"a\\\" 182) (pvar \\\"b\\\" 184)] 180) (evar \\\"c\\\" 185) (evar \\\"d\\\" 186) 175)"},"191":{"type":"list","values":[192,193,194],"loc":191},"192":{"type":"identifier","text":",","loc":192},"193":{"type":"list","values":[195,196],"loc":193},"194":{"type":"string","first":210,"templates":[],"loc":194},"195":{"type":"identifier","text":"@","loc":195},"196":{"type":"list","values":[200,201,209],"loc":196},"198":{"type":"blank","loc":198},"200":{"type":"identifier","text":"let","loc":200},"201":{"type":"array","values":[202,208],"loc":201},"202":{"type":"array","values":[203,207],"loc":202},"203":{"type":"identifier","text":"a","loc":203},"204":{"type":"identifier","text":"b","loc":204},"207":{"type":"spread","contents":204,"loc":207},"208":{"type":"identifier","text":"c","loc":208},"209":{"type":"identifier","text":"d","loc":209},"210":{"type":"stringText","loc":210,"text":"(elet (pcon \\\"cons\\\" [(pvar \\\"a\\\" 203) (pvar \\\"b\\\" 204)] 202) (evar \\\"c\\\" 208) (evar \\\"d\\\" 209) 196)"},"211":{"type":"rich-text","contents":[{"id":"b188e96a-7452-4d88-8430-9cf830c2407c","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Parser","styles":{}}],"children":[]}],"loc":211},"213":{"type":"rich-text","contents":[{"id":"8e76a41f-02ae-4fa5-beb2-1c769056e297","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Prelude","styles":{}}],"children":[]},{"id":"eee0519b-267f-4dba-b79e-d5c8d1cac4ac","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some basic handy functions","styles":{}}],"children":[]}],"loc":213},"215":{"type":"rich-text","contents":[{"id":"ad2112fc-475c-4792-a999-68dc69e2495b","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":3},"content":[{"type":"text","text":"Expressions","styles":{}}],"children":[]}],"loc":215},"217":{"type":"rich-text","contents":[{"id":"93144679-d97b-45e4-af01-c151bc706b2e","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":3},"content":[{"type":"text","text":"Patterns","styles":{}}],"children":[]}],"loc":217},"219":{"type":"rich-text","contents":[{"id":"9a25177e-d6f3-4440-9188-01447ef87df0","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":3},"content":[{"type":"text","text":"Statements","styles":{}}],"children":[]}],"loc":219},"221":{"type":"raw-code","lang":"javascript","raw":"parseStmt = (node) => {\n  switch (node.type) {\n    case 'blank':\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return;\n    case 'list':\n      if (node.values.length && node.values[0].type === 'identifier') {\n        const f = stmtForms[node.values[0].text];\n        if (f) {\n          const res = f(node.loc, ...node.values.slice(1))\n          if (res) return res\n        }\n      }\n  }\n  const inner = parse(node)\n  return inner ? {type: 'sexpr', 0: inner, 1: node.loc} : inner\n}","loc":221},"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arr(constructors)}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225},"227":{"type":"raw-code","lang":"javascript","raw":"testStmt = v => valueToString(parseStmt(v))","loc":227},"229":{"type":"list","values":[231,232,233],"loc":229},"231":{"type":"identifier","text":",","loc":231},"232":{"type":"identifier","text":"testStmt","loc":232},"233":{"type":"array","values":[234,240,256],"loc":233},"234":{"type":"list","values":[235,236,239],"loc":234},"235":{"type":"identifier","text":",","loc":235},"236":{"type":"list","values":[237,238],"loc":236},"237":{"type":"identifier","text":"@","loc":237},"238":{"type":"identifier","text":"1","loc":238},"239":{"type":"string","first":251,"templates":[],"loc":239},"240":{"type":"list","values":[241,242,243],"loc":240},"241":{"type":"identifier","text":",","loc":241},"242":{"type":"list","values":[244,245],"loc":242},"243":{"type":"string","first":255,"templates":[],"loc":243},"244":{"type":"identifier","text":"@","loc":244},"245":{"type":"list","values":[252,253,254],"loc":245},"247":{"type":"identifier","text":"testStmt","loc":247},"249":{"type":"list","values":[247,250],"loc":249},"250":{"type":"identifier","text":"1","loc":250},"251":{"type":"stringText","loc":251,"text":"(sexpr (eprim (pint 1 238) 238) 238)"},"252":{"type":"identifier","text":"def","loc":252},"253":{"type":"identifier","text":"hi","loc":253},"254":{"type":"identifier","text":"10","loc":254},"255":{"type":"stringText","loc":255,"text":"(sdef \\\"hi\\\" (eprim (pint 10 254) 254) 245)"},"256":{"type":"list","values":[257,258,259],"loc":256},"257":{"type":"identifier","text":",","loc":257},"258":{"type":"list","values":[260,261],"loc":258},"259":{"type":"string","first":274,"templates":[],"loc":259},"260":{"type":"identifier","text":"@","loc":260},"261":{"type":"list","values":[264,265,266,270],"loc":261},"263":{"type":"blank","loc":263},"264":{"type":"identifier","text":"defn","loc":264},"265":{"type":"identifier","text":"lol","loc":265},"266":{"type":"array","values":[268,269],"loc":266},"268":{"type":"identifier","text":"a","loc":268},"269":{"type":"identifier","text":"b","loc":269},"270":{"type":"list","values":[271,272,273],"loc":270},"271":{"type":"identifier","text":"+","loc":271},"272":{"type":"identifier","text":"a","loc":272},"273":{"type":"identifier","text":"b","loc":273},"274":{"type":"stringText","loc":274,"text":"(sdef \\\"lol\\\" (elambda (pvar \\\"a\\\" 268) (elambda (pvar \\\"b\\\" 269) (eapp (eapp (evar \\\"+\\\" 271) (evar \\\"a\\\" 272) 270) (evar \\\"b\\\" 273) 270) 261) 261) 261)"},"275":{"type":"raw-code","lang":"javascript","raw":"run = v => evaluate(parse(v), {',': a => b => pair(a,b)})","loc":275},"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pprim': return v === node[0][0] ? {} : null\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286},"290":{"type":"raw-code","lang":"javascript","raw":"foldlArr = (i, v, f) => v.type === 'nil' ? i : foldlArr(f(i, v[0]), v[1], f)","loc":290},"292":{"type":"raw-code","lang":"javascript","raw":"set = (obj, k, v) => (obj[k] = v, obj)","loc":292},"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToString(res)\n}\n","loc":335},"369":{"type":"list","values":[371,372,373],"loc":369},"371":{"type":"identifier","text":",","loc":371},"372":{"type":"identifier","text":"run","loc":372},"373":{"type":"array","values":[374,388,407,539,558],"loc":373},"374":{"type":"list","values":[375,376,387],"loc":374},"375":{"type":"identifier","text":",","loc":375},"376":{"type":"list","values":[377,378],"loc":376},"377":{"type":"identifier","text":"@","loc":377},"378":{"type":"list","values":[381,386],"loc":378},"381":{"type":"list","values":[382,383,385],"loc":381},"382":{"type":"identifier","text":"fn","loc":382},"383":{"type":"array","values":[384],"loc":383},"384":{"type":"identifier","text":"x","loc":384},"385":{"type":"identifier","text":"1","loc":385},"386":{"type":"identifier","text":"0","loc":386},"387":{"type":"identifier","text":"1","loc":387},"388":{"type":"list","values":[389,395,391],"loc":388},"389":{"type":"identifier","text":",","loc":389},"390":{"type":"list","values":[392,393,394],"loc":390},"391":{"type":"identifier","text":"1","loc":391},"392":{"type":"identifier","text":",","loc":392},"393":{"type":"identifier","text":"1","loc":393},"394":{"type":"identifier","text":"2","loc":394},"395":{"type":"list","values":[396,397],"loc":395},"396":{"type":"identifier","text":"@","loc":396},"397":{"type":"list","values":[398,400,406],"loc":397},"398":{"type":"identifier","text":"let","loc":398},"399":{"type":"blank","loc":399},"400":{"type":"array","values":[402,390],"loc":400},"402":{"type":"list","values":[403,404,405],"loc":402},"403":{"type":"identifier","text":",","loc":403},"404":{"type":"identifier","text":"x","loc":404},"405":{"type":"identifier","text":"_","loc":405},"406":{"type":"identifier","text":"x","loc":406},"407":{"type":"list","values":[408,409,410],"loc":407},"408":{"type":"identifier","text":",","loc":408},"409":{"type":"list","values":[412,413],"loc":409},"410":{"type":"identifier","text":"10","loc":410},"412":{"type":"identifier","text":"@","loc":412},"413":{"type":"list","values":[414,415,416,417,418,419],"loc":413},"414":{"type":"identifier","text":"match","loc":414},"415":{"type":"identifier","text":"3","loc":415},"416":{"type":"identifier","text":"1","loc":416},"417":{"type":"identifier","text":"2","loc":417},"418":{"type":"identifier","text":"3","loc":418},"419":{"type":"identifier","text":"10","loc":419},"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node[0]] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420},"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])\n}","loc":422},"455":{"type":"list","values":[457,458,459],"loc":455},"457":{"type":"identifier","text":",","loc":457},"458":{"type":"identifier","text":"stmts","loc":458},"459":{"type":"array","values":[460,468,478,495,520],"loc":459},"460":{"type":"list","values":[461,462,463],"loc":460},"461":{"type":"identifier","text":",","loc":461},"462":{"type":"array","values":[466],"loc":462},"463":{"type":"string","first":467,"templates":[],"loc":463},"466":{"type":"identifier","text":"0","loc":466},"467":{"type":"stringText","loc":467,"text":"0"},"468":{"type":"list","values":[469,470,471],"loc":468},"469":{"type":"identifier","text":",","loc":469},"470":{"type":"array","values":[472,476],"loc":470},"471":{"type":"string","first":477,"templates":[],"loc":471},"472":{"type":"list","values":[473,474,475],"loc":472},"473":{"type":"identifier","text":"def","loc":473},"474":{"type":"identifier","text":"n","loc":474},"475":{"type":"identifier","text":"10","loc":475},"476":{"type":"identifier","text":"n","loc":476},"477":{"type":"stringText","loc":477,"text":"10"},"478":{"type":"list","values":[479,480,481],"loc":478},"479":{"type":"identifier","text":",","loc":479},"480":{"type":"array","values":[482,491],"loc":480},"481":{"type":"string","first":494,"templates":[],"loc":481},"482":{"type":"list","values":[483,484,485,487],"loc":482},"483":{"type":"identifier","text":"defn","loc":483},"484":{"type":"identifier","text":"hi","loc":484},"485":{"type":"array","values":[486],"loc":485},"486":{"type":"identifier","text":"x","loc":486},"487":{"type":"list","values":[488,489,490],"loc":487},"488":{"type":"identifier","text":",","loc":488},"489":{"type":"identifier","text":"x","loc":489},"490":{"type":"identifier","text":"2","loc":490},"491":{"type":"list","values":[492,493],"loc":491},"492":{"type":"identifier","text":"hi","loc":492},"493":{"type":"identifier","text":"5","loc":493},"494":{"type":"stringText","loc":494,"text":"(, 5 2)"},"495":{"type":"list","values":[496,497,498],"loc":495},"496":{"type":"identifier","text":",","loc":496},"497":{"type":"array","values":[499,516],"loc":497},"498":{"type":"string","first":519,"templates":[],"loc":498},"499":{"type":"list","values":[500,508,511,514],"loc":499},"500":{"type":"identifier","text":"deftype","loc":500},"506":{"type":"blank","loc":506},"508":{"type":"list","values":[509,510],"loc":508},"509":{"type":"identifier","text":"optsion","loc":509},"510":{"type":"identifier","text":"a","loc":510},"511":{"type":"list","values":[512,513],"loc":511},"512":{"type":"identifier","text":"some","loc":512},"513":{"type":"identifier","text":"a","loc":513},"514":{"type":"list","values":[515],"loc":514},"515":{"type":"identifier","text":"none","loc":515},"516":{"type":"list","values":[517,518],"loc":516},"517":{"type":"identifier","text":"some","loc":517},"518":{"type":"identifier","text":"10","loc":518},"519":{"type":"stringText","loc":519,"text":"(some 10)"},"520":{"type":"list","values":[521,522,523],"loc":520},"521":{"type":"identifier","text":",","loc":521},"522":{"type":"array","values":[524,532],"loc":522},"523":{"type":"string","first":538,"templates":[],"loc":523},"524":{"type":"list","values":[525,526,527],"loc":524},"525":{"type":"identifier","text":"deftype","loc":525},"526":{"type":"identifier","text":"lots","loc":526},"527":{"type":"list","values":[528,529,530,531],"loc":527},"528":{"type":"identifier","text":"lol","loc":528},"529":{"type":"identifier","text":"a","loc":529},"530":{"type":"identifier","text":"b","loc":530},"531":{"type":"identifier","text":"c","loc":531},"532":{"type":"list","values":[533,534,535,536],"loc":532},"533":{"type":"identifier","text":"lol","loc":533},"534":{"type":"identifier","text":"1","loc":534},"535":{"type":"identifier","text":"true","loc":535},"536":{"type":"string","first":537,"templates":[],"loc":536},"537":{"type":"stringText","loc":537,"text":"hi"},"538":{"type":"stringText","loc":538,"text":"(lol 1 true \\\"hi\\\")"},"539":{"type":"list","values":[540,541,542],"loc":539},"540":{"type":"identifier","text":",","loc":540},"541":{"type":"list","values":[544,545],"loc":541},"542":{"type":"string","first":550,"templates":[],"loc":542},"543":{"type":"stringText","loc":543,"text":""},"544":{"type":"identifier","text":"@","loc":544},"545":{"type":"string","first":546,"templates":[{"expr":548,"suffix":549}],"loc":545},"546":{"type":"stringText","loc":546,"text":"hi "},"548":{"type":"identifier","text":"1","loc":548},"549":{"type":"stringText","text":".","loc":549},"550":{"type":"stringText","loc":550,"text":"hi 1."},"553":{"type":"stringText","loc":553,"text":""},"558":{"type":"list","values":[559,563,561],"loc":558},"559":{"type":"identifier","text":",","loc":559},"560":{"type":"string","first":562,"templates":[],"loc":560},"561":{"type":"string","first":565,"templates":[],"loc":561},"562":{"type":"stringText","loc":562,"text":"hi"},"563":{"type":"list","values":[564,560],"loc":563},"564":{"type":"identifier","text":"@","loc":564},"565":{"type":"stringText","loc":565,"text":"hi"},"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return ' + compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566},"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[1])\n  }\n}","loc":568},"-1":{"type":"list","values":[0],"loc":-1}},"root":-1,"meta":{},"history":[{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":1},{"idx":347,"type":"child","at":1},{"idx":349,"type":"child","at":1},{"idx":356,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":1},{"idx":347,"type":"child","at":1},{"idx":349,"type":"child","at":1},{"idx":356,"type":"subtext","at":1}]}],"prev":{"356":{"type":"identifier","text":"2","loc":356}},"meta":{},"metaPrev":{},"map":{"356":{"type":"identifier","text":"212","loc":356}},"nsMap":{},"nsPrev":{},"id":0,"ts":1714628087.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":1,"ts":1714628134.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    ca\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":2,"ts":1714628134.455,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    ca\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":3,"ts":1714628134.527,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    cas \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":4,"ts":1714628134.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    cas \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":5,"ts":1714628135.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":6,"ts":1714628135.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case '\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":7,"ts":1714628135.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case '\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":8,"ts":1714628135.552,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":9,"ts":1714628135.736,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa y\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":10,"ts":1714628135.803,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa y\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":11,"ts":1714628136.272,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":12,"ts":1714628136.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pa\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":13,"ts":1714628136.659,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":14,"ts":1714628136.951,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":15,"ts":1714628137.148,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":16,"ts":1714628137.204,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":17,"ts":1714628137.399,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': retu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":18,"ts":1714628137.643,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': retu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":19,"ts":1714628137.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":20,"ts":1714628137.86,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":21,"ts":1714628138.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {[\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":22,"ts":1714628141.168,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {[\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":23,"ts":1714628141.43,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":24,"ts":1714628170.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        c\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":25,"ts":1714628171.157,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        c\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        con\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":26,"ts":1714628171.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        con\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        cons\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":27,"ts":1714628171.281,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        cons\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":28,"ts":1714628171.365,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":29,"ts":1714628171.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":30,"ts":1714628171.64,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agrs\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":31,"ts":1714628171.869,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agrs\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agrs \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":32,"ts":1714628172.24,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agrs \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agrs\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":33,"ts":1714628172.376,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agrs\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":34,"ts":1714628172.515,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const agr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const ag\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":35,"ts":1714628172.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const ag\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":36,"ts":1714628172.791,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const arg\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":37,"ts":1714628172.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const arg\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":38,"ts":1714628172.942,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":39,"ts":1714628173.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args  =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":40,"ts":1714628173.346,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args  =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args  \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":41,"ts":1714628173.582,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args  \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":42,"ts":1714628173.76,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":43,"ts":1714628173.894,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":44,"ts":1714628174.029,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = un\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":45,"ts":1714628174.518,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = un\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":46,"ts":1714628174.625,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwra\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":47,"ts":1714628174.782,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwra\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrap\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":48,"ts":1714628174.874,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrap\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapA\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":49,"ts":1714628175.154,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapA\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapAr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":50,"ts":1714628175.339,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapAr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":51,"ts":1714628175.464,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":52,"ts":1714628175.681,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(no\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":53,"ts":1714628176.319,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(no\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(nod\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":54,"ts":1714628176.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(nod\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":55,"ts":1714628176.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":56,"ts":1714628176.577,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":57,"ts":1714628177.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1]\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":58,"ts":1714628178.037,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1]\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":59,"ts":1714628178.318,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":60,"ts":1714628182.155,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        c\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":61,"ts":1714628191.023,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        c\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        con\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":62,"ts":1714628191.135,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        con\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        cons\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":63,"ts":1714628191.185,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        cons\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":64,"ts":1714628191.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":65,"ts":1714628191.315,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":66,"ts":1714628191.562,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":67,"ts":1714628192.652,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":68,"ts":1714628192.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":69,"ts":1714628193.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const sco\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":70,"ts":1714628193.619,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const sco\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scop\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":71,"ts":1714628193.696,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scop\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":72,"ts":1714628193.804,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":73,"ts":1714628193.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":74,"ts":1714628194.033,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":75,"ts":1714628194.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":76,"ts":1714628194.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        f\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":77,"ts":1714628195.788,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        f\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":78,"ts":1714628195.847,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":79,"ts":1714628195.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for 9\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":80,"ts":1714628196.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for 9\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":81,"ts":1714628196.375,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":82,"ts":1714628196.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (le\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":83,"ts":1714628196.814,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (le\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":84,"ts":1714628196.93,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":85,"ts":1714628196.966,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (l\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":86,"ts":1714628197.433,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (l\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":87,"ts":1714628197.801,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (l\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":88,"ts":1714628198.222,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (l\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":89,"ts":1714628198.358,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":90,"ts":1714628198.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":91,"ts":1714628198.441,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":92,"ts":1714628198.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0;\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":93,"ts":1714628198.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0;\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":94,"ts":1714628199.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":95,"ts":1714628199.227,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":96,"ts":1714628199.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":97,"ts":1714628200.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":98,"ts":1714628200.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":99,"ts":1714628200.412,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.l\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":100,"ts":1714628200.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.l\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.len\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":101,"ts":1714628200.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.len\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.lengt\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":102,"ts":1714628200.825,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.lengt\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":103,"ts":1714628200.889,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length;\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":104,"ts":1714628201.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length;\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":105,"ts":1714628201.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":106,"ts":1714628201.37,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i+\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":107,"ts":1714628201.569,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i+\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":108,"ts":1714628201.709,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++)\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":109,"ts":1714628201.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++)\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":110,"ts":1714628201.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":111,"ts":1714628202.065,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":112,"ts":1714628202.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          c\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":113,"ts":1714628205.033,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          c\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          con\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":114,"ts":1714628205.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          con\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          cons\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":115,"ts":1714628205.153,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          cons\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":116,"ts":1714628205.232,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":117,"ts":1714628205.288,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":118,"ts":1714628206.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const su\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":119,"ts":1714628206.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const su\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":120,"ts":1714628206.713,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":121,"ts":1714628206.819,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":122,"ts":1714628206.891,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub =\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":123,"ts":1714628206.967,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = e\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":124,"ts":1714628207.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = e\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = ev\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":125,"ts":1714628207.236,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = ev\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = eva\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":126,"ts":1714628207.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = eva\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = eval\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":127,"ts":1714628207.46,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = eval\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalP\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":128,"ts":1714628207.65,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalP\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPa\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":129,"ts":1714628207.806,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPa\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":130,"ts":1714628207.868,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":131,"ts":1714628208.023,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":132,"ts":1714628210.05,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":133,"ts":1714628210.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":134,"ts":1714628210.365,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":135,"ts":1714628210.585,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i]\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":136,"ts":1714628210.672,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i]\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i],\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":137,"ts":1714628210.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i],\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":138,"ts":1714628211.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":139,"ts":1714628212.702,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":140,"ts":1714628212.78,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":141,"ts":1714628213,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i]\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":142,"ts":1714628213.246,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i]\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":143,"ts":1714628213.477,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":144,"ts":1714628214.74,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":145,"ts":1714628214.951,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":146,"ts":1714628215.097,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":147,"ts":1714628215.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!su\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":148,"ts":1714628215.492,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!su\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":149,"ts":1714628215.575,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub)\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":150,"ts":1714628215.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub)\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":151,"ts":1714628217.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) re\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":152,"ts":1714628217.446,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) re\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) ret\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":153,"ts":1714628217.674,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) ret\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) retu\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":154,"ts":1714628217.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) retu\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":155,"ts":1714628217.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":156,"ts":1714628218.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          O\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":157,"ts":1714628219.339,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          O\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Ob\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":158,"ts":1714628219.474,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Ob\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Obje\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":159,"ts":1714628219.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Obje\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Objec\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":160,"ts":1714628219.625,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Objec\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":161,"ts":1714628219.788,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":162,"ts":1714628219.91,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":163,"ts":1714628219.995,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.a\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.as\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":164,"ts":1714628220.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.as\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.ass\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":165,"ts":1714628220.218,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.ass\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assi\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":166,"ts":1714628220.632,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assi\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assig\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":167,"ts":1714628220.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assig\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":168,"ts":1714628220.827,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":169,"ts":1714628220.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":170,"ts":1714628221.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":171,"ts":1714628221.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":172,"ts":1714628221.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope,\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":173,"ts":1714628222.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope,\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":174,"ts":1714628222.197,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":175,"ts":1714628222.331,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, s\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, su\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":176,"ts":1714628222.479,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, su\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":177,"ts":1714628222.559,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":178,"ts":1714628222.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":179,"ts":1714628223.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n          \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":180,"ts":1714628223.527,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":181,"ts":1714628223.661,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":182,"ts":1714628223.976,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        re\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":183,"ts":1714628224.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        re\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        retu\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":184,"ts":1714628224.306,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        retu\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":185,"ts":1714628224.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":186,"ts":1714628224.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return \n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":187,"ts":1714628226.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return sc\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return sco\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":188,"ts":1714628226.097,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return sco\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scop\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":189,"ts":1714628226.147,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scop\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":190,"ts":1714628226.165,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"idx":286,"type":"end"}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n        return foldlArr([{}, 0], node[1], ([scope, i], pat) => {\n          [\n          {...scope, ...evalPat(pat, v[i])},\n          i + 1\n        ])[0]\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":191,"ts":1714628229.593,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArr(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":192,"ts":1714628234.361,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":1},{"idx":347,"type":"child","at":0},{"idx":351,"type":"child","at":2},{"idx":353,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":1},{"idx":347,"type":"child","at":0},{"idx":351,"type":"child","at":2},{"idx":353,"type":"subtext","at":1}]}],"prev":{"353":{"type":"identifier","text":"_","loc":353}},"meta":{},"metaPrev":{},"map":{"353":{"type":"identifier","text":"y","loc":353}},"nsMap":{},"nsPrev":{},"id":193,"ts":1714628240.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":2},{"idx":350,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":2},{"idx":350,"type":"subtext","at":1}]}],"prev":{"350":{"type":"identifier","text":"x","loc":350}},"meta":{},"metaPrev":{},"map":{"350":{"type":"identifier","text":"y","loc":350}},"nsMap":{},"nsPrev":{},"id":194,"ts":1714628242.834,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"idx":286,"type":"start"}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":195,"ts":1714628249.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    ca\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":196,"ts":1714628250.216,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    ca\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":197,"ts":1714628250.291,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":198,"ts":1714628250.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":199,"ts":1714628250.688,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case '\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":200,"ts":1714628250.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case '\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":201,"ts":1714628251.024,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pin\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":202,"ts":1714628251.331,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pin\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":203,"ts":1714628251.511,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":204,"ts":1714628251.689,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":205,"ts":1714628252.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":206,"ts":1714628252.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":207,"ts":1714628254.632,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': ret\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":208,"ts":1714628254.856,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': ret\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': retur\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":209,"ts":1714628254.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': retur\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":210,"ts":1714628255.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":211,"ts":1714628258.785,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":212,"ts":1714628258.937,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v =\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":213,"ts":1714628259.075,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v =\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v ==\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":214,"ts":1714628259.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v ==\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v ===\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":215,"ts":1714628259.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v ===\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":216,"ts":1714628259.474,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === no\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":217,"ts":1714628259.713,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === no\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === nod\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":218,"ts":1714628259.746,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === nod\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":219,"ts":1714628259.834,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":220,"ts":1714628260.63,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0]\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":221,"ts":1714628261.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0]\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":222,"ts":1714628261.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ?\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":223,"ts":1714628261.689,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ?\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":224,"ts":1714628261.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":225,"ts":1714628262.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":226,"ts":1714628262.362,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} :\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":227,"ts":1714628262.474,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} :\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":228,"ts":1714628262.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : nu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":229,"ts":1714628262.77,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : nu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : nul\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":230,"ts":1714628263.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : nul\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":231,"ts":1714628263.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":232,"ts":1714628264.893,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    c\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":233,"ts":1714628265.084,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    c\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":234,"ts":1714628265.169,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    cas\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":235,"ts":1714628265.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":236,"ts":1714628265.471,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case '\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":237,"ts":1714628265.54,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case '\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":238,"ts":1714628265.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pb\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":239,"ts":1714628266.039,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pb\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbo\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":240,"ts":1714628266.115,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbo\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pboo\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":241,"ts":1714628266.189,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pboo\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":242,"ts":1714628266.518,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":243,"ts":1714628266.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":244,"ts":1714628267.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":245,"ts":1714628267.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":246,"ts":1714628267.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': ret\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":247,"ts":1714628267.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': ret\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': retu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":248,"ts":1714628267.907,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': retu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': return\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":249,"ts":1714628268.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': return\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":250,"ts":1714628268.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pbool': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pb\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":251,"ts":1714628269.285,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pb\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":252,"ts":1714628269.499,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'p\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pp\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":253,"ts":1714628270.033,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pp\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'ppri\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":254,"ts":1714628270.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'ppri\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":255,"ts":1714628270.333,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":256,"ts":1714628270.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim'\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":257,"ts":1714628270.78,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim':\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":258,"ts":1714628270.868,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":259,"ts":1714628271.109,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': re\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': retu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":260,"ts":1714628271.325,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': retu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': retur\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":261,"ts":1714628271.44,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': retur\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":262,"ts":1714628271.632,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":263,"ts":1714628271.91,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":264,"ts":1714628272.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":265,"ts":1714628272.301,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v =\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":266,"ts":1714628272.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v =\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v ==\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":267,"ts":1714628272.507,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v ==\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v ===\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":268,"ts":1714628272.653,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v ===\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":269,"ts":1714628273.335,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === no\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":270,"ts":1714628273.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === no\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":271,"ts":1714628274.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":272,"ts":1714628274.185,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0]\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":273,"ts":1714628274.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0]\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":274,"ts":1714628274.814,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0]\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":275,"ts":1714628275.011,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0]\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":276,"ts":1714628275.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ?\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":277,"ts":1714628275.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ?\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":278,"ts":1714628275.681,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":279,"ts":1714628275.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {}\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":280,"ts":1714628275.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} :\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":281,"ts":1714628276.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} :\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":282,"ts":1714628276.207,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : \n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : nu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":283,"ts":1714628276.438,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : nu\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : nul\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":284,"ts":1714628276.664,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : nul\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : null\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":285,"ts":1714628276.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"type":"rich-text","idx":286,"sel":null}]}],"prev":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pint': return v === node[0] ? {} : null\n    case 'pprim': return v === node[0][0] ? {} : null\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"meta":{},"metaPrev":{},"map":{"286":{"type":"raw-code","lang":"javascript","raw":"evalPat = (node, v) => {\n  switch (node.type) {\n    case 'pany': return {}\n    case 'pprim': return v === node[0][0] ? {} : null\n    case 'pvar':\n      return {[node[0]]: v}\n    case 'pcon':\n      if (v.type === node[0]) {\n        const args = unwrapArray(node[1])\n        const scope = {}\n        for (let i=0; i<args.length; i++) {\n          const sub = evalPat(args[i], v[i])\n          if (!sub) return\n          Object.assign(scope, sub)\n        }\n        return scope\n      }\n  }\n}       ","loc":286}},"nsMap":{},"nsPrev":{},"id":286,"ts":1714628277.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"idx":21,"type":"end"}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      return evaluate(node[2], {...scope, ...evalPat(node[0], evaluate(node[1], scope))})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      return evaluate(node[2], {...scope, ...})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":287,"ts":1714628295.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      return evaluate(node[2], {...scope, ...})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      return evaluate(node[2], {...scope, ...go})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":288,"ts":1714628296.574,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      return evaluate(node[2], {...scope, ...go})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":289,"ts":1714628296.739,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n    \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":290,"ts":1714628297.533,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n    \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":291,"ts":1714628297.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      c\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":292,"ts":1714628298.201,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      c\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      con\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":293,"ts":1714628298.289,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      con\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      cons\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":294,"ts":1714628298.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      cons\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":295,"ts":1714628298.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":296,"ts":1714628298.451,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const g\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":297,"ts":1714628299.047,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const g\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const go\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":298,"ts":1714628299.157,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const go\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":299,"ts":1714628299.234,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":300,"ts":1714628299.322,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got =\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":301,"ts":1714628299.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got =\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":302,"ts":1714628299.624,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":303,"ts":1714628299.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":304,"ts":1714628300.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      i\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":305,"ts":1714628300.309,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      i\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      i \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":306,"ts":1714628300.434,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      i \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      i\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":307,"ts":1714628300.911,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      i\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":308,"ts":1714628301.05,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":309,"ts":1714628301.144,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":310,"ts":1714628301.241,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":311,"ts":1714628301.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!g\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":312,"ts":1714628301.598,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!g\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":313,"ts":1714628301.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":314,"ts":1714628301.956,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":315,"ts":1714628302.02,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) t\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":316,"ts":1714628302.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) t\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) thr\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":317,"ts":1714628302.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) thr\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) thro\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":318,"ts":1714628302.572,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) thro\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":319,"ts":1714628302.673,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":320,"ts":1714628302.767,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw n\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":321,"ts":1714628302.893,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw n\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":322,"ts":1714628302.98,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":323,"ts":1714628303.022,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new e\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":324,"ts":1714628303.257,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new e\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new er\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":325,"ts":1714628303.606,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new er\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new e\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":326,"ts":1714628303.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new e\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":327,"ts":1714628303.979,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new E\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":328,"ts":1714628304.076,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new E\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Er\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":329,"ts":1714628304.273,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Er\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Err\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":330,"ts":1714628304.395,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Err\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":331,"ts":1714628304.505,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":332,"ts":1714628304.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":333,"ts":1714628304.852,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`l\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":334,"ts":1714628305.138,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`l\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":335,"ts":1714628305.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":336,"ts":1714628305.317,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pa\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":337,"ts":1714628305.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pa\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pat\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":338,"ts":1714628305.767,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pat\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let patt\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":339,"ts":1714628305.904,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let patt\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let patter\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":340,"ts":1714628306.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let patter\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":341,"ts":1714628306.106,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":342,"ts":1714628306.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern di\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":343,"ts":1714628306.367,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern di\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern did\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":344,"ts":1714628306.493,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern did\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didn\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":345,"ts":1714628306.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didn\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":346,"ts":1714628306.693,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt m\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":347,"ts":1714628306.761,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt m\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt mat\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":348,"ts":1714628306.928,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt mat\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":349,"ts":1714628307.174,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":350,"ts":1714628307.347,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match :\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":351,"ts":1714628307.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match :\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":352,"ts":1714628307.898,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":353,"ts":1714628308.021,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":354,"ts":1714628308.264,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$ \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":355,"ts":1714628308.397,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$ \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$ {\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":356,"ts":1714628308.557,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$ {\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$ \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":357,"ts":1714628309.029,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$ \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":358,"ts":1714628309.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:$\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":359,"ts":1714628309.42,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match:\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":360,"ts":1714628309.507,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: \n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":361,"ts":1714628309.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${J\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":362,"ts":1714628310.001,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${J\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":363,"ts":1714628310.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.s\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":364,"ts":1714628310.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.s\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.str\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":365,"ts":1714628310.678,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.str\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stri\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":366,"ts":1714628310.961,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stri\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.strig\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":367,"ts":1714628311.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.strig\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stri\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":368,"ts":1714628311.589,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stri\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.strin\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":369,"ts":1714628311.766,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.strin\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.string\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":370,"ts":1714628311.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.string\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringi\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":371,"ts":1714628311.949,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringi\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringif\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":372,"ts":1714628312.057,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringif\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":373,"ts":1714628312.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":374,"ts":1714628312.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(in\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":375,"ts":1714628317.66,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(in\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(ini\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":376,"ts":1714628317.765,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(ini\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":377,"ts":1714628317.941,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":378,"ts":1714628318.264,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":379,"ts":1714628318.604,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":380,"ts":1714628319.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":381,"ts":1714628319.59,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], evaluate(node[1], scope))\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], )\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":382,"ts":1714628322.696,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], )\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], in)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":383,"ts":1714628322.978,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], in)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], ini)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":384,"ts":1714628323.074,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], ini)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":385,"ts":1714628323.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n    \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":386,"ts":1714628323.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n    \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":387,"ts":1714628324.142,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      c\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":388,"ts":1714628324.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      c\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      con\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":389,"ts":1714628324.465,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      con\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      cons\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":390,"ts":1714628324.51,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      cons\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":391,"ts":1714628324.557,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":392,"ts":1714628324.613,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const in\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":393,"ts":1714628324.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const in\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const ini\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":394,"ts":1714628324.858,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const ini\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":395,"ts":1714628324.956,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":396,"ts":1714628325.123,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = \n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":397,"ts":1714628325.413,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":1},{"idx":347,"type":"child","at":0},{"idx":351,"type":"child","at":2},{"idx":353,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":1},{"idx":347,"type":"child","at":0},{"idx":351,"type":"child","at":2},{"idx":353,"type":"subtext","at":1}]}],"prev":{"353":{"type":"identifier","text":"y","loc":353}},"meta":{},"metaPrev":{},"map":{"353":{"type":"identifier","text":"3","loc":353}},"nsMap":{},"nsPrev":{},"id":398,"ts":1714628334.042,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":2},{"idx":350,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":2},{"idx":350,"type":"subtext","at":0}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"child","at":1},{"idx":345,"type":"child","at":2},{"idx":350,"type":"subtext","at":1}]}],"prev":{"350":{"type":"identifier","text":"y","loc":350}},"meta":{},"metaPrev":{},"map":{"350":{"type":"identifier","text":"x","loc":350}},"nsMap":{},"nsPrev":{},"id":399,"ts":1714628341.345,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":218,"idx":212},{"type":"ns-top","idx":218},{"idx":217,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":218,"idx":212},{"type":"ns-top","idx":218},{"idx":217,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"218":{"type":"normal","top":217,"id":218,"children":[189,77],"collapsed":false}},"nsPrev":{"218":{"type":"normal","top":217,"id":218,"children":[189,77],"collapsed":true}},"id":400,"ts":1714628350.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":218,"idx":212},{"type":"ns-top","idx":218},{"idx":217,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":218,"idx":212},{"type":"ns-top","idx":218},{"idx":217,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"218":{"type":"normal","top":217,"id":218,"children":[189,77],"collapsed":true}},"nsPrev":{"218":{"type":"normal","top":217,"id":218,"children":[189,77],"collapsed":false}},"id":401,"ts":1714628362.879,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n      \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":402,"ts":1714628369.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n      \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":403,"ts":1714628369.401,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     ca\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":404,"ts":1714628369.585,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     ca\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     cas\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":405,"ts":1714628369.681,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     cas\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     ca\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":406,"ts":1714628369.91,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     ca\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     c\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":407,"ts":1714628370.042,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     c\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":408,"ts":1714628370.241,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n     \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":409,"ts":1714628370.409,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    ca\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":410,"ts":1714628370.569,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    ca\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    cas\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":411,"ts":1714628370.629,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    cas\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":412,"ts":1714628370.882,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case '\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":413,"ts":1714628370.985,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case '\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'e\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":414,"ts":1714628371.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'e\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'em\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":415,"ts":1714628371.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'em\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'emat\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":416,"ts":1714628371.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'emat\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":417,"ts":1714628371.887,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch'\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":418,"ts":1714628372.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch'\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":419,"ts":1714628372.31,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n    \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":420,"ts":1714628372.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n    \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":421,"ts":1714628374.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      c\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":422,"ts":1714628447.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      c\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      con\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":423,"ts":1714628447.695,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      con\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      cons\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":424,"ts":1714628447.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      cons\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":425,"ts":1714628447.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const t\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":426,"ts":1714628447.932,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const t\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const ta\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":427,"ts":1714628448.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const ta\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const targ\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":428,"ts":1714628448.28,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const targ\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":429,"ts":1714628448.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":430,"ts":1714628448.606,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":431,"ts":1714628448.729,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = e\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":432,"ts":1714628448.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = e\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = ev\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":433,"ts":1714628449.009,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = ev\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = eval\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":434,"ts":1714628449.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = eval\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evalu\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":435,"ts":1714628449.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evalu\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evalua\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":436,"ts":1714628449.293,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evalua\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":437,"ts":1714628449.459,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":438,"ts":1714628449.74,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(no\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":439,"ts":1714628449.975,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(no\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(nod\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":440,"ts":1714628450.019,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(nod\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":441,"ts":1714628450.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":442,"ts":1714628450.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0]\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":443,"ts":1714628450.452,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0]\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0],\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":444,"ts":1714628450.732,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0],\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":445,"ts":1714628450.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], sc\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":446,"ts":1714628451.023,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], sc\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], sco\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":447,"ts":1714628451.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], sco\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scor\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":448,"ts":1714628451.433,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scor\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], score\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":449,"ts":1714628451.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], score\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scor\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":450,"ts":1714628451.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scor\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], sco\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":451,"ts":1714628451.874,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], sco\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scop\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":452,"ts":1714628452.122,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scop\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopre\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":453,"ts":1714628452.206,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopre\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopre)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":454,"ts":1714628452.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopre)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopre\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":455,"ts":1714628452.785,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopre\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopr\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":456,"ts":1714628452.906,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scopr\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scop\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":457,"ts":1714628453.042,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scop\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":458,"ts":1714628453.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":459,"ts":1714628453.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":460,"ts":1714628453.445,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      fo\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":461,"ts":1714628457.851,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      fo\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":462,"ts":1714628457.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":463,"ts":1714628458.089,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":464,"ts":1714628458.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (le\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":465,"ts":1714628459.067,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (le\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":466,"ts":1714628459.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":467,"ts":1714628459.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":468,"ts":1714628459.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [k\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":469,"ts":1714628459.85,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [k\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [kas\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":470,"ts":1714628460.001,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [kas\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [ka\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":471,"ts":1714628460.308,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [ka\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [k\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":472,"ts":1714628460.421,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [k\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":473,"ts":1714628460.545,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [p\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":474,"ts":1714628460.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [p\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":475,"ts":1714628460.908,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat,\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":476,"ts":1714628460.96,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat,\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":477,"ts":1714628461.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, b\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":478,"ts":1714628462.024,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, b\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, bo\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":479,"ts":1714628462.109,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, bo\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, bod\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":480,"ts":1714628462.206,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, bod\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":481,"ts":1714628462.273,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body]\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":482,"ts":1714628462.472,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body]\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":483,"ts":1714628462.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":484,"ts":1714628462.933,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":485,"ts":1714628463.013,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of un\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":486,"ts":1714628464.103,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of un\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unw\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":487,"ts":1714628464.145,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unw\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwr\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":488,"ts":1714628464.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwr\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwra\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":489,"ts":1714628464.367,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwra\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrap\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":490,"ts":1714628464.455,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrap\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapA\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":491,"ts":1714628464.632,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapA\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapAr\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":492,"ts":1714628464.806,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapAr\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArra\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":493,"ts":1714628464.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArra\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":494,"ts":1714628465.105,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray*\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":495,"ts":1714628465.327,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray*\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":496,"ts":1714628466.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":497,"ts":1714628466.23,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(no\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":498,"ts":1714628466.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(no\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(nod\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":499,"ts":1714628466.538,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(nod\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":500,"ts":1714628466.602,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":501,"ts":1714628466.746,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":502,"ts":1714628466.857,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1]\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":503,"ts":1714628466.968,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1]\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":504,"ts":1714628467.562,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1]))\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":505,"ts":1714628468.019,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1]))\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":506,"ts":1714628468.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":507,"ts":1714628468.213,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":508,"ts":1714628468.405,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":509,"ts":1714628468.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":510,"ts":1714628470.392,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"idx":21,"type":"end"}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":511,"ts":1714628471.99,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        co\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":512,"ts":1714628475.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        co\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        con\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":513,"ts":1714628475.328,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        con\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        cons\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":514,"ts":1714628475.372,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        cons\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":515,"ts":1714628475.44,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":516,"ts":1714628475.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const g\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":517,"ts":1714628475.641,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const g\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":518,"ts":1714628475.769,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":519,"ts":1714628475.936,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got =\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":520,"ts":1714628476.012,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got =\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":521,"ts":1714628476.143,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = e\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":522,"ts":1714628476.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = e\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = ev\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":523,"ts":1714628476.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = ev\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = eva\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":524,"ts":1714628476.535,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = eva\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = eval\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":525,"ts":1714628476.62,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = eval\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalP\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":526,"ts":1714628476.77,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalP\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPa\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":527,"ts":1714628476.898,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPa\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":528,"ts":1714628476.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":529,"ts":1714628477.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(p\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":530,"ts":1714628478.588,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(p\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":531,"ts":1714628478.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat,\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":532,"ts":1714628478.879,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat,\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":533,"ts":1714628479.529,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, bo\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":534,"ts":1714628480.127,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, bo\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, body\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":535,"ts":1714628480.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, body\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, bod\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":536,"ts":1714628481.158,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, bod\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, bo\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":537,"ts":1714628481.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, bo\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, b\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":538,"ts":1714628481.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, b\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":539,"ts":1714628481.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, t\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":540,"ts":1714628482.868,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, t\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, ta\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":541,"ts":1714628483.005,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, ta\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, targ\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":542,"ts":1714628483.129,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, targ\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":543,"ts":1714628483.257,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":544,"ts":1714628483.562,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":545,"ts":1714628484.673,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":546,"ts":1714628484.866,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":547,"ts":1714628484.974,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":548,"ts":1714628485.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (g\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":549,"ts":1714628485.492,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (g\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":550,"ts":1714628485.595,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got)\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":551,"ts":1714628485.898,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got)\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":552,"ts":1714628486.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":553,"ts":1714628486.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":554,"ts":1714628486.708,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          re\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":555,"ts":1714628486.905,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          re\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          ret\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":556,"ts":1714628487.105,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          ret\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          retu\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":557,"ts":1714628487.148,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          retu\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":558,"ts":1714628487.304,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":559,"ts":1714628487.432,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return e\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":560,"ts":1714628487.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return e\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return ev\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":561,"ts":1714628487.823,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return ev\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return eva\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":562,"ts":1714628487.966,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return eva\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evalu\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":563,"ts":1714628488.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evalu\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evalua\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":564,"ts":1714628488.151,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evalua\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":565,"ts":1714628488.314,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":566,"ts":1714628488.54,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(b\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":567,"ts":1714628488.735,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(b\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(bo\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":568,"ts":1714628488.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(bo\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(bod\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":569,"ts":1714628488.966,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(bod\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":570,"ts":1714628489.058,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body,\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":571,"ts":1714628489.624,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body,\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":572,"ts":1714628489.754,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":573,"ts":1714628489.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {.\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":574,"ts":1714628490.138,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {.\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {..\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":575,"ts":1714628490.278,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {..\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...s\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":576,"ts":1714628490.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...s\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...sc\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":577,"ts":1714628490.541,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...sc\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...sco\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":578,"ts":1714628490.602,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...sco\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scop\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":579,"ts":1714628490.681,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scop\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":580,"ts":1714628490.797,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope,\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":581,"ts":1714628490.905,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope,\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":582,"ts":1714628490.997,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, .\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":583,"ts":1714628491.125,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, .\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ..\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":584,"ts":1714628491.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ..\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":585,"ts":1714628491.38,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...g\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":586,"ts":1714628491.537,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...g\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":587,"ts":1714628491.63,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got}\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":588,"ts":1714628491.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got}\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":589,"ts":1714628492.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n          \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":590,"ts":1714628493.27,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n          \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        \n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":591,"ts":1714628493.58,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        \n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":592,"ts":1714628493.687,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":593,"ts":1714628494.705,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      t\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":594,"ts":1714628495.182,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      t\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      th\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":595,"ts":1714628495.245,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      th\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      thr\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":596,"ts":1714628495.361,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      thr\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      thro\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":597,"ts":1714628495.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      thro\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":598,"ts":1714628495.578,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":599,"ts":1714628495.758,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw n\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":600,"ts":1714628495.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw n\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":601,"ts":1714628496.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new E\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":602,"ts":1714628496.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new E\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Er\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":603,"ts":1714628496.491,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Er\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Err\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":604,"ts":1714628496.612,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Err\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":605,"ts":1714628496.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":606,"ts":1714628497.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":607,"ts":1714628497.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`a\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":608,"ts":1714628498.409,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`a\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":609,"ts":1714628498.8,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`m\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":610,"ts":1714628499.027,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`m\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`mat\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":611,"ts":1714628499.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`mat\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":612,"ts":1714628499.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":613,"ts":1714628499.724,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match f\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":614,"ts":1714628499.9,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match f\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match fai\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":615,"ts":1714628500.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match fai\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match fail\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":616,"ts":1714628500.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match fail\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match faile\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":617,"ts":1714628500.185,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match faile\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":618,"ts":1714628500.412,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed:\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":619,"ts":1714628500.645,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed:\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: \n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":620,"ts":1714628500.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: \n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":621,"ts":1714628500.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${J\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":622,"ts":1714628501.222,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${J\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":623,"ts":1714628501.41,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.s\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":624,"ts":1714628501.666,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.s\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.str\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":625,"ts":1714628501.758,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.str\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stri\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":626,"ts":1714628501.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stri\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.strin\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":627,"ts":1714628501.93,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.strin\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringi\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":628,"ts":1714628502.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringi\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":629,"ts":1714628502.252,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":630,"ts":1714628502.537,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(t\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":631,"ts":1714628502.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(t\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(ta\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":632,"ts":1714628502.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(ta\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(targ\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":633,"ts":1714628502.971,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(targ\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":634,"ts":1714628503.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":635,"ts":1714628503.456,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target)}\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":636,"ts":1714628503.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target)}\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":637,"ts":1714628505.051,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed : ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":638,"ts":1714628508.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed : ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":639,"ts":1714628509.142,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":640,"ts":1714628509.877,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${no: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":641,"ts":1714628511.062,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${no: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${nod: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":642,"ts":1714628511.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${nod: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":643,"ts":1714628511.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":644,"ts":1714628511.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.l: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":645,"ts":1714628511.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.l: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.lo: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":646,"ts":1714628511.641,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.lo: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.loc: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":647,"ts":1714628512.006,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.loc: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.loc}: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":648,"ts":1714628512.658,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.loc}: ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.loc}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":649,"ts":1714628512.893,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node.loc}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":650,"ts":1714628524.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":651,"ts":1714628525.059,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":652,"ts":1714628525.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`_\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":653,"ts":1714628529.589,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`_\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":654,"ts":1714628529.977,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":655,"ts":1714628530.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"end"}]}],"prev":{"358":null},"meta":{},"metaPrev":{},"map":{"358":{"type":"blank","loc":358}},"nsMap":{"36":{"type":"normal","top":35,"children":[22,287,276,278,329,343,359,336,301,317,283],"id":36},"359":{"type":"normal","top":358,"children":[],"id":359}},"nsPrev":{"36":{"type":"normal","top":35,"children":[22,287,276,278,329,343,336,301,317,283],"id":36},"359":null},"id":656,"ts":1714628534.107,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"start"}]}],"prev":{"358":{"type":"blank","loc":358}},"meta":{},"metaPrev":{},"map":{"358":{"type":"list","values":[],"loc":358}},"nsMap":{},"nsPrev":{},"id":657,"ts":1714628534.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"inside"}]}],"prev":{"358":{"type":"list","values":[],"loc":358},"360":null},"meta":{},"metaPrev":{},"map":{"358":{"type":"list","values":[360],"loc":358},"360":{"type":"identifier","text":"r","loc":360}},"nsMap":{},"nsPrev":{},"id":658,"ts":1714628534.444,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"subtext","at":1}]}],"prev":{"360":{"type":"identifier","text":"r","loc":360}},"meta":{},"metaPrev":{},"map":{"360":{"type":"identifier","text":"ruin","loc":360}},"nsMap":{},"nsPrev":{},"id":659,"ts":1714628534.541,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":361,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"subtext","at":4}]}],"prev":{"358":{"type":"list","values":[360],"loc":358},"361":null},"meta":{},"metaPrev":{},"map":{"358":{"type":"list","values":[360,361],"loc":358},"361":{"type":"blank","loc":361}},"nsMap":{},"nsPrev":{},"id":660,"ts":1714628534.705,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":361,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":361,"type":"start"}]}],"prev":{"361":{"type":"blank","loc":361}},"meta":{},"metaPrev":{},"map":{"361":{"type":"list","values":[],"loc":361}},"nsMap":{},"nsPrev":{},"id":661,"ts":1714628534.968,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":361,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":361,"type":"inside"}]}],"prev":{"358":{"type":"list","values":[360,361],"loc":358},"361":{"type":"list","values":[],"loc":361}},"meta":{},"metaPrev":{},"map":{"358":{"type":"list","values":[360,361],"loc":358},"361":{"type":"blank","loc":361}},"nsMap":{},"nsPrev":{},"id":662,"ts":1714628535.201,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":361,"type":"start"}]}],"prev":{"358":{"type":"list","values":[360,361],"loc":358},"361":{"type":"blank","loc":361}},"meta":{},"metaPrev":{},"map":{"358":{"type":"list","values":[360],"loc":358},"361":null},"nsMap":{},"nsPrev":{},"id":663,"ts":1714628535.32,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"end"}]}],"prev":{"360":{"type":"identifier","text":"ruin","loc":360}},"meta":{},"metaPrev":{},"map":{"360":{"type":"identifier","text":"run","loc":360}},"nsMap":{},"nsPrev":{},"id":664,"ts":1714628535.452,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":0},{"idx":360,"type":"subtext","at":3}]}],"prev":{"358":{"type":"list","values":[360],"loc":358},"362":null},"meta":{},"metaPrev":{},"map":{"358":{"type":"list","values":[360,362],"loc":358},"362":{"type":"blank","loc":362}},"nsMap":{},"nsPrev":{},"id":665,"ts":1714628536.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"start"}]}],"prev":{"362":{"type":"blank","loc":362}},"meta":{},"metaPrev":{},"map":{"362":{"type":"list","values":[],"loc":362}},"nsMap":{},"nsPrev":{},"id":666,"ts":1714628536.218,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":0},{"idx":363,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"inside"}]}],"prev":{"362":{"type":"list","values":[],"loc":362},"363":null},"meta":{},"metaPrev":{},"map":{"362":{"type":"list","values":[363],"loc":362},"363":{"type":"identifier","text":"m","loc":363}},"nsMap":{},"nsPrev":{},"id":667,"ts":1714628536.396,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":0},{"idx":363,"type":"subtext","at":5}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":0},{"idx":363,"type":"subtext","at":1}]}],"prev":{"363":{"type":"identifier","text":"m","loc":363}},"meta":{},"metaPrev":{},"map":{"363":{"type":"identifier","text":"match","loc":363}},"nsMap":{},"nsPrev":{},"id":668,"ts":1714628536.514,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":1},{"idx":364,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":0},{"idx":363,"type":"subtext","at":5}]}],"prev":{"362":{"type":"list","values":[363],"loc":362},"364":null},"meta":{},"metaPrev":{},"map":{"362":{"type":"list","values":[363,364],"loc":362},"364":{"type":"blank","loc":364}},"nsMap":{},"nsPrev":{},"id":669,"ts":1714628536.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":1},{"idx":364,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":1},{"idx":364,"type":"start"}]}],"prev":{"364":{"type":"blank","loc":364}},"meta":{},"metaPrev":{},"map":{"364":{"type":"identifier","text":"3","loc":364}},"nsMap":{},"nsPrev":{},"id":670,"ts":1714628538.536,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":2},{"idx":365,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":1},{"idx":364,"type":"subtext","at":1}]}],"prev":{"362":{"type":"list","values":[363,364],"loc":362},"365":null},"meta":{},"metaPrev":{},"map":{"362":{"type":"list","values":[363,364,365],"loc":362},"365":{"type":"blank","loc":365}},"nsMap":{},"nsPrev":{},"id":671,"ts":1714628540.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":2},{"idx":365,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":2},{"idx":365,"type":"start"}]}],"prev":{"365":{"type":"blank","loc":365}},"meta":{},"metaPrev":{},"map":{"365":{"type":"identifier","text":"2","loc":365}},"nsMap":{},"nsPrev":{},"id":672,"ts":1714628541.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":3},{"idx":366,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":2},{"idx":365,"type":"subtext","at":1}]}],"prev":{"362":{"type":"list","values":[363,364,365],"loc":362},"366":null},"meta":{},"metaPrev":{},"map":{"362":{"type":"list","values":[363,364,365,366],"loc":362},"366":{"type":"blank","loc":366}},"nsMap":{},"nsPrev":{},"id":673,"ts":1714628541.629,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":3},{"idx":366,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":3},{"idx":366,"type":"start"}]}],"prev":{"366":{"type":"blank","loc":366}},"meta":{},"metaPrev":{},"map":{"366":{"type":"identifier","text":"1","loc":366}},"nsMap":{},"nsPrev":{},"id":674,"ts":1714628541.782,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let [pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":675,"ts":1714628569.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":676,"ts":1714628570.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":677,"ts":1714628571.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0:pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":678,"ts":1714628571.697,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0:pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":679,"ts":1714628571.721,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":680,"ts":1714628573.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1:body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":681,"ts":1714628573.334,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1:body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":682,"ts":1714628573.498,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body] of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":683,"ts":1714628574.622,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":684,"ts":1714628574.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":4},{"idx":367,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":3},{"idx":366,"type":"subtext","at":1}]}],"prev":{"362":{"type":"list","values":[363,364,365,366],"loc":362},"367":null},"meta":{},"metaPrev":{},"map":{"362":{"type":"list","values":[363,364,365,366,367],"loc":362},"367":{"type":"blank","loc":367}},"nsMap":{},"nsPrev":{},"id":685,"ts":1714628578.318,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":4},{"idx":367,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":4},{"idx":367,"type":"start"}]}],"prev":{"367":{"type":"blank","loc":367}},"meta":{},"metaPrev":{},"map":{"367":{"type":"identifier","text":"3","loc":367}},"nsMap":{},"nsPrev":{},"id":686,"ts":1714628578.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":5},{"idx":368,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":4},{"idx":367,"type":"subtext","at":1}]}],"prev":{"362":{"type":"list","values":[363,364,365,366,367],"loc":362},"368":null},"meta":{},"metaPrev":{},"map":{"362":{"type":"list","values":[363,364,365,366,367,368],"loc":362},"368":{"type":"blank","loc":368}},"nsMap":{},"nsPrev":{},"id":687,"ts":1714628578.924,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":5},{"idx":368,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"child","at":1},{"idx":362,"type":"child","at":5},{"idx":368,"type":"start"}]}],"prev":{"368":{"type":"blank","loc":368}},"meta":{},"metaPrev":{},"map":{"368":{"type":"identifier","text":"10","loc":368}},"nsMap":{},"nsPrev":{},"id":688,"ts":1714628579.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":276,"idx":36},{"type":"ns-top","idx":276},{"idx":275,"type":"end"}]}],"prev":{"369":null},"meta":{},"metaPrev":{},"map":{"369":{"type":"blank","loc":369}},"nsMap":{"36":{"type":"normal","top":35,"children":[22,287,276,370,278,329,343,359,336,301,317,283],"id":36},"370":{"type":"normal","top":369,"children":[],"id":370}},"nsPrev":{"36":{"type":"normal","top":35,"children":[22,287,276,278,329,343,359,336,301,317,283],"id":36},"370":null},"id":689,"ts":1714628773.006,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"start"}]}],"prev":{"369":{"type":"blank","loc":369}},"meta":{},"metaPrev":{},"map":{"369":{"type":"list","values":[],"loc":369}},"nsMap":{},"nsPrev":{},"id":690,"ts":1714628773.777,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":0},{"idx":371,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"inside"}]}],"prev":{"369":{"type":"list","values":[],"loc":369},"371":null},"meta":{},"metaPrev":{},"map":{"369":{"type":"list","values":[371],"loc":369},"371":{"type":"identifier","text":",","loc":371}},"nsMap":{},"nsPrev":{},"id":691,"ts":1714628774.299,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":1},{"idx":372,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":0},{"idx":371,"type":"subtext","at":1}]}],"prev":{"369":{"type":"list","values":[371],"loc":369},"372":null},"meta":{},"metaPrev":{},"map":{"369":{"type":"list","values":[371,372],"loc":369},"372":{"type":"blank","loc":372}},"nsMap":{},"nsPrev":{},"id":692,"ts":1714628774.414,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":1},{"idx":372,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":1},{"idx":372,"type":"start"}]}],"prev":{"372":{"type":"blank","loc":372}},"meta":{},"metaPrev":{},"map":{"372":{"type":"identifier","text":"run","loc":372}},"nsMap":{},"nsPrev":{},"id":693,"ts":1714628774.557,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":1},{"idx":372,"type":"subtext","at":3}]}],"prev":{"369":{"type":"list","values":[371,372],"loc":369},"373":null},"meta":{},"metaPrev":{},"map":{"369":{"type":"list","values":[371,372,373],"loc":369},"373":{"type":"blank","loc":373}},"nsMap":{},"nsPrev":{},"id":694,"ts":1714628774.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"start"}]}],"prev":{"373":{"type":"blank","loc":373}},"meta":{},"metaPrev":{},"map":{"373":{"type":"array","values":[],"loc":373}},"nsMap":{},"nsPrev":{},"id":695,"ts":1714628776.58,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"inside"}]}],"prev":{"373":{"type":"array","values":[],"loc":373},"374":null},"meta":{},"metaPrev":{},"map":{"373":{"type":"array","values":[374],"loc":373},"374":{"type":"list","values":[],"loc":374}},"nsMap":{},"nsPrev":{},"id":696,"ts":1714628776.827,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":0},{"idx":375,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"inside"}]}],"prev":{"374":{"type":"list","values":[],"loc":374},"375":null},"meta":{},"metaPrev":{},"map":{"374":{"type":"list","values":[375],"loc":374},"375":{"type":"identifier","text":",","loc":375}},"nsMap":{},"nsPrev":{},"id":697,"ts":1714628777.032,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":0},{"idx":375,"type":"subtext","at":1}]}],"prev":{"374":{"type":"list","values":[375],"loc":374},"376":null},"meta":{},"metaPrev":{},"map":{"374":{"type":"list","values":[375,376],"loc":374},"376":{"type":"blank","loc":376}},"nsMap":{},"nsPrev":{},"id":698,"ts":1714628777.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"start"}]}],"prev":{"376":{"type":"blank","loc":376}},"meta":{},"metaPrev":{},"map":{"376":{"type":"list","values":[],"loc":376}},"nsMap":{},"nsPrev":{},"id":699,"ts":1714628779.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":0},{"idx":377,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"inside"}]}],"prev":{"376":{"type":"list","values":[],"loc":376},"377":null},"meta":{},"metaPrev":{},"map":{"376":{"type":"list","values":[377],"loc":376},"377":{"type":"identifier","text":"@","loc":377}},"nsMap":{},"nsPrev":{},"id":700,"ts":1714628779.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":0},{"idx":377,"type":"subtext","at":1}]}],"prev":{"376":{"type":"list","values":[377],"loc":376},"378":null},"meta":{},"metaPrev":{},"map":{"376":{"type":"list","values":[377,378],"loc":376},"378":{"type":"blank","loc":378}},"nsMap":{},"nsPrev":{},"id":701,"ts":1714628780.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"start"}]}],"prev":{"378":{"type":"blank","loc":378}},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[],"loc":378}},"nsMap":{},"nsPrev":{},"id":702,"ts":1714628780.189,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"inside"}]}],"prev":{"378":{"type":"list","values":[],"loc":378},"379":null},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[379],"loc":378},"379":{"type":"identifier","text":"f","loc":379}},"nsMap":{},"nsPrev":{},"id":703,"ts":1714628780.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"subtext","at":1}]}],"prev":{"379":{"type":"identifier","text":"f","loc":379}},"meta":{},"metaPrev":{},"map":{"379":{"type":"identifier","text":"fn","loc":379}},"nsMap":{},"nsPrev":{},"id":704,"ts":1714628780.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":380,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"subtext","at":2}]}],"prev":{"378":{"type":"list","values":[379],"loc":378},"380":null},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[379,380],"loc":378},"380":{"type":"blank","loc":380}},"nsMap":{},"nsPrev":{},"id":705,"ts":1714628780.722,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":380,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":380,"type":"start"}]}],"prev":{"380":{"type":"blank","loc":380}},"meta":{},"metaPrev":{},"map":{"380":{"type":"array","values":[],"loc":380}},"nsMap":{},"nsPrev":{},"id":706,"ts":1714628780.832,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":380,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":380,"type":"inside"}]}],"prev":{"378":{"type":"list","values":[379,380],"loc":378},"380":{"type":"array","values":[],"loc":380}},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[379,380],"loc":378},"380":{"type":"blank","loc":380}},"nsMap":{},"nsPrev":{},"id":707,"ts":1714628781.274,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":380,"type":"start"}]}],"prev":{"378":{"type":"list","values":[379,380],"loc":378},"380":{"type":"blank","loc":380}},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[379],"loc":378},"380":null},"nsMap":{},"nsPrev":{},"id":708,"ts":1714628781.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"end"}]}],"prev":{"379":{"type":"identifier","text":"fn","loc":379}},"meta":{},"metaPrev":{},"map":{"379":{"type":"identifier","text":"f","loc":379}},"nsMap":{},"nsPrev":{},"id":709,"ts":1714628781.489,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":379,"type":"subtext","at":1}]}],"prev":{"378":{"type":"list","values":[379],"loc":378},"379":{"type":"identifier","text":"f","loc":379}},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[],"loc":378},"379":null},"nsMap":{},"nsPrev":{},"id":710,"ts":1714628781.609,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"inside"}]}],"prev":{"378":{"type":"list","values":[],"loc":378},"381":null},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[381],"loc":378},"381":{"type":"list","values":[],"loc":381}},"nsMap":{},"nsPrev":{},"id":711,"ts":1714628781.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":0},{"idx":382,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"inside"}]}],"prev":{"381":{"type":"list","values":[],"loc":381},"382":null},"meta":{},"metaPrev":{},"map":{"381":{"type":"list","values":[382],"loc":381},"382":{"type":"identifier","text":"f","loc":382}},"nsMap":{},"nsPrev":{},"id":712,"ts":1714628782.094,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":0},{"idx":382,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":0},{"idx":382,"type":"subtext","at":1}]}],"prev":{"382":{"type":"identifier","text":"f","loc":382}},"meta":{},"metaPrev":{},"map":{"382":{"type":"identifier","text":"fn","loc":382}},"nsMap":{},"nsPrev":{},"id":713,"ts":1714628782.155,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":1},{"idx":383,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":0},{"idx":382,"type":"subtext","at":2}]}],"prev":{"381":{"type":"list","values":[382],"loc":381},"383":null},"meta":{},"metaPrev":{},"map":{"381":{"type":"list","values":[382,383],"loc":381},"383":{"type":"blank","loc":383}},"nsMap":{},"nsPrev":{},"id":714,"ts":1714628782.29,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":1},{"idx":383,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":1},{"idx":383,"type":"start"}]}],"prev":{"383":{"type":"blank","loc":383}},"meta":{},"metaPrev":{},"map":{"383":{"type":"array","values":[],"loc":383}},"nsMap":{},"nsPrev":{},"id":715,"ts":1714628782.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":1},{"idx":383,"type":"child","at":0},{"idx":384,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":1},{"idx":383,"type":"inside"}]}],"prev":{"383":{"type":"array","values":[],"loc":383},"384":null},"meta":{},"metaPrev":{},"map":{"383":{"type":"array","values":[384],"loc":383},"384":{"type":"identifier","text":"x","loc":384}},"nsMap":{},"nsPrev":{},"id":716,"ts":1714628782.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":2},{"idx":385,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":1},{"idx":383,"type":"end"}]}],"prev":{"381":{"type":"list","values":[382,383],"loc":381},"385":null},"meta":{},"metaPrev":{},"map":{"381":{"type":"list","values":[382,383,385],"loc":381},"385":{"type":"blank","loc":385}},"nsMap":{},"nsPrev":{},"id":717,"ts":1714628782.849,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":2},{"idx":385,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"child","at":2},{"idx":385,"type":"start"}]}],"prev":{"385":{"type":"blank","loc":385}},"meta":{},"metaPrev":{},"map":{"385":{"type":"identifier","text":"1","loc":385}},"nsMap":{},"nsPrev":{},"id":718,"ts":1714628783.015,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":386,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":0},{"idx":381,"type":"end"}]}],"prev":{"378":{"type":"list","values":[381],"loc":378},"386":null},"meta":{},"metaPrev":{},"map":{"378":{"type":"list","values":[381,386],"loc":378},"386":{"type":"blank","loc":386}},"nsMap":{},"nsPrev":{},"id":719,"ts":1714628783.685,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":386,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"child","at":1},{"idx":378,"type":"child","at":1},{"idx":386,"type":"start"}]}],"prev":{"386":{"type":"blank","loc":386}},"meta":{},"metaPrev":{},"map":{"386":{"type":"identifier","text":"0","loc":386}},"nsMap":{},"nsPrev":{},"id":720,"ts":1714628784.832,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":2},{"idx":387,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":1},{"idx":376,"type":"end"}]}],"prev":{"374":{"type":"list","values":[375,376],"loc":374},"387":null},"meta":{},"metaPrev":{},"map":{"374":{"type":"list","values":[375,376,387],"loc":374},"387":{"type":"blank","loc":387}},"nsMap":{},"nsPrev":{},"id":721,"ts":1714628788.059,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":2},{"idx":387,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":0},{"idx":374,"type":"child","at":2},{"idx":387,"type":"start"}]}],"prev":{"387":{"type":"blank","loc":387}},"meta":{},"metaPrev":{},"map":{"387":{"type":"identifier","text":"1","loc":387}},"nsMap":{},"nsPrev":{},"id":722,"ts":1714628788.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"370":{"type":"normal","top":369,"children":[],"id":370,"plugin":{"id":"fixture","options":null}}},"nsPrev":{"370":{"type":"normal","top":369,"children":[],"id":370}},"id":723,"ts":1714628796.129,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":0,"idx":373},{"idx":374,"type":"child","at":2},{"idx":387,"type":"subtext","at":1}]}],"prev":{"373":{"type":"array","values":[374],"loc":373},"388":null,"389":null,"390":null,"391":null},"meta":{},"metaPrev":{},"map":{"373":{"type":"array","values":[374,388],"loc":373},"388":{"type":"list","values":[389,390,391],"loc":388},"389":{"type":"identifier","text":",","loc":389},"390":{"type":"blank","loc":390},"391":{"type":"blank","loc":391}},"nsMap":{},"nsPrev":{},"id":724,"ts":1714628798.419,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"start"}]}],"prev":{"390":{"type":"blank","loc":390}},"meta":{},"metaPrev":{},"map":{"390":{"type":"list","values":[],"loc":390}},"nsMap":{},"nsPrev":{},"id":725,"ts":1714628799.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":0},{"idx":392,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"inside"}]}],"prev":{"390":{"type":"list","values":[],"loc":390},"392":null},"meta":{},"metaPrev":{},"map":{"390":{"type":"list","values":[392],"loc":390},"392":{"type":"identifier","text":",","loc":392}},"nsMap":{},"nsPrev":{},"id":726,"ts":1714628799.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":1},{"idx":393,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":0},{"idx":392,"type":"subtext","at":1}]}],"prev":{"390":{"type":"list","values":[392],"loc":390},"393":null},"meta":{},"metaPrev":{},"map":{"390":{"type":"list","values":[392,393],"loc":390},"393":{"type":"blank","loc":393}},"nsMap":{},"nsPrev":{},"id":727,"ts":1714628799.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":1},{"idx":393,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":1},{"idx":393,"type":"start"}]}],"prev":{"393":{"type":"blank","loc":393}},"meta":{},"metaPrev":{},"map":{"393":{"type":"identifier","text":"1","loc":393}},"nsMap":{},"nsPrev":{},"id":728,"ts":1714628799.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":2},{"idx":394,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":1},{"idx":393,"type":"subtext","at":1}]}],"prev":{"390":{"type":"list","values":[392,393],"loc":390},"394":null},"meta":{},"metaPrev":{},"map":{"390":{"type":"list","values":[392,393,394],"loc":390},"394":{"type":"blank","loc":394}},"nsMap":{},"nsPrev":{},"id":729,"ts":1714628800.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":2},{"idx":394,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"child","at":2},{"idx":394,"type":"start"}]}],"prev":{"394":{"type":"blank","loc":394}},"meta":{},"metaPrev":{},"map":{"394":{"type":"identifier","text":"2","loc":394}},"nsMap":{},"nsPrev":{},"id":730,"ts":1714628800.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":390,"type":"start"}]}],"prev":{"388":{"type":"list","values":[389,390,391],"loc":388},"395":null},"meta":{},"metaPrev":{},"map":{"388":{"type":"list","values":[389,395,391],"loc":388},"395":{"type":"list","values":[390],"loc":395}},"nsMap":{},"nsPrev":{},"id":731,"ts":1714628802.58,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":0},{"idx":396,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prev":{"395":{"type":"list","values":[390],"loc":395},"396":null},"meta":{},"metaPrev":{},"map":{"395":{"type":"list","values":[396,390],"loc":395},"396":{"type":"identifier","text":"@","loc":396}},"nsMap":{},"nsPrev":{},"id":732,"ts":1714628802.759,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":390,"type":"start"}]}],"prev":{"395":{"type":"list","values":[396,390],"loc":395},"397":null},"meta":{},"metaPrev":{},"map":{"395":{"type":"list","values":[396,397],"loc":395},"397":{"type":"list","values":[390],"loc":397}},"nsMap":{},"nsPrev":{},"id":733,"ts":1714628820.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":0},{"idx":398,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prev":{"397":{"type":"list","values":[390],"loc":397},"398":null},"meta":{},"metaPrev":{},"map":{"397":{"type":"list","values":[398,390],"loc":397},"398":{"type":"identifier","text":"l","loc":398}},"nsMap":{},"nsPrev":{},"id":734,"ts":1714628821.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":0},{"idx":398,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":0},{"idx":398,"type":"subtext","at":1}]}],"prev":{"398":{"type":"identifier","text":"l","loc":398}},"meta":{},"metaPrev":{},"map":{"398":{"type":"identifier","text":"let","loc":398}},"nsMap":{},"nsPrev":{},"id":735,"ts":1714628821.462,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":399,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":0},{"idx":398,"type":"subtext","at":3}]}],"prev":{"397":{"type":"list","values":[398,390],"loc":397},"399":null},"meta":{},"metaPrev":{},"map":{"397":{"type":"list","values":[398,399,390],"loc":397},"399":{"type":"blank","loc":399}},"nsMap":{},"nsPrev":{},"id":736,"ts":1714628821.636,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":390,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":2},{"idx":390,"type":"start"}]}],"prev":{"397":{"type":"list","values":[398,399,390],"loc":397}},"meta":{},"metaPrev":{},"map":{"397":{"type":"list","values":[398,390],"loc":397}},"nsMap":{},"nsPrev":{},"id":737,"ts":1714628822.978,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":390,"type":"start"}]}],"prev":{"397":{"type":"list","values":[398,390],"loc":397},"400":null},"meta":{},"metaPrev":{},"map":{"397":{"type":"list","values":[398,400],"loc":397},"400":{"type":"array","values":[390],"loc":400}},"nsMap":{},"nsPrev":{},"id":738,"ts":1714628823.154,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":401,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prev":{"400":{"type":"array","values":[390],"loc":400},"401":null},"meta":{},"metaPrev":{},"map":{"400":{"type":"array","values":[401],"loc":400},"401":{"type":"list","values":[390],"loc":401}},"nsMap":{},"nsPrev":{},"id":739,"ts":1714628823.548,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":401,"type":"child","at":0},{"idx":402,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":401,"type":"child","at":0},{"idx":390,"type":"start"}]}],"prev":{"401":{"type":"list","values":[390],"loc":401},"402":null},"meta":{},"metaPrev":{},"map":{"401":{"type":"list","values":[402,390],"loc":401},"402":{"type":"identifier","text":",","loc":402}},"nsMap":{},"nsPrev":{},"id":740,"ts":1714628823.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":401,"type":"child","at":0},{"idx":402,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":401,"type":"child","at":0},{"idx":402,"type":"subtext","at":1}]}],"prev":{"402":{"type":"identifier","text":",","loc":402}},"meta":{},"metaPrev":{},"map":{"402":{"type":"blank","loc":402}},"nsMap":{},"nsPrev":{},"id":741,"ts":1714628825.025,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":401,"type":"child","at":0},{"idx":402,"type":"subtext","at":0}]}],"prev":{"400":{"type":"array","values":[401],"loc":400},"401":{"type":"list","values":[402,390],"loc":401}},"meta":{},"metaPrev":{},"map":{"400":{"type":"array","values":[402,390],"loc":400},"401":null},"nsMap":{},"nsPrev":{},"id":742,"ts":1714628825.174,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"subtext","at":0}]}],"prev":{"402":{"type":"blank","loc":402}},"meta":{},"metaPrev":{},"map":{"402":{"type":"list","values":[],"loc":402}},"nsMap":{},"nsPrev":{},"id":743,"ts":1714628825.988,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":0},{"idx":403,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"inside"}]}],"prev":{"402":{"type":"list","values":[],"loc":402},"403":null},"meta":{},"metaPrev":{},"map":{"402":{"type":"list","values":[403],"loc":402},"403":{"type":"identifier","text":",","loc":403}},"nsMap":{},"nsPrev":{},"id":744,"ts":1714628826.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":1},{"idx":404,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":0},{"idx":403,"type":"subtext","at":1}]}],"prev":{"402":{"type":"list","values":[403],"loc":402},"404":null},"meta":{},"metaPrev":{},"map":{"402":{"type":"list","values":[403,404],"loc":402},"404":{"type":"blank","loc":404}},"nsMap":{},"nsPrev":{},"id":745,"ts":1714628827.107,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":1},{"idx":404,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":1},{"idx":404,"type":"start"}]}],"prev":{"404":{"type":"blank","loc":404}},"meta":{},"metaPrev":{},"map":{"404":{"type":"identifier","text":"x","loc":404}},"nsMap":{},"nsPrev":{},"id":746,"ts":1714628827.362,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":2},{"idx":405,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":1},{"idx":404,"type":"subtext","at":1}]}],"prev":{"402":{"type":"list","values":[403,404],"loc":402},"405":null},"meta":{},"metaPrev":{},"map":{"402":{"type":"list","values":[403,404,405],"loc":402},"405":{"type":"blank","loc":405}},"nsMap":{},"nsPrev":{},"id":747,"ts":1714628827.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":2},{"idx":405,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"child","at":0},{"idx":402,"type":"child","at":2},{"idx":405,"type":"start"}]}],"prev":{"405":{"type":"blank","loc":405}},"meta":{},"metaPrev":{},"map":{"405":{"type":"identifier","text":"_","loc":405}},"nsMap":{},"nsPrev":{},"id":748,"ts":1714628827.71,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":2},{"idx":406,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":1},{"idx":400,"type":"end"}]}],"prev":{"397":{"type":"list","values":[398,400],"loc":397},"406":null},"meta":{},"metaPrev":{},"map":{"397":{"type":"list","values":[398,400,406],"loc":397},"406":{"type":"blank","loc":406}},"nsMap":{},"nsPrev":{},"id":749,"ts":1714628829.505,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":2},{"idx":406,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":1},{"idx":395,"type":"child","at":1},{"idx":397,"type":"child","at":2},{"idx":406,"type":"start"}]}],"prev":{"406":{"type":"blank","loc":406}},"meta":{},"metaPrev":{},"map":{"406":{"type":"identifier","text":"x","loc":406}},"nsMap":{},"nsPrev":{},"id":750,"ts":1714628829.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":2},{"idx":391,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":2},{"idx":391,"type":"start"}]}],"prev":{"391":{"type":"blank","loc":391}},"meta":{},"metaPrev":{},"map":{"391":{"type":"identifier","text":"1","loc":391}},"nsMap":{},"nsPrev":{},"id":751,"ts":1714628833.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":1},{"idx":388,"type":"child","at":2},{"idx":391,"type":"subtext","at":1}]}],"prev":{"373":{"type":"array","values":[374,388],"loc":373},"407":null,"408":null,"409":null,"410":null},"meta":{},"metaPrev":{},"map":{"373":{"type":"array","values":[374,388,407],"loc":373},"407":{"type":"list","values":[408,409,410],"loc":407},"408":{"type":"identifier","text":",","loc":408},"409":{"type":"blank","loc":409},"410":{"type":"blank","loc":410}},"nsMap":{},"nsPrev":{},"id":752,"ts":1714628834.076,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"start"}]}],"prev":{"409":{"type":"blank","loc":409}},"meta":{},"metaPrev":{},"map":{"409":{"type":"list","values":[],"loc":409}},"nsMap":{},"nsPrev":{},"id":753,"ts":1714628849.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":0},{"idx":411,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"inside"}]}],"prev":{"409":{"type":"list","values":[],"loc":409},"411":null},"meta":{},"metaPrev":{},"map":{"409":{"type":"list","values":[411],"loc":409},"411":{"type":"identifier","text":"#","loc":411}},"nsMap":{},"nsPrev":{},"id":754,"ts":1714628849.951,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":0},{"idx":411,"type":"subtext","at":1}]}],"prev":{"409":{"type":"list","values":[411],"loc":409},"411":{"type":"identifier","text":"#","loc":411}},"meta":{},"metaPrev":{},"map":{"409":{"type":"list","values":[],"loc":409},"411":null},"nsMap":{},"nsPrev":{},"id":755,"ts":1714628850.926,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":0},{"idx":412,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"inside"}]}],"prev":{"409":{"type":"list","values":[],"loc":409},"412":null},"meta":{},"metaPrev":{},"map":{"409":{"type":"list","values":[412],"loc":409},"412":{"type":"identifier","text":"@","loc":412}},"nsMap":{},"nsPrev":{},"id":756,"ts":1714628851.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":0},{"idx":412,"type":"subtext","at":1}]}],"prev":{"409":{"type":"list","values":[412],"loc":409},"413":null},"meta":{},"metaPrev":{},"map":{"409":{"type":"list","values":[412,413],"loc":409},"413":{"type":"list","values":[],"loc":413}},"nsMap":{},"nsPrev":{},"id":757,"ts":1714628851.28,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":0},{"idx":414,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"inside"}]}],"prev":{"413":{"type":"list","values":[],"loc":413},"414":null},"meta":{},"metaPrev":{},"map":{"413":{"type":"list","values":[414],"loc":413},"414":{"type":"identifier","text":"m","loc":414}},"nsMap":{},"nsPrev":{},"id":758,"ts":1714628851.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":0},{"idx":414,"type":"subtext","at":5}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":0},{"idx":414,"type":"subtext","at":1}]}],"prev":{"414":{"type":"identifier","text":"m","loc":414}},"meta":{},"metaPrev":{},"map":{"414":{"type":"identifier","text":"match","loc":414}},"nsMap":{},"nsPrev":{},"id":759,"ts":1714628851.956,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":1},{"idx":415,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":0},{"idx":414,"type":"subtext","at":5}]}],"prev":{"413":{"type":"list","values":[414],"loc":413},"415":null},"meta":{},"metaPrev":{},"map":{"413":{"type":"list","values":[414,415],"loc":413},"415":{"type":"blank","loc":415}},"nsMap":{},"nsPrev":{},"id":760,"ts":1714628852.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":1},{"idx":415,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":1},{"idx":415,"type":"start"}]}],"prev":{"415":{"type":"blank","loc":415}},"meta":{},"metaPrev":{},"map":{"415":{"type":"identifier","text":"3","loc":415}},"nsMap":{},"nsPrev":{},"id":761,"ts":1714628853.212,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":2},{"idx":416,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":1},{"idx":415,"type":"subtext","at":1}]}],"prev":{"413":{"type":"list","values":[414,415],"loc":413},"416":null},"meta":{},"metaPrev":{},"map":{"413":{"type":"list","values":[414,415,416],"loc":413},"416":{"type":"blank","loc":416}},"nsMap":{},"nsPrev":{},"id":762,"ts":1714628853.328,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":2},{"idx":416,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":2},{"idx":416,"type":"start"}]}],"prev":{"416":{"type":"blank","loc":416}},"meta":{},"metaPrev":{},"map":{"416":{"type":"identifier","text":"1","loc":416}},"nsMap":{},"nsPrev":{},"id":763,"ts":1714628853.571,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":3},{"idx":417,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":2},{"idx":416,"type":"subtext","at":1}]}],"prev":{"413":{"type":"list","values":[414,415,416],"loc":413},"417":null},"meta":{},"metaPrev":{},"map":{"413":{"type":"list","values":[414,415,416,417],"loc":413},"417":{"type":"blank","loc":417}},"nsMap":{},"nsPrev":{},"id":764,"ts":1714628853.699,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":3},{"idx":417,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":3},{"idx":417,"type":"start"}]}],"prev":{"417":{"type":"blank","loc":417}},"meta":{},"metaPrev":{},"map":{"417":{"type":"identifier","text":"2","loc":417}},"nsMap":{},"nsPrev":{},"id":765,"ts":1714628853.823,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":4},{"idx":418,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":3},{"idx":417,"type":"subtext","at":1}]}],"prev":{"413":{"type":"list","values":[414,415,416,417],"loc":413},"418":null},"meta":{},"metaPrev":{},"map":{"413":{"type":"list","values":[414,415,416,417,418],"loc":413},"418":{"type":"blank","loc":418}},"nsMap":{},"nsPrev":{},"id":766,"ts":1714628855.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":4},{"idx":418,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":4},{"idx":418,"type":"start"}]}],"prev":{"418":{"type":"blank","loc":418}},"meta":{},"metaPrev":{},"map":{"418":{"type":"identifier","text":"3","loc":418}},"nsMap":{},"nsPrev":{},"id":767,"ts":1714628855.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":5},{"idx":419,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":4},{"idx":418,"type":"subtext","at":1}]}],"prev":{"413":{"type":"list","values":[414,415,416,417,418],"loc":413},"419":null},"meta":{},"metaPrev":{},"map":{"413":{"type":"list","values":[414,415,416,417,418,419],"loc":413},"419":{"type":"blank","loc":419}},"nsMap":{},"nsPrev":{},"id":768,"ts":1714628855.936,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":5},{"idx":419,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":1},{"idx":409,"type":"child","at":1},{"idx":413,"type":"child","at":5},{"idx":419,"type":"start"}]}],"prev":{"419":{"type":"blank","loc":419}},"meta":{},"metaPrev":{},"map":{"419":{"type":"identifier","text":"10","loc":419}},"nsMap":{},"nsPrev":{},"id":769,"ts":1714628856.532,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":2},{"idx":410,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":2},{"idx":407,"type":"child","at":2},{"idx":410,"type":"start"}]}],"prev":{"410":{"type":"blank","loc":410}},"meta":{},"metaPrev":{},"map":{"410":{"type":"identifier","text":"10","loc":410}},"nsMap":{},"nsPrev":{},"id":770,"ts":1714628859.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":22},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"idx":21,"type":"start"}]}],"prev":{"420":null},"meta":{},"metaPrev":{},"map":{"420":{"type":"blank","loc":420}},"nsMap":{"36":{"type":"normal","top":35,"children":[421,22,287,276,370,278,329,343,359,336,301,317,283],"id":36},"421":{"type":"normal","top":420,"id":421,"children":[]}},"nsPrev":{"36":{"type":"normal","top":35,"children":[22,287,276,370,278,329,343,359,336,301,317,283],"id":36},"421":null},"id":771,"ts":1714628889.704,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"start","idx":420}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"idx":420,"type":"subtext","at":0}]}],"prev":{"420":{"type":"blank","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"// write some code","loc":420}},"nsMap":{},"nsPrev":{},"id":772,"ts":1714628893.071,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"// write some code","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"e","loc":420}},"nsMap":{},"nsPrev":{},"id":773,"ts":1714628897.263,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"e","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"ev","loc":420}},"nsMap":{},"nsPrev":{},"id":774,"ts":1714628897.456,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"ev","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evlu","loc":420}},"nsMap":{},"nsPrev":{},"id":775,"ts":1714628897.812,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evlu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evl","loc":420}},"nsMap":{},"nsPrev":{},"id":776,"ts":1714628898.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evl","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"ev","loc":420}},"nsMap":{},"nsPrev":{},"id":777,"ts":1714628898.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"ev","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"eva","loc":420}},"nsMap":{},"nsPrev":{},"id":778,"ts":1714628898.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"eva","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evalu","loc":420}},"nsMap":{},"nsPrev":{},"id":779,"ts":1714628898.505,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evalu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evalut","loc":420}},"nsMap":{},"nsPrev":{},"id":780,"ts":1714628898.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evalut","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evalu","loc":420}},"nsMap":{},"nsPrev":{},"id":781,"ts":1714628899.262,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evalu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evalua","loc":420}},"nsMap":{},"nsPrev":{},"id":782,"ts":1714628899.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evalua","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluate","loc":420}},"nsMap":{},"nsPrev":{},"id":783,"ts":1714628899.51,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluate","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateS","loc":420}},"nsMap":{},"nsPrev":{},"id":784,"ts":1714628899.982,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateS","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateSt","loc":420}},"nsMap":{},"nsPrev":{},"id":785,"ts":1714628900.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateSt","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt","loc":420}},"nsMap":{},"nsPrev":{},"id":786,"ts":1714628900.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt ","loc":420}},"nsMap":{},"nsPrev":{},"id":787,"ts":1714628900.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt =","loc":420}},"nsMap":{},"nsPrev":{},"id":788,"ts":1714628900.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt =","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = ","loc":420}},"nsMap":{},"nsPrev":{},"id":789,"ts":1714628900.781,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (","loc":420}},"nsMap":{},"nsPrev":{},"id":790,"ts":1714628900.94,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (no","loc":420}},"nsMap":{},"nsPrev":{},"id":791,"ts":1714628901.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (no","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (nod","loc":420}},"nsMap":{},"nsPrev":{},"id":792,"ts":1714628901.246,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (nod","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node","loc":420}},"nsMap":{},"nsPrev":{},"id":793,"ts":1714628901.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node,","loc":420}},"nsMap":{},"nsPrev":{},"id":794,"ts":1714628901.39,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node,","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, ","loc":420}},"nsMap":{},"nsPrev":{},"id":795,"ts":1714628901.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, sc","loc":420}},"nsMap":{},"nsPrev":{},"id":796,"ts":1714628901.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, sc","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, sco","loc":420}},"nsMap":{},"nsPrev":{},"id":797,"ts":1714628901.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, sco","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scop","loc":420}},"nsMap":{},"nsPrev":{},"id":798,"ts":1714628901.806,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scop","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope","loc":420}},"nsMap":{},"nsPrev":{},"id":799,"ts":1714628901.866,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope)","loc":420}},"nsMap":{},"nsPrev":{},"id":800,"ts":1714628902.138,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope)","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) ","loc":420}},"nsMap":{},"nsPrev":{},"id":801,"ts":1714628902.174,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) =","loc":420}},"nsMap":{},"nsPrev":{},"id":802,"ts":1714628902.335,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) =","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => ","loc":420}},"nsMap":{},"nsPrev":{},"id":803,"ts":1714628902.549,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {","loc":420}},"nsMap":{},"nsPrev":{},"id":804,"ts":1714628902.724,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  ","loc":420}},"nsMap":{},"nsPrev":{},"id":805,"ts":1714628902.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  s","loc":420}},"nsMap":{},"nsPrev":{},"id":806,"ts":1714628903.163,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  s","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  sw","loc":420}},"nsMap":{},"nsPrev":{},"id":807,"ts":1714628903.343,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  sw","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  swit","loc":420}},"nsMap":{},"nsPrev":{},"id":808,"ts":1714628903.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  swit","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch","loc":420}},"nsMap":{},"nsPrev":{},"id":809,"ts":1714628903.68,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch ","loc":420}},"nsMap":{},"nsPrev":{},"id":810,"ts":1714628903.848,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (","loc":420}},"nsMap":{},"nsPrev":{},"id":811,"ts":1714628903.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (nod","loc":420}},"nsMap":{},"nsPrev":{},"id":812,"ts":1714628904.13,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (nod","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node","loc":420}},"nsMap":{},"nsPrev":{},"id":813,"ts":1714628904.17,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.","loc":420}},"nsMap":{},"nsPrev":{},"id":814,"ts":1714628904.289,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.t","loc":420}},"nsMap":{},"nsPrev":{},"id":815,"ts":1714628904.464,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.t","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.typ","loc":420}},"nsMap":{},"nsPrev":{},"id":816,"ts":1714628904.56,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.typ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type","loc":420}},"nsMap":{},"nsPrev":{},"id":817,"ts":1714628904.624,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type)","loc":420}},"nsMap":{},"nsPrev":{},"id":818,"ts":1714628904.822,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type)","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) ","loc":420}},"nsMap":{},"nsPrev":{},"id":819,"ts":1714628904.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {","loc":420}},"nsMap":{},"nsPrev":{},"id":820,"ts":1714628905.058,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    ","loc":420}},"nsMap":{},"nsPrev":{},"id":821,"ts":1714628905.325,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    ca","loc":420}},"nsMap":{},"nsPrev":{},"id":822,"ts":1714628906.016,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    ca","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    cas","loc":420}},"nsMap":{},"nsPrev":{},"id":823,"ts":1714628906.183,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    cas","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case","loc":420}},"nsMap":{},"nsPrev":{},"id":824,"ts":1714628906.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":825,"ts":1714628906.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 's","loc":420}},"nsMap":{},"nsPrev":{},"id":826,"ts":1714628907.481,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 's","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'se","loc":420}},"nsMap":{},"nsPrev":{},"id":827,"ts":1714628907.856,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'se","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sex","loc":420}},"nsMap":{},"nsPrev":{},"id":828,"ts":1714628908.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sex","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexp","loc":420}},"nsMap":{},"nsPrev":{},"id":829,"ts":1714628908.136,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexp","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr","loc":420}},"nsMap":{},"nsPrev":{},"id":830,"ts":1714628908.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr'","loc":420}},"nsMap":{},"nsPrev":{},"id":831,"ts":1714628908.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr'","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr':","loc":420}},"nsMap":{},"nsPrev":{},"id":832,"ts":1714628908.785,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr':","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': ","loc":420}},"nsMap":{},"nsPrev":{},"id":833,"ts":1714628908.813,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': re","loc":420}},"nsMap":{},"nsPrev":{},"id":834,"ts":1714628909.346,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': re","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': retu","loc":420}},"nsMap":{},"nsPrev":{},"id":835,"ts":1714628909.556,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': retu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return","loc":420}},"nsMap":{},"nsPrev":{},"id":836,"ts":1714628909.767,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return ","loc":420}},"nsMap":{},"nsPrev":{},"id":837,"ts":1714628909.884,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return e","loc":420}},"nsMap":{},"nsPrev":{},"id":838,"ts":1714628910.011,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return e","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return ev","loc":420}},"nsMap":{},"nsPrev":{},"id":839,"ts":1714628910.227,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return ev","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return eva","loc":420}},"nsMap":{},"nsPrev":{},"id":840,"ts":1714628910.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return eva","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evalua","loc":420}},"nsMap":{},"nsPrev":{},"id":841,"ts":1714628910.497,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evalua","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate","loc":420}},"nsMap":{},"nsPrev":{},"id":842,"ts":1714628910.705,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(","loc":420}},"nsMap":{},"nsPrev":{},"id":843,"ts":1714628910.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(no","loc":420}},"nsMap":{},"nsPrev":{},"id":844,"ts":1714628911.134,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(no","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node","loc":420}},"nsMap":{},"nsPrev":{},"id":845,"ts":1714628911.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[","loc":420}},"nsMap":{},"nsPrev":{},"id":846,"ts":1714628911.417,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0]","loc":420}},"nsMap":{},"nsPrev":{},"id":847,"ts":1714628911.618,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0]","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0],","loc":420}},"nsMap":{},"nsPrev":{},"id":848,"ts":1714628911.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0],","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], ","loc":420}},"nsMap":{},"nsPrev":{},"id":849,"ts":1714628912.013,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], sc","loc":420}},"nsMap":{},"nsPrev":{},"id":850,"ts":1714628912.161,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], sc","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], sco","loc":420}},"nsMap":{},"nsPrev":{},"id":851,"ts":1714628912.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], sco","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scop","loc":420}},"nsMap":{},"nsPrev":{},"id":852,"ts":1714628912.297,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scop","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope","loc":420}},"nsMap":{},"nsPrev":{},"id":853,"ts":1714628912.353,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)","loc":420}},"nsMap":{},"nsPrev":{},"id":854,"ts":1714628912.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    ","loc":420}},"nsMap":{},"nsPrev":{},"id":855,"ts":1714628913.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    ca","loc":420}},"nsMap":{},"nsPrev":{},"id":856,"ts":1714628914.263,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    ca","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    cas","loc":420}},"nsMap":{},"nsPrev":{},"id":857,"ts":1714628914.319,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    cas","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case ","loc":420}},"nsMap":{},"nsPrev":{},"id":858,"ts":1714628914.569,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":859,"ts":1714628914.782,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, scope) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, en) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":860,"ts":1714628938.109,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, en) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":861,"ts":1714628938.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], scope)\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], e)\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":862,"ts":1714628939.714,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], e)\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], en)\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":863,"ts":1714628939.809,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], en)\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":864,"ts":1714628939.911,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 's","loc":420}},"nsMap":{},"nsPrev":{},"id":865,"ts":1714628941.621,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 's","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sde","loc":420}},"nsMap":{},"nsPrev":{},"id":866,"ts":1714628943.404,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sde","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef","loc":420}},"nsMap":{},"nsPrev":{},"id":867,"ts":1714628943.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef'","loc":420}},"nsMap":{},"nsPrev":{},"id":868,"ts":1714628943.704,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef'","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':","loc":420}},"nsMap":{},"nsPrev":{},"id":869,"ts":1714628943.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n    ","loc":420}},"nsMap":{},"nsPrev":{},"id":870,"ts":1714628944.773,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n    ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      ","loc":420}},"nsMap":{},"nsPrev":{},"id":871,"ts":1714628945.201,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      c","loc":420}},"nsMap":{},"nsPrev":{},"id":872,"ts":1714628946.829,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      c","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      con","loc":420}},"nsMap":{},"nsPrev":{},"id":873,"ts":1714628946.926,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      con","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      cons","loc":420}},"nsMap":{},"nsPrev":{},"id":874,"ts":1714628946.956,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      cons","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const","loc":420}},"nsMap":{},"nsPrev":{},"id":875,"ts":1714628947.042,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const ","loc":420}},"nsMap":{},"nsPrev":{},"id":876,"ts":1714628947.101,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const a","loc":420}},"nsMap":{},"nsPrev":{},"id":877,"ts":1714628947.467,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const a","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const v","loc":420}},"nsMap":{},"nsPrev":{},"id":878,"ts":1714628947.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const v","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const va","loc":420}},"nsMap":{},"nsPrev":{},"id":879,"ts":1714628947.922,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const va","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const valu","loc":420}},"nsMap":{},"nsPrev":{},"id":880,"ts":1714628948.011,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const valu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value","loc":420}},"nsMap":{},"nsPrev":{},"id":881,"ts":1714628948.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value =","loc":420}},"nsMap":{},"nsPrev":{},"id":882,"ts":1714628948.204,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value =","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = ","loc":420}},"nsMap":{},"nsPrev":{},"id":883,"ts":1714628948.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = e","loc":420}},"nsMap":{},"nsPrev":{},"id":884,"ts":1714628948.494,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = e","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = ev","loc":420}},"nsMap":{},"nsPrev":{},"id":885,"ts":1714628948.615,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = ev","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = eval","loc":420}},"nsMap":{},"nsPrev":{},"id":886,"ts":1714628948.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = eval","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evalua","loc":420}},"nsMap":{},"nsPrev":{},"id":887,"ts":1714628948.828,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evalua","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate","loc":420}},"nsMap":{},"nsPrev":{},"id":888,"ts":1714628949.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(","loc":420}},"nsMap":{},"nsPrev":{},"id":889,"ts":1714628949.249,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(no","loc":420}},"nsMap":{},"nsPrev":{},"id":890,"ts":1714628949.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(no","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node","loc":420}},"nsMap":{},"nsPrev":{},"id":891,"ts":1714628949.484,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[","loc":420}},"nsMap":{},"nsPrev":{},"id":892,"ts":1714628949.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1","loc":420}},"nsMap":{},"nsPrev":{},"id":893,"ts":1714628949.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1]","loc":420}},"nsMap":{},"nsPrev":{},"id":894,"ts":1714628949.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1]","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1],","loc":420}},"nsMap":{},"nsPrev":{},"id":895,"ts":1714628950.063,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1],","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], ","loc":420}},"nsMap":{},"nsPrev":{},"id":896,"ts":1714628950.17,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], e","loc":420}},"nsMap":{},"nsPrev":{},"id":897,"ts":1714628950.414,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], e","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env","loc":420}},"nsMap":{},"nsPrev":{},"id":898,"ts":1714628950.527,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)","loc":420}},"nsMap":{},"nsPrev":{},"id":899,"ts":1714628950.761,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      ","loc":420}},"nsMap":{},"nsPrev":{},"id":900,"ts":1714628951.204,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      e","loc":420}},"nsMap":{},"nsPrev":{},"id":901,"ts":1714628951.634,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      e","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env","loc":420}},"nsMap":{},"nsPrev":{},"id":902,"ts":1714628951.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[","loc":420}},"nsMap":{},"nsPrev":{},"id":903,"ts":1714628951.955,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[n","loc":420}},"nsMap":{},"nsPrev":{},"id":904,"ts":1714628952.59,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[na","loc":420}},"nsMap":{},"nsPrev":{},"id":905,"ts":1714628952.688,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[na","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[nam","loc":420}},"nsMap":{},"nsPrev":{},"id":906,"ts":1714628952.799,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[nam","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name]","loc":420}},"nsMap":{},"nsPrev":{},"id":907,"ts":1714628952.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name]","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] ","loc":420}},"nsMap":{},"nsPrev":{},"id":908,"ts":1714628953.414,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] =","loc":420}},"nsMap":{},"nsPrev":{},"id":909,"ts":1714628953.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] =","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = ","loc":420}},"nsMap":{},"nsPrev":{},"id":910,"ts":1714628953.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = a","loc":420}},"nsMap":{},"nsPrev":{},"id":911,"ts":1714628953.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = a","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = v","loc":420}},"nsMap":{},"nsPrev":{},"id":912,"ts":1714628954.135,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = v","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = va","loc":420}},"nsMap":{},"nsPrev":{},"id":913,"ts":1714628954.351,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = va","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = valu","loc":420}},"nsMap":{},"nsPrev":{},"id":914,"ts":1714628954.451,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = valu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value","loc":420}},"nsMap":{},"nsPrev":{},"id":915,"ts":1714628954.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      ","loc":420}},"nsMap":{},"nsPrev":{},"id":916,"ts":1714628954.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      re","loc":420}},"nsMap":{},"nsPrev":{},"id":917,"ts":1714628955.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      re","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      ret","loc":420}},"nsMap":{},"nsPrev":{},"id":918,"ts":1714628955.305,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      ret","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      retu","loc":420}},"nsMap":{},"nsPrev":{},"id":919,"ts":1714628955.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      retu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return","loc":420}},"nsMap":{},"nsPrev":{},"id":920,"ts":1714628955.498,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return ","loc":420}},"nsMap":{},"nsPrev":{},"id":921,"ts":1714628955.588,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return v","loc":420}},"nsMap":{},"nsPrev":{},"id":922,"ts":1714628955.744,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return v","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return val","loc":420}},"nsMap":{},"nsPrev":{},"id":923,"ts":1714628955.921,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return val","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return valu","loc":420}},"nsMap":{},"nsPrev":{},"id":924,"ts":1714628955.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return valu","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value","loc":420}},"nsMap":{},"nsPrev":{},"id":925,"ts":1714628956.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n      ","loc":420}},"nsMap":{},"nsPrev":{},"id":926,"ts":1714628956.604,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n      ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    ","loc":420}},"nsMap":{},"nsPrev":{},"id":927,"ts":1714628956.836,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    ca","loc":420}},"nsMap":{},"nsPrev":{},"id":928,"ts":1714628957.176,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    ca","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    cas","loc":420}},"nsMap":{},"nsPrev":{},"id":929,"ts":1714628957.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    cas","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case","loc":420}},"nsMap":{},"nsPrev":{},"id":930,"ts":1714628957.463,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case ","loc":420}},"nsMap":{},"nsPrev":{},"id":931,"ts":1714628957.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case '","loc":420}},"nsMap":{},"nsPrev":{},"id":932,"ts":1714628957.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case '","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 's","loc":420}},"nsMap":{},"nsPrev":{},"id":933,"ts":1714628958.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 's","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sde","loc":420}},"nsMap":{},"nsPrev":{},"id":934,"ts":1714628958.804,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sde","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdef","loc":420}},"nsMap":{},"nsPrev":{},"id":935,"ts":1714628958.897,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdef","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeft","loc":420}},"nsMap":{},"nsPrev":{},"id":936,"ts":1714628959.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeft","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftyp","loc":420}},"nsMap":{},"nsPrev":{},"id":937,"ts":1714628959.249,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftyp","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype","loc":420}},"nsMap":{},"nsPrev":{},"id":938,"ts":1714628959.301,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype'","loc":420}},"nsMap":{},"nsPrev":{},"id":939,"ts":1714628959.52,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype'","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':","loc":420}},"nsMap":{},"nsPrev":{},"id":940,"ts":1714628959.706,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n    ","loc":420}},"nsMap":{},"nsPrev":{},"id":941,"ts":1714628965.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n    ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      ","loc":420}},"nsMap":{},"nsPrev":{},"id":942,"ts":1714628966.028,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      un","loc":420}},"nsMap":{},"nsPrev":{},"id":943,"ts":1714628977.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      un","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unw","loc":420}},"nsMap":{},"nsPrev":{},"id":944,"ts":1714628977.264,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unw","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwr","loc":420}},"nsMap":{},"nsPrev":{},"id":945,"ts":1714628977.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwr","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwra","loc":420}},"nsMap":{},"nsPrev":{},"id":946,"ts":1714628977.505,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwra","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrap","loc":420}},"nsMap":{},"nsPrev":{},"id":947,"ts":1714628977.593,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrap","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapA","loc":420}},"nsMap":{},"nsPrev":{},"id":948,"ts":1714628977.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapA","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapAr","loc":420}},"nsMap":{},"nsPrev":{},"id":949,"ts":1714628977.923,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapAr","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArra","loc":420}},"nsMap":{},"nsPrev":{},"id":950,"ts":1714628978.062,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArra","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray","loc":420}},"nsMap":{},"nsPrev":{},"id":951,"ts":1714628978.254,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(","loc":420}},"nsMap":{},"nsPrev":{},"id":952,"ts":1714628978.515,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(no","loc":420}},"nsMap":{},"nsPrev":{},"id":953,"ts":1714628979.241,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(no","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(nod","loc":420}},"nsMap":{},"nsPrev":{},"id":954,"ts":1714628979.313,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(nod","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node","loc":420}},"nsMap":{},"nsPrev":{},"id":955,"ts":1714628979.369,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[","loc":420}},"nsMap":{},"nsPrev":{},"id":956,"ts":1714628979.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1","loc":420}},"nsMap":{},"nsPrev":{},"id":957,"ts":1714628983.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]","loc":420}},"nsMap":{},"nsPrev":{},"id":958,"ts":1714628983.489,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1])","loc":420}},"nsMap":{},"nsPrev":{},"id":959,"ts":1714628984.124,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1])","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).","loc":420}},"nsMap":{},"nsPrev":{},"id":960,"ts":1714628984.411,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).f","loc":420}},"nsMap":{},"nsPrev":{},"id":961,"ts":1714628984.525,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).f","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).for","loc":420}},"nsMap":{},"nsPrev":{},"id":962,"ts":1714628984.628,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).for","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forE","loc":420}},"nsMap":{},"nsPrev":{},"id":963,"ts":1714628984.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forE","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEac","loc":420}},"nsMap":{},"nsPrev":{},"id":964,"ts":1714628985.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEac","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach","loc":420}},"nsMap":{},"nsPrev":{},"id":965,"ts":1714628985.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(","loc":420}},"nsMap":{},"nsPrev":{},"id":966,"ts":1714628985.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(c","loc":420}},"nsMap":{},"nsPrev":{},"id":967,"ts":1714628987.343,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(c","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(con","loc":420}},"nsMap":{},"nsPrev":{},"id":968,"ts":1714628987.446,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(con","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(cons","loc":420}},"nsMap":{},"nsPrev":{},"id":969,"ts":1714628987.483,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(cons","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(const","loc":420}},"nsMap":{},"nsPrev":{},"id":970,"ts":1714628987.574,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(const","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr","loc":420}},"nsMap":{},"nsPrev":{},"id":971,"ts":1714628987.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr ","loc":420}},"nsMap":{},"nsPrev":{},"id":972,"ts":1714628988.023,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr =","loc":420}},"nsMap":{},"nsPrev":{},"id":973,"ts":1714628988.125,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr =","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr =>","loc":420}},"nsMap":{},"nsPrev":{},"id":974,"ts":1714628988.41,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr =>","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => ","loc":420}},"nsMap":{},"nsPrev":{},"id":975,"ts":1714628988.569,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {","loc":420}},"nsMap":{},"nsPrev":{},"id":976,"ts":1714628989.011,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n        ","loc":420}},"nsMap":{},"nsPrev":{},"id":977,"ts":1714628989.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n        ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n        }","loc":420}},"nsMap":{},"nsPrev":{},"id":978,"ts":1714628989.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n        }","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n        })","loc":420}},"nsMap":{},"nsPrev":{},"id":979,"ts":1714628989.851,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n        })","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })","loc":420}},"nsMap":{},"nsPrev":{},"id":980,"ts":1714628990.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n      ","loc":420}},"nsMap":{},"nsPrev":{},"id":981,"ts":1714628991.925,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n      ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n    ","loc":420}},"nsMap":{},"nsPrev":{},"id":982,"ts":1714628992.186,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n    ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n    }","loc":420}},"nsMap":{},"nsPrev":{},"id":983,"ts":1714628992.293,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n    }","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n    ","loc":420}},"nsMap":{},"nsPrev":{},"id":984,"ts":1714628992.743,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n    ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  ","loc":420}},"nsMap":{},"nsPrev":{},"id":985,"ts":1714628993.287,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }","loc":420}},"nsMap":{},"nsPrev":{},"id":986,"ts":1714628993.464,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n  ","loc":420}},"nsMap":{},"nsPrev":{},"id":987,"ts":1714628993.758,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n  ","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n","loc":420}},"nsMap":{},"nsPrev":{},"id":988,"ts":1714628994.188,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":989,"ts":1714628994.311,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n  }\n","loc":420}},"nsMap":{},"nsPrev":{},"id":990,"ts":1714628995.701,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n  }\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":991,"ts":1714628996.507,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns-top","idx":220},{"idx":219,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns-top","idx":220},{"idx":219,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"220":{"type":"normal","top":219,"children":[222,226,228,248,230],"id":220,"collapsed":false}},"nsPrev":{"220":{"type":"normal","top":219,"children":[222,226,228,248,230],"id":220,"collapsed":true}},"id":992,"ts":1714629003.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(constr => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(( => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":993,"ts":1714629027.546,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(( => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach( => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":994,"ts":1714629029.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach( => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(( => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":995,"ts":1714629030.078,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(( => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({ => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":996,"ts":1714629030.284,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({ => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0 => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":997,"ts":1714629030.893,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0 => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":998,"ts":1714629031.622,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0:  => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":999,"ts":1714629031.816,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0:  => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: n => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1000,"ts":1714629032.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: n => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: na => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1001,"ts":1714629032.596,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: na => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1002,"ts":1714629032.704,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1003,"ts":1714629033.051,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name,  => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1004,"ts":1714629033.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name,  => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1 => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1005,"ts":1714629033.537,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1 => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1006,"ts":1714629033.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1:  => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1007,"ts":1714629033.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1:  => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: co => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1008,"ts":1714629034.252,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: co => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: cou => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1009,"ts":1714629034.324,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: cou => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: coun => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1010,"ts":1714629034.537,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: coun => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1011,"ts":1714629034.628,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count} => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1012,"ts":1714629034.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count} => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1013,"ts":1714629035.053,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        \n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1014,"ts":1714629039.163,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        \n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        e\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1015,"ts":1714629040.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        e\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1016,"ts":1714629040.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1017,"ts":1714629040.907,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[n\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1018,"ts":1714629041.157,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[n\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[na\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1019,"ts":1714629041.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[na\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[nam\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1020,"ts":1714629041.346,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[nam\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1021,"ts":1714629041.429,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name]\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1022,"ts":1714629041.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name]\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] =\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1023,"ts":1714629041.653,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] =\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = \n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1024,"ts":1714629041.824,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = \n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = c\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1025,"ts":1714629044.346,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = c\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = con\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1026,"ts":1714629044.541,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = con\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = cons\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1027,"ts":1714629044.585,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = cons\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constr\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1028,"ts":1714629044.67,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constr\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrF\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1029,"ts":1714629045.069,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrF\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1030,"ts":1714629045.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1031,"ts":1714629045.587,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(n\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1032,"ts":1714629045.834,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(n\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(na\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1033,"ts":1714629045.939,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(na\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(nam\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1034,"ts":1714629046.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(nam\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1035,"ts":1714629046.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, \n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1036,"ts":1714629046.294,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, \n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, cou\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1037,"ts":1714629046.618,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, cou\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1038,"ts":1714629046.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1039,"ts":1714629047.066,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      \n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1040,"ts":1714629054.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      \n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      re\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1041,"ts":1714629054.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      re\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      ret\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1042,"ts":1714629054.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      ret\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      retu\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1043,"ts":1714629054.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      retu\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      retur\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1044,"ts":1714629054.762,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      retur\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return \n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1045,"ts":1714629054.84,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return \n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return nu\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1046,"ts":1714629055.02,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return nu\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return nul\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1047,"ts":1714629055.25,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return nul\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1048,"ts":1714629055.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"idx":422,"type":"rich-text","sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"422":null},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","loc":422,"raw":""}},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,278,329,343,359,336,301,317,283],"id":36},"423":{"type":"normal","top":422,"children":[],"id":423}},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,22,287,276,370,278,329,343,359,336,301,317,283],"id":36},"423":null},"id":1049,"ts":1714629073.908,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"idx":422,"type":"rich-text","sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","loc":422,"raw":""}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"co","loc":422}},"nsMap":{},"nsPrev":{},"id":1050,"ts":1714629076.686,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"co","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"con","loc":422}},"nsMap":{},"nsPrev":{},"id":1051,"ts":1714629076.762,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"con","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"cons","loc":422}},"nsMap":{},"nsPrev":{},"id":1052,"ts":1714629076.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"cons","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constr","loc":422}},"nsMap":{},"nsPrev":{},"id":1053,"ts":1714629076.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constr","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrf","loc":422}},"nsMap":{},"nsPrev":{},"id":1054,"ts":1714629077.297,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrf","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constr","loc":422}},"nsMap":{},"nsPrev":{},"id":1055,"ts":1714629077.59,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constr","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrF","loc":422}},"nsMap":{},"nsPrev":{},"id":1056,"ts":1714629077.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrF","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn","loc":422}},"nsMap":{},"nsPrev":{},"id":1057,"ts":1714629077.809,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn ","loc":422}},"nsMap":{},"nsPrev":{},"id":1058,"ts":1714629077.956,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = ","loc":422}},"nsMap":{},"nsPrev":{},"id":1059,"ts":1714629078.067,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (","loc":422}},"nsMap":{},"nsPrev":{},"id":1060,"ts":1714629078.28,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (n","loc":422}},"nsMap":{},"nsPrev":{},"id":1061,"ts":1714629078.456,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (n","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (na","loc":422}},"nsMap":{},"nsPrev":{},"id":1062,"ts":1714629078.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (na","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (nam","loc":422}},"nsMap":{},"nsPrev":{},"id":1063,"ts":1714629078.656,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (nam","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name","loc":422}},"nsMap":{},"nsPrev":{},"id":1064,"ts":1714629078.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, ","loc":422}},"nsMap":{},"nsPrev":{},"id":1065,"ts":1714629079.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, co","loc":422}},"nsMap":{},"nsPrev":{},"id":1066,"ts":1714629079.693,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, co","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, cou","loc":422}},"nsMap":{},"nsPrev":{},"id":1067,"ts":1714629079.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, cou","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count","loc":422}},"nsMap":{},"nsPrev":{},"id":1068,"ts":1714629079.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count)","loc":422}},"nsMap":{},"nsPrev":{},"id":1069,"ts":1714629080.19,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count)","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) ","loc":422}},"nsMap":{},"nsPrev":{},"id":1070,"ts":1714629080.272,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) =","loc":422}},"nsMap":{},"nsPrev":{},"id":1071,"ts":1714629080.378,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) =","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => ","loc":422}},"nsMap":{},"nsPrev":{},"id":1072,"ts":1714629080.586,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {","loc":422}},"nsMap":{},"nsPrev":{},"id":1073,"ts":1714629088.411,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  ","loc":422}},"nsMap":{},"nsPrev":{},"id":1074,"ts":1714629088.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  co","loc":422}},"nsMap":{},"nsPrev":{},"id":1075,"ts":1714629138.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  co","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  con","loc":422}},"nsMap":{},"nsPrev":{},"id":1076,"ts":1714629138.901,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  con","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const","loc":422}},"nsMap":{},"nsPrev":{},"id":1077,"ts":1714629139.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const ","loc":422}},"nsMap":{},"nsPrev":{},"id":1078,"ts":1714629139.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const n","loc":422}},"nsMap":{},"nsPrev":{},"id":1079,"ts":1714629139.152,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const n","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const ne","loc":422}},"nsMap":{},"nsPrev":{},"id":1080,"ts":1714629139.2,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const ne","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const nex","loc":422}},"nsMap":{},"nsPrev":{},"id":1081,"ts":1714629139.441,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const nex","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next","loc":422}},"nsMap":{},"nsPrev":{},"id":1082,"ts":1714629139.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next =","loc":422}},"nsMap":{},"nsPrev":{},"id":1083,"ts":1714629139.707,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next =","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = ","loc":422}},"nsMap":{},"nsPrev":{},"id":1084,"ts":1714629139.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (","loc":422}},"nsMap":{},"nsPrev":{},"id":1085,"ts":1714629140.263,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (le","loc":422}},"nsMap":{},"nsPrev":{},"id":1086,"ts":1714629143.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (le","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (lef","loc":422}},"nsMap":{},"nsPrev":{},"id":1087,"ts":1714629143.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (lef","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left","loc":422}},"nsMap":{},"nsPrev":{},"id":1088,"ts":1714629143.66,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left)","loc":422}},"nsMap":{},"nsPrev":{},"id":1089,"ts":1714629143.874,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left)","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) ","loc":422}},"nsMap":{},"nsPrev":{},"id":1090,"ts":1714629143.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) =","loc":422}},"nsMap":{},"nsPrev":{},"id":1091,"ts":1714629144.081,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) =","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => ","loc":422}},"nsMap":{},"nsPrev":{},"id":1092,"ts":1714629144.313,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {","loc":422}},"nsMap":{},"nsPrev":{},"id":1093,"ts":1714629148.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    ","loc":422}},"nsMap":{},"nsPrev":{},"id":1094,"ts":1714629149.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    i","loc":422}},"nsMap":{},"nsPrev":{},"id":1095,"ts":1714629149.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    i","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if","loc":422}},"nsMap":{},"nsPrev":{},"id":1096,"ts":1714629149.903,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (","loc":422}},"nsMap":{},"nsPrev":{},"id":1097,"ts":1714629150.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (l","loc":422}},"nsMap":{},"nsPrev":{},"id":1098,"ts":1714629151.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (l","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (lef","loc":422}},"nsMap":{},"nsPrev":{},"id":1099,"ts":1714629151.168,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (lef","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left","loc":422}},"nsMap":{},"nsPrev":{},"id":1100,"ts":1714629151.412,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left =","loc":422}},"nsMap":{},"nsPrev":{},"id":1101,"ts":1714629151.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left =","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left ==","loc":422}},"nsMap":{},"nsPrev":{},"id":1102,"ts":1714629151.697,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left ==","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left ===","loc":422}},"nsMap":{},"nsPrev":{},"id":1103,"ts":1714629151.83,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left ===","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === ","loc":422}},"nsMap":{},"nsPrev":{},"id":1104,"ts":1714629151.934,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0","loc":422}},"nsMap":{},"nsPrev":{},"id":1105,"ts":1714629152.053,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0)","loc":422}},"nsMap":{},"nsPrev":{},"id":1106,"ts":1714629152.647,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0)","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) ","loc":422}},"nsMap":{},"nsPrev":{},"id":1107,"ts":1714629158.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) re","loc":422}},"nsMap":{},"nsPrev":{},"id":1108,"ts":1714629161.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) re","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) ret","loc":422}},"nsMap":{},"nsPrev":{},"id":1109,"ts":1714629161.331,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) ret","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) retu","loc":422}},"nsMap":{},"nsPrev":{},"id":1110,"ts":1714629161.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) retu","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return","loc":422}},"nsMap":{},"nsPrev":{},"id":1111,"ts":1714629161.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return ","loc":422}},"nsMap":{},"nsPrev":{},"id":1112,"ts":1714629161.651,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return v","loc":422}},"nsMap":{},"nsPrev":{},"id":1113,"ts":1714629168.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return v","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return va","loc":422}},"nsMap":{},"nsPrev":{},"id":1114,"ts":1714629168.397,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return va","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return valu","loc":422}},"nsMap":{},"nsPrev":{},"id":1115,"ts":1714629168.518,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return valu","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return value","loc":422}},"nsMap":{},"nsPrev":{},"id":1116,"ts":1714629168.549,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return value","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values","loc":422}},"nsMap":{},"nsPrev":{},"id":1117,"ts":1714629168.635,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values ","loc":422}},"nsMap":{},"nsPrev":{},"id":1118,"ts":1714629168.791,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values =","loc":422}},"nsMap":{},"nsPrev":{},"id":1119,"ts":1714629168.847,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values =","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values =>","loc":422}},"nsMap":{},"nsPrev":{},"id":1120,"ts":1714629169.105,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values =>","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ","loc":422}},"nsMap":{},"nsPrev":{},"id":1121,"ts":1714629169.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => (","loc":422}},"nsMap":{},"nsPrev":{},"id":1122,"ts":1714629170.358,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => (","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({","loc":422}},"nsMap":{},"nsPrev":{},"id":1123,"ts":1714629170.56,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({t","loc":422}},"nsMap":{},"nsPrev":{},"id":1124,"ts":1714629170.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({t","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({typ","loc":422}},"nsMap":{},"nsPrev":{},"id":1125,"ts":1714629170.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({typ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type","loc":422}},"nsMap":{},"nsPrev":{},"id":1126,"ts":1714629171.083,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type:","loc":422}},"nsMap":{},"nsPrev":{},"id":1127,"ts":1714629171.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type:","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: ","loc":422}},"nsMap":{},"nsPrev":{},"id":1128,"ts":1714629171.803,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: n","loc":422}},"nsMap":{},"nsPrev":{},"id":1129,"ts":1714629171.896,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: n","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: na","loc":422}},"nsMap":{},"nsPrev":{},"id":1130,"ts":1714629171.983,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: na","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: nam","loc":422}},"nsMap":{},"nsPrev":{},"id":1131,"ts":1714629172.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: nam","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name","loc":422}},"nsMap":{},"nsPrev":{},"id":1132,"ts":1714629172.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name,","loc":422}},"nsMap":{},"nsPrev":{},"id":1133,"ts":1714629172.37,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name,","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ","loc":422}},"nsMap":{},"nsPrev":{},"id":1134,"ts":1714629172.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, .","loc":422}},"nsMap":{},"nsPrev":{},"id":1135,"ts":1714629172.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, .","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ..","loc":422}},"nsMap":{},"nsPrev":{},"id":1136,"ts":1714629172.905,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ..","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...","loc":422}},"nsMap":{},"nsPrev":{},"id":1137,"ts":1714629173.061,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...v","loc":422}},"nsMap":{},"nsPrev":{},"id":1138,"ts":1714629173.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...v","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...val","loc":422}},"nsMap":{},"nsPrev":{},"id":1139,"ts":1714629173.345,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...val","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...valu","loc":422}},"nsMap":{},"nsPrev":{},"id":1140,"ts":1714629173.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...valu","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...value","loc":422}},"nsMap":{},"nsPrev":{},"id":1141,"ts":1714629173.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...value","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values","loc":422}},"nsMap":{},"nsPrev":{},"id":1142,"ts":1714629173.611,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values}","loc":422}},"nsMap":{},"nsPrev":{},"id":1143,"ts":1714629174.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values}","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})","loc":422}},"nsMap":{},"nsPrev":{},"id":1144,"ts":1714629174.416,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    ","loc":422}},"nsMap":{},"nsPrev":{},"id":1145,"ts":1714629175.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    re","loc":422}},"nsMap":{},"nsPrev":{},"id":1146,"ts":1714629177.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    re","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    ret","loc":422}},"nsMap":{},"nsPrev":{},"id":1147,"ts":1714629177.721,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    ret","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    retu","loc":422}},"nsMap":{},"nsPrev":{},"id":1148,"ts":1714629177.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    retu","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return","loc":422}},"nsMap":{},"nsPrev":{},"id":1149,"ts":1714629177.91,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return ","loc":422}},"nsMap":{},"nsPrev":{},"id":1150,"ts":1714629178.085,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return v","loc":422}},"nsMap":{},"nsPrev":{},"id":1151,"ts":1714629179.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return v","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return va","loc":422}},"nsMap":{},"nsPrev":{},"id":1152,"ts":1714629179.465,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return va","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return value","loc":422}},"nsMap":{},"nsPrev":{},"id":1153,"ts":1714629179.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return value","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values","loc":422}},"nsMap":{},"nsPrev":{},"id":1154,"ts":1714629179.733,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values =","loc":422}},"nsMap":{},"nsPrev":{},"id":1155,"ts":1714629179.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values =","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values =>","loc":422}},"nsMap":{},"nsPrev":{},"id":1156,"ts":1714629180.157,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values =>","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => ","loc":422}},"nsMap":{},"nsPrev":{},"id":1157,"ts":1714629180.269,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => a","loc":422}},"nsMap":{},"nsPrev":{},"id":1158,"ts":1714629180.542,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => a","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg","loc":422}},"nsMap":{},"nsPrev":{},"id":1159,"ts":1714629180.774,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg ","loc":422}},"nsMap":{},"nsPrev":{},"id":1160,"ts":1714629180.824,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg =","loc":422}},"nsMap":{},"nsPrev":{},"id":1161,"ts":1714629181.003,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg =","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg =>","loc":422}},"nsMap":{},"nsPrev":{},"id":1162,"ts":1714629181.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg =>","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => ","loc":422}},"nsMap":{},"nsPrev":{},"id":1163,"ts":1714629181.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => n","loc":422}},"nsMap":{},"nsPrev":{},"id":1164,"ts":1714629183.786,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => n","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => ne","loc":422}},"nsMap":{},"nsPrev":{},"id":1165,"ts":1714629183.871,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => ne","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => nex","loc":422}},"nsMap":{},"nsPrev":{},"id":1166,"ts":1714629184.089,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => nex","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next","loc":422}},"nsMap":{},"nsPrev":{},"id":1167,"ts":1714629184.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(","loc":422}},"nsMap":{},"nsPrev":{},"id":1168,"ts":1714629184.485,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(l","loc":422}},"nsMap":{},"nsPrev":{},"id":1169,"ts":1714629186.501,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(l","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(lef","loc":422}},"nsMap":{},"nsPrev":{},"id":1170,"ts":1714629186.617,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(lef","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left","loc":422}},"nsMap":{},"nsPrev":{},"id":1171,"ts":1714629186.841,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left -","loc":422}},"nsMap":{},"nsPrev":{},"id":1172,"ts":1714629186.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left -","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - ","loc":422}},"nsMap":{},"nsPrev":{},"id":1173,"ts":1714629187.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1","loc":422}},"nsMap":{},"nsPrev":{},"id":1174,"ts":1714629187.337,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)","loc":422}},"nsMap":{},"nsPrev":{},"id":1175,"ts":1714629188.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)(","loc":422}},"nsMap":{},"nsPrev":{},"id":1176,"ts":1714629189.017,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)(","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({","loc":422}},"nsMap":{},"nsPrev":{},"id":1177,"ts":1714629189.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({.","loc":422}},"nsMap":{},"nsPrev":{},"id":1178,"ts":1714629189.623,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({.","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({..","loc":422}},"nsMap":{},"nsPrev":{},"id":1179,"ts":1714629189.766,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({..","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({...","loc":422}},"nsMap":{},"nsPrev":{},"id":1180,"ts":1714629189.93,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({...","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({..","loc":422}},"nsMap":{},"nsPrev":{},"id":1181,"ts":1714629190.53,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({..","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({.","loc":422}},"nsMap":{},"nsPrev":{},"id":1182,"ts":1714629190.71,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({.","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({","loc":422}},"nsMap":{},"nsPrev":{},"id":1183,"ts":1714629190.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)({","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)(","loc":422}},"nsMap":{},"nsPrev":{},"id":1184,"ts":1714629191.018,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)(","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([","loc":422}},"nsMap":{},"nsPrev":{},"id":1185,"ts":1714629191.374,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([.","loc":422}},"nsMap":{},"nsPrev":{},"id":1186,"ts":1714629191.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([.","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([..","loc":422}},"nsMap":{},"nsPrev":{},"id":1187,"ts":1714629191.967,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([..","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...","loc":422}},"nsMap":{},"nsPrev":{},"id":1188,"ts":1714629192.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...v","loc":422}},"nsMap":{},"nsPrev":{},"id":1189,"ts":1714629192.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...v","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...va","loc":422}},"nsMap":{},"nsPrev":{},"id":1190,"ts":1714629192.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...va","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...valu","loc":422}},"nsMap":{},"nsPrev":{},"id":1191,"ts":1714629192.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...valu","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values","loc":422}},"nsMap":{},"nsPrev":{},"id":1192,"ts":1714629192.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values,","loc":422}},"nsMap":{},"nsPrev":{},"id":1193,"ts":1714629192.712,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values,","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, ","loc":422}},"nsMap":{},"nsPrev":{},"id":1194,"ts":1714629192.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, a","loc":422}},"nsMap":{},"nsPrev":{},"id":1195,"ts":1714629193.013,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, a","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg","loc":422}},"nsMap":{},"nsPrev":{},"id":1196,"ts":1714629193.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg]","loc":422}},"nsMap":{},"nsPrev":{},"id":1197,"ts":1714629193.393,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg]","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])","loc":422}},"nsMap":{},"nsPrev":{},"id":1198,"ts":1714629193.726,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n    ","loc":422}},"nsMap":{},"nsPrev":{},"id":1199,"ts":1714629194.647,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n    ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  ","loc":422}},"nsMap":{},"nsPrev":{},"id":1200,"ts":1714629194.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }","loc":422}},"nsMap":{},"nsPrev":{},"id":1201,"ts":1714629195.376,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  ","loc":422}},"nsMap":{},"nsPrev":{},"id":1202,"ts":1714629195.643,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  re","loc":422}},"nsMap":{},"nsPrev":{},"id":1203,"ts":1714629205.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  re","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  ret","loc":422}},"nsMap":{},"nsPrev":{},"id":1204,"ts":1714629206.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  ret","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  retu","loc":422}},"nsMap":{},"nsPrev":{},"id":1205,"ts":1714629206.237,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  retu","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return","loc":422}},"nsMap":{},"nsPrev":{},"id":1206,"ts":1714629206.37,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return ","loc":422}},"nsMap":{},"nsPrev":{},"id":1207,"ts":1714629206.614,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return e","loc":422}},"nsMap":{},"nsPrev":{},"id":1208,"ts":1714629206.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return e","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return ","loc":422}},"nsMap":{},"nsPrev":{},"id":1209,"ts":1714629207.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return ne","loc":422}},"nsMap":{},"nsPrev":{},"id":1210,"ts":1714629207.323,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return ne","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return nex","loc":422}},"nsMap":{},"nsPrev":{},"id":1211,"ts":1714629207.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return nex","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next","loc":422}},"nsMap":{},"nsPrev":{},"id":1212,"ts":1714629207.671,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(","loc":422}},"nsMap":{},"nsPrev":{},"id":1213,"ts":1714629207.841,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(co","loc":422}},"nsMap":{},"nsPrev":{},"id":1214,"ts":1714629208.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(co","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(cou","loc":422}},"nsMap":{},"nsPrev":{},"id":1215,"ts":1714629208.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(cou","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(coun","loc":422}},"nsMap":{},"nsPrev":{},"id":1216,"ts":1714629208.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(coun","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count","loc":422}},"nsMap":{},"nsPrev":{},"id":1217,"ts":1714629208.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)","loc":422}},"nsMap":{},"nsPrev":{},"id":1218,"ts":1714629208.549,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)(","loc":422}},"nsMap":{},"nsPrev":{},"id":1219,"ts":1714629208.834,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)(","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([]","loc":422}},"nsMap":{},"nsPrev":{},"id":1220,"ts":1714629209.122,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([]","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])","loc":422}},"nsMap":{},"nsPrev":{},"id":1221,"ts":1714629209.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])\n  ","loc":422}},"nsMap":{},"nsPrev":{},"id":1222,"ts":1714629209.883,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])\n  ","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])\n","loc":422}},"nsMap":{},"nsPrev":{},"id":1223,"ts":1714629210.131,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":423,"idx":36},{"type":"ns-top","idx":423},{"type":"rich-text","idx":422,"sel":null}]}],"prev":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])\n","loc":422}},"meta":{},"metaPrev":{},"map":{"422":{"type":"raw-code","lang":"javascript","raw":"constrFn = (name, count) => {\n  const next = (left) => {\n    if (left === 0) return values => ({type: name, ...values})\n    return values => arg => next(left - 1)([...values, arg])\n  }\n  return next(count)([])\n}","loc":422}},"nsMap":{},"nsPrev":{},"id":1224,"ts":1714629210.245,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":278,"idx":36},{"type":"ns-top","idx":278},{"idx":277,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":278,"idx":36},{"type":"ns-top","idx":278},{"idx":277,"type":"end"}]}],"prev":{"277":{"type":"list","values":[280,298],"loc":277},"280":{"type":"identifier","text":"run","loc":280},"281":{"type":"list","values":[294,295,297],"loc":281},"294":{"type":"identifier","text":"fn","loc":294},"295":{"type":"array","values":[296],"loc":295},"296":{"type":"identifier","text":"x","loc":296},"297":{"type":"identifier","text":"1","loc":297},"298":{"type":"list","values":[281,299],"loc":298},"299":{"type":"identifier","text":"10","loc":299}},"meta":{},"metaPrev":{},"map":{"277":{"type":"blank","loc":277},"280":null,"281":null,"294":null,"295":null,"296":null,"297":null,"298":null,"299":null},"nsMap":{"278":{"type":"normal","top":277,"children":[],"id":278}},"nsPrev":{"278":{"type":"normal","top":277,"children":[],"id":278}},"id":1225,"ts":1714629234.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":278,"idx":36},{"type":"ns-top","idx":278},{"idx":277,"type":"start"}]}],"prev":{"277":{"type":"blank","loc":277}},"meta":{},"metaPrev":{},"map":{"277":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,329,343,359,336,301,317,283],"id":36},"278":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,278,329,343,359,336,301,317,283],"id":36},"278":{"type":"normal","top":277,"children":[],"id":278}},"id":1226,"ts":1714629235.381,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":329,"idx":36},{"type":"ns-top","idx":329},{"idx":328,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":329,"idx":36},{"type":"ns-top","idx":329},{"idx":328,"type":"end"}]}],"prev":{"328":{"type":"list","values":[330,331],"loc":328},"330":{"type":"identifier","text":"run","loc":330},"331":{"type":"list","values":[332,333,334],"loc":331},"332":{"type":"identifier","text":",","loc":332},"333":{"type":"identifier","text":"1","loc":333},"334":{"type":"identifier","text":"2","loc":334}},"meta":{},"metaPrev":{},"map":{"328":{"type":"blank","loc":328},"330":null,"331":null,"332":null,"333":null,"334":null},"nsMap":{"329":{"type":"normal","top":328,"children":[],"id":329}},"nsPrev":{"329":{"type":"normal","top":328,"children":[],"id":329}},"id":1227,"ts":1714629236.827,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":329,"idx":36},{"type":"ns-top","idx":329},{"idx":328,"type":"start"}]}],"prev":{"328":{"type":"blank","loc":328}},"meta":{},"metaPrev":{},"map":{"328":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,343,359,336,301,317,283],"id":36},"329":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,329,343,359,336,301,317,283],"id":36},"329":{"type":"normal","top":328,"children":[],"id":329}},"id":1228,"ts":1714629236.995,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"end"}]}],"prev":{"342":{"type":"list","values":[344,345],"loc":342},"344":{"type":"identifier","text":"run","loc":344},"345":{"type":"list","values":[346,347,350],"loc":345},"346":{"type":"identifier","text":"let","loc":346},"347":{"type":"array","values":[351,349],"loc":347},"348":{"type":"identifier","text":",","loc":348},"349":{"type":"list","values":[355,356,357],"loc":349},"350":{"type":"identifier","text":"x","loc":350},"351":{"type":"list","values":[348,352,353],"loc":351},"352":{"type":"identifier","text":"x","loc":352},"353":{"type":"identifier","text":"3","loc":353},"355":{"type":"identifier","text":",","loc":355},"356":{"type":"identifier","text":"212","loc":356},"357":{"type":"identifier","text":"3","loc":357}},"meta":{},"metaPrev":{},"map":{"342":{"type":"blank","loc":342},"344":null,"345":null,"346":null,"347":null,"348":null,"349":null,"350":null,"351":null,"352":null,"353":null,"355":null,"356":null,"357":null},"nsMap":{"343":{"type":"normal","top":342,"children":[],"id":343}},"nsPrev":{"343":{"type":"normal","top":342,"children":[],"id":343}},"id":1229,"ts":1714629239.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":343,"idx":36},{"type":"ns-top","idx":343},{"idx":342,"type":"start"}]}],"prev":{"342":{"type":"blank","loc":342}},"meta":{},"metaPrev":{},"map":{"342":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,359,336,301,317,283],"id":36},"343":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,343,359,336,301,317,283],"id":36},"343":{"type":"normal","top":342,"children":[],"id":343}},"id":1230,"ts":1714629239.352,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"end"}]}],"prev":{"358":{"type":"list","values":[360,362],"loc":358},"360":{"type":"identifier","text":"run","loc":360},"362":{"type":"list","values":[363,364,365,366,367,368],"loc":362},"363":{"type":"identifier","text":"match","loc":363},"364":{"type":"identifier","text":"3","loc":364},"365":{"type":"identifier","text":"2","loc":365},"366":{"type":"identifier","text":"1","loc":366},"367":{"type":"identifier","text":"3","loc":367},"368":{"type":"identifier","text":"10","loc":368}},"meta":{},"metaPrev":{},"map":{"358":{"type":"blank","loc":358},"360":null,"362":null,"363":null,"364":null,"365":null,"366":null,"367":null,"368":null},"nsMap":{"359":{"type":"normal","top":358,"children":[],"id":359}},"nsPrev":{"359":{"type":"normal","top":358,"children":[],"id":359}},"id":1231,"ts":1714629240.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":359,"idx":36},{"type":"ns-top","idx":359},{"idx":358,"type":"start"}]}],"prev":{"358":{"type":"blank","loc":358}},"meta":{},"metaPrev":{},"map":{"358":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,301,317,283],"id":36},"359":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,359,336,301,317,283],"id":36},"359":{"type":"normal","top":358,"children":[],"id":359}},"id":1232,"ts":1714629240.938,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":317,"idx":36},{"type":"ns-top","idx":317},{"idx":316,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":317,"idx":36},{"type":"ns-top","idx":317},{"idx":316,"type":"end"}]}],"prev":{"316":{"type":"list","values":[318,319],"loc":316},"318":{"type":"identifier","text":"test","loc":318},"319":{"type":"list","values":[320,321,326],"loc":319},"320":{"type":"identifier","text":"fn","loc":320},"321":{"type":"array","values":[322],"loc":321},"322":{"type":"list","values":[323,324,325],"loc":322},"323":{"type":"identifier","text":",","loc":323},"324":{"type":"identifier","text":"a","loc":324},"325":{"type":"identifier","text":"_","loc":325},"326":{"type":"identifier","text":"a","loc":326}},"meta":{},"metaPrev":{},"map":{"316":{"type":"blank","loc":316},"318":null,"319":null,"320":null,"321":null,"322":null,"323":null,"324":null,"325":null,"326":null},"nsMap":{"317":{"type":"normal","top":316,"children":[],"id":317}},"nsPrev":{"317":{"type":"normal","top":316,"children":[],"id":317}},"id":1233,"ts":1714629245.59,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":301,"idx":36},{"type":"ns-top","idx":301},{"idx":300,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":317,"idx":36},{"type":"ns-top","idx":317},{"idx":316,"type":"start"}]}],"prev":{"316":{"type":"blank","loc":316}},"meta":{},"metaPrev":{},"map":{"316":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,301,283],"id":36},"317":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,301,317,283],"id":36},"317":{"type":"normal","top":316,"children":[],"id":317}},"id":1234,"ts":1714629245.823,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":301,"idx":36},{"type":"ns-top","idx":301},{"idx":300,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":301,"idx":36},{"type":"ns-top","idx":301},{"idx":300,"type":"end"}]}],"prev":{"300":{"type":"list","values":[302,307],"loc":300},"302":{"type":"identifier","text":"run","loc":302},"303":{"type":"list","values":[304,305,306],"loc":303},"304":{"type":"identifier","text":",","loc":304},"305":{"type":"identifier","text":"1","loc":305},"306":{"type":"identifier","text":"12","loc":306},"307":{"type":"list","values":[308,303],"loc":307},"308":{"type":"list","values":[309,310,315],"loc":308},"309":{"type":"identifier","text":"fn","loc":309},"310":{"type":"array","values":[311],"loc":310},"311":{"type":"list","values":[312,313,314],"loc":311},"312":{"type":"identifier","text":",","loc":312},"313":{"type":"identifier","text":"a","loc":313},"314":{"type":"identifier","text":"_","loc":314},"315":{"type":"identifier","text":"a","loc":315}},"meta":{},"metaPrev":{},"map":{"300":{"type":"blank","loc":300},"302":null,"303":null,"304":null,"305":null,"306":null,"307":null,"308":null,"309":null,"310":null,"311":null,"312":null,"313":null,"314":null,"315":null},"nsMap":{"301":{"type":"normal","top":300,"children":[],"id":301}},"nsPrev":{"301":{"type":"normal","top":300,"children":[],"id":301}},"id":1235,"ts":1714629246.076,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":301,"idx":36},{"type":"ns-top","idx":301},{"idx":300,"type":"start"}]}],"prev":{"300":{"type":"blank","loc":300}},"meta":{},"metaPrev":{},"map":{"300":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,283],"id":36},"301":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,301,283],"id":36},"301":{"type":"normal","top":300,"children":[],"id":301}},"id":1236,"ts":1714629246.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prev":{"335":{"type":"list","values":[337,338],"loc":335},"337":{"type":"identifier","text":"test","loc":337},"338":{"type":"list","values":[339,340,341],"loc":338},"339":{"type":"identifier","text":",","loc":339},"340":{"type":"identifier","text":"1","loc":340},"341":{"type":"identifier","text":"2","loc":341}},"meta":{},"metaPrev":{},"map":{"335":{"type":"blank","loc":335},"337":null,"338":null,"339":null,"340":null,"341":null},"nsMap":{"336":{"type":"normal","top":335,"children":[],"id":336}},"nsPrev":{"336":{"type":"normal","top":335,"children":[],"id":336}},"id":1237,"ts":1714629246.687,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"start","idx":335}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"start"}]}],"prev":{"335":{"type":"blank","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"// write some code","loc":335}},"nsMap":{},"nsPrev":{},"id":1238,"ts":1714629251.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"// write some code","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"st","loc":335}},"nsMap":{},"nsPrev":{},"id":1239,"ts":1714629256.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"st","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt","loc":335}},"nsMap":{},"nsPrev":{},"id":1240,"ts":1714629256.369,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt ","loc":335}},"nsMap":{},"nsPrev":{},"id":1241,"ts":1714629256.561,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt =","loc":335}},"nsMap":{},"nsPrev":{},"id":1242,"ts":1714629256.729,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt =","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = ","loc":335}},"nsMap":{},"nsPrev":{},"id":1243,"ts":1714629256.833,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt =  ","loc":335}},"nsMap":{},"nsPrev":{},"id":1244,"ts":1714629258.223,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt =  ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = ","loc":335}},"nsMap":{},"nsPrev":{},"id":1245,"ts":1714629258.585,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v","loc":335}},"nsMap":{},"nsPrev":{},"id":1246,"ts":1714629258.785,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v ","loc":335}},"nsMap":{},"nsPrev":{},"id":1247,"ts":1714629258.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v =","loc":335}},"nsMap":{},"nsPrev":{},"id":1248,"ts":1714629259.597,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v =","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => ","loc":335}},"nsMap":{},"nsPrev":{},"id":1249,"ts":1714629259.896,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => e","loc":335}},"nsMap":{},"nsPrev":{},"id":1250,"ts":1714629261.607,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => e","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => ev","loc":335}},"nsMap":{},"nsPrev":{},"id":1251,"ts":1714629261.715,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => ev","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => eval","loc":335}},"nsMap":{},"nsPrev":{},"id":1252,"ts":1714629261.887,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => eval","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evalu","loc":335}},"nsMap":{},"nsPrev":{},"id":1253,"ts":1714629261.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evalu","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluat","loc":335}},"nsMap":{},"nsPrev":{},"id":1254,"ts":1714629262.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluat","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluate","loc":335}},"nsMap":{},"nsPrev":{},"id":1255,"ts":1714629262.158,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluate","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateS","loc":335}},"nsMap":{},"nsPrev":{},"id":1256,"ts":1714629262.648,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateS","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateSt","loc":335}},"nsMap":{},"nsPrev":{},"id":1257,"ts":1714629262.846,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateSt","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStm","loc":335}},"nsMap":{},"nsPrev":{},"id":1258,"ts":1714629262.941,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStm","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt","loc":335}},"nsMap":{},"nsPrev":{},"id":1259,"ts":1714629262.97,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(","loc":335}},"nsMap":{},"nsPrev":{},"id":1260,"ts":1714629263.138,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v","loc":335}},"nsMap":{},"nsPrev":{},"id":1261,"ts":1714629263.335,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1262,"ts":1714629263.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, {}","loc":335}},"nsMap":{},"nsPrev":{},"id":1263,"ts":1714629279.007,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, {}","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, {","loc":335}},"nsMap":{},"nsPrev":{},"id":1264,"ts":1714629287.137,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, {","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1265,"ts":1714629287.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prev":{"424":null},"meta":{},"metaPrev":{},"map":{"424":{"type":"blank","loc":424}},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,425,283],"id":36},"425":{"type":"normal","top":424,"children":[],"id":425}},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,283],"id":36},"425":null},"id":1266,"ts":1714629599.55,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"start"}]}],"prev":{"424":{"type":"blank","loc":424}},"meta":{},"metaPrev":{},"map":{"424":{"type":"list","values":[],"loc":424}},"nsMap":{},"nsPrev":{},"id":1267,"ts":1714629600.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":0},{"idx":426,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"inside"}]}],"prev":{"424":{"type":"list","values":[],"loc":424},"426":null},"meta":{},"metaPrev":{},"map":{"424":{"type":"list","values":[426],"loc":424},"426":{"type":"identifier","text":"p","loc":426}},"nsMap":{},"nsPrev":{},"id":1268,"ts":1714629600.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":0},{"idx":426,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":0},{"idx":426,"type":"subtext","at":1}]}],"prev":{"426":{"type":"identifier","text":"p","loc":426}},"meta":{},"metaPrev":{},"map":{"426":{"type":"identifier","text":"pair","loc":426}},"nsMap":{},"nsPrev":{},"id":1269,"ts":1714629600.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":1},{"idx":427,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":0},{"idx":426,"type":"subtext","at":4}]}],"prev":{"424":{"type":"list","values":[426],"loc":424},"427":null},"meta":{},"metaPrev":{},"map":{"424":{"type":"list","values":[426,427],"loc":424},"427":{"type":"blank","loc":427}},"nsMap":{},"nsPrev":{},"id":1270,"ts":1714629601.274,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":1},{"idx":427,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":1},{"idx":427,"type":"start"}]}],"prev":{"427":{"type":"blank","loc":427}},"meta":{},"metaPrev":{},"map":{"427":{"type":"identifier","text":"1","loc":427}},"nsMap":{},"nsPrev":{},"id":1271,"ts":1714629601.415,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":2},{"idx":428,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":1},{"idx":427,"type":"subtext","at":1}]}],"prev":{"424":{"type":"list","values":[426,427],"loc":424},"428":null},"meta":{},"metaPrev":{},"map":{"424":{"type":"list","values":[426,427,428],"loc":424},"428":{"type":"blank","loc":428}},"nsMap":{},"nsPrev":{},"id":1272,"ts":1714629601.571,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":2},{"idx":428,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":2},{"idx":428,"type":"start"}]}],"prev":{"428":{"type":"blank","loc":428}},"meta":{},"metaPrev":{},"map":{"428":{"type":"identifier","text":"2","loc":428}},"nsMap":{},"nsPrev":{},"id":1273,"ts":1714629601.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":3},{"idx":429,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":2},{"idx":428,"type":"subtext","at":1}]}],"prev":{"424":{"type":"list","values":[426,427,428],"loc":424},"429":null},"meta":{},"metaPrev":{},"map":{"424":{"type":"list","values":[426,427,428,429],"loc":424},"429":{"type":"blank","loc":429}},"nsMap":{},"nsPrev":{},"id":1274,"ts":1714629606.969,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":3},{"idx":429,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":3},{"idx":429,"type":"start"}]}],"prev":{"429":{"type":"blank","loc":429}},"meta":{},"metaPrev":{},"map":{"429":{"type":"identifier","text":"3","loc":429}},"nsMap":{},"nsPrev":{},"id":1275,"ts":1714629607.136,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":3},{"idx":429,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":3},{"idx":429,"type":"subtext","at":1}]}],"prev":{"429":{"type":"identifier","text":"3","loc":429}},"meta":{},"metaPrev":{},"map":{"429":{"type":"blank","loc":429}},"nsMap":{},"nsPrev":{},"id":1276,"ts":1714629607.656,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":2},{"idx":428,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"child","at":3},{"idx":429,"type":"subtext","at":0}]}],"prev":{"424":{"type":"list","values":[426,427,428,429],"loc":424},"429":{"type":"blank","loc":429}},"meta":{},"metaPrev":{},"map":{"424":{"type":"list","values":[426,427,428],"loc":424},"429":null},"nsMap":{},"nsPrev":{},"id":1277,"ts":1714629607.778,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = v => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (v => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1278,"ts":1714629616.724,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (v => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (.v => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1279,"ts":1714629616.974,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (.v => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (..v => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1280,"ts":1714629617.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (..v => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (...v => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1281,"ts":1714629617.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmt = (...v => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (...v => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1282,"ts":1714629635.262,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (...v => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (... => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1283,"ts":1714629643.94,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (... => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (.. => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1284,"ts":1714629644.084,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (.. => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (. => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1285,"ts":1714629644.234,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = (. => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = ( => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1286,"ts":1714629644.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = ( => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts =  => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1287,"ts":1714629644.541,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts =  => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = st => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1288,"ts":1714629644.79,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = st => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmt => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1289,"ts":1714629644.933,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmt => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => evaluateStmt(v, ","loc":335}},"nsMap":{},"nsPrev":{},"id":1290,"ts":1714629645.016,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => evaluateStmt(v, ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => evaluateStmt(v,","loc":335}},"nsMap":{},"nsPrev":{},"id":1291,"ts":1714629648.8,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => evaluateStmt(v,","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => e","loc":335}},"nsMap":{},"nsPrev":{},"id":1292,"ts":1714629649.526,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => e","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => ","loc":335}},"nsMap":{},"nsPrev":{},"id":1293,"ts":1714629649.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {","loc":335}},"nsMap":{},"nsPrev":{},"id":1294,"ts":1714629650.227,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  ","loc":335}},"nsMap":{},"nsPrev":{},"id":1295,"ts":1714629650.445,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n ","loc":335}},"nsMap":{},"nsPrev":{},"id":1296,"ts":1714629651.23,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n ","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1297,"ts":1714629651.378,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1298,"ts":1714629651.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1299,"ts":1714629653.012,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  i\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1300,"ts":1714629655.007,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  i\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1301,"ts":1714629655.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1302,"ts":1714629655.244,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (st\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1303,"ts":1714629656.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (st\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1304,"ts":1714629656.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1305,"ts":1714629656.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1306,"ts":1714629656.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.t\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1307,"ts":1714629656.737,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.t\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.typ\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1308,"ts":1714629656.851,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.typ\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1309,"ts":1714629657.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1310,"ts":1714629657.141,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1311,"ts":1714629657.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !=\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1312,"ts":1714629657.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !=\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1313,"ts":1714629657.518,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== '\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1314,"ts":1714629657.612,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== '\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'a\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1315,"ts":1714629657.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'a\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'ar\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1316,"ts":1714629657.854,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'ar\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arr\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1317,"ts":1714629657.985,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arr\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrr\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1318,"ts":1714629658.039,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrr\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrra\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1319,"ts":1714629658.135,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrra\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrray\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1320,"ts":1714629658.262,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrray\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrray'\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1321,"ts":1714629658.564,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrray'\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrray\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1322,"ts":1714629658.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrray\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrra\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1323,"ts":1714629658.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrra\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrr\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1324,"ts":1714629659.062,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arrr\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arr\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1325,"ts":1714629659.212,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'arr\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1326,"ts":1714629659.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array'\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1327,"ts":1714629659.791,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array'\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array')\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1328,"ts":1714629660.008,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array')\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1329,"ts":1714629660.401,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') t\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1330,"ts":1714629660.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') t\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') th\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1331,"ts":1714629660.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') th\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thr\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1332,"ts":1714629660.765,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thr\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thro\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1333,"ts":1714629660.9,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thro\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thro \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1334,"ts":1714629661.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thro \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thro\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1335,"ts":1714629661.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') thro\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1336,"ts":1714629661.548,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1337,"ts":1714629661.658,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw ne\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1338,"ts":1714629661.791,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw ne\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1339,"ts":1714629661.882,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1340,"ts":1714629661.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new E\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1341,"ts":1714629662.123,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new E\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Er\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1342,"ts":1714629662.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Er\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Err\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1343,"ts":1714629662.459,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Err\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1344,"ts":1714629662.62,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error(\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1345,"ts":1714629662.8,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error(\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1346,"ts":1714629663.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('ne\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1347,"ts":1714629663.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('ne\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('ned\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1348,"ts":1714629663.728,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('ned\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('nee\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1349,"ts":1714629663.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('nee\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1350,"ts":1714629664.159,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1351,"ts":1714629664.294,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need a\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1352,"ts":1714629664.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need a\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need ar\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1353,"ts":1714629664.471,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need ar\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need arra\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1354,"ts":1714629664.608,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need arra\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1355,"ts":1714629664.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array'\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1356,"ts":1714629664.948,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array'\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1357,"ts":1714629665.152,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1358,"ts":1714629665.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  co\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1359,"ts":1714629677.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  co\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  con\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1360,"ts":1714629677.757,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  con\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  cons\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1361,"ts":1714629677.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  cons\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1362,"ts":1714629677.885,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1363,"ts":1714629677.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const sc\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1364,"ts":1714629678.14,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const sc\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const sco\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1365,"ts":1714629678.22,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const sco\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const scop\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1366,"ts":1714629678.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const scop\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const scope\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1367,"ts":1714629678.3,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const scope\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const scope \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1368,"ts":1714629678.423,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const scope \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const s\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1369,"ts":1714629679.031,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const s\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1370,"ts":1714629679.273,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const e\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1371,"ts":1714629679.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const e\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const en\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1372,"ts":1714629679.677,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const en\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1373,"ts":1714629679.773,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1374,"ts":1714629679.903,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env =\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1375,"ts":1714629679.97,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env =\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1376,"ts":1714629680.361,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1377,"ts":1714629680.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1378,"ts":1714629680.846,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  le\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1379,"ts":1714629704.342,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  le\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1380,"ts":1714629704.433,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1381,"ts":1714629704.489,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let re\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1382,"ts":1714629704.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let re\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1383,"ts":1714629704.813,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1384,"ts":1714629705.314,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  s\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1385,"ts":1714629705.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  s\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1386,"ts":1714629705.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smtt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1387,"ts":1714629705.967,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smtt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smtts\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1388,"ts":1714629706.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smtts\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smtt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1389,"ts":1714629706.549,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smtt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1390,"ts":1714629706.707,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  smt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  sm\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1391,"ts":1714629706.841,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  sm\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  s\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1392,"ts":1714629706.999,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  s\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  st\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1393,"ts":1714629707.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  st\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1394,"ts":1714629707.452,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1395,"ts":1714629707.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1396,"ts":1714629707.668,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.f\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1397,"ts":1714629707.939,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.f\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.for\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1398,"ts":1714629708.046,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.for\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.forE\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1399,"ts":1714629708.445,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.forE\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.forEc\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1400,"ts":1714629708.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.forEc\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.forEch\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1401,"ts":1714629708.805,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.forEch\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.f\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1402,"ts":1714629709.409,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.f\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1403,"ts":1714629709.65,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.v\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1404,"ts":1714629709.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.v\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.val\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1405,"ts":1714629710.047,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.val\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.valu\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1406,"ts":1714629710.147,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.valu\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.value\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1407,"ts":1714629710.183,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.value\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1408,"ts":1714629710.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1409,"ts":1714629710.31,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.v\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1410,"ts":1714629710.56,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.v\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1411,"ts":1714629710.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.f\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1412,"ts":1714629710.948,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.f\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.fo\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1413,"ts":1714629711.098,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.fo\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.for\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1414,"ts":1714629711.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.for\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forE\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1415,"ts":1714629711.649,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forE\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEa\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1416,"ts":1714629711.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEa\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1417,"ts":1714629711.931,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1418,"ts":1714629712.197,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(s\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1419,"ts":1714629712.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(s\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(st\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1420,"ts":1714629712.699,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(st\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1421,"ts":1714629712.816,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt =\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1422,"ts":1714629713.143,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt =\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt =>\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1423,"ts":1714629713.628,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt =>\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1424,"ts":1714629713.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => re\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1425,"ts":1714629717.493,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => re\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1426,"ts":1714629717.563,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res =\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1427,"ts":1714629717.709,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res =\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1428,"ts":1714629717.913,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = e\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1429,"ts":1714629718.765,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = e\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = ev\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1430,"ts":1714629718.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = ev\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evlu\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1431,"ts":1714629719.249,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evlu\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evl\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1432,"ts":1714629719.57,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evl\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = ev\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1433,"ts":1714629719.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = ev\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = eva\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1434,"ts":1714629719.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = eva\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evalua\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1435,"ts":1714629719.984,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evalua\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluate\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1436,"ts":1714629720.193,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluate\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateS\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1437,"ts":1714629720.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateS\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateSt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1438,"ts":1714629721.225,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateSt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1439,"ts":1714629721.35,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1440,"ts":1714629721.652,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(p\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1441,"ts":1714629725.528,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(p\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(pa\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1442,"ts":1714629725.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(pa\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(par\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1443,"ts":1714629725.895,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(par\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parse\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1444,"ts":1714629726.068,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parse\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseS\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1445,"ts":1714629726.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseS\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseSt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1446,"ts":1714629726.67,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseSt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1447,"ts":1714629726.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1448,"ts":1714629727.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(st\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1449,"ts":1714629728.334,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(st\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1450,"ts":1714629728.551,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt)\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1451,"ts":1714629729.22,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt)\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt),\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1452,"ts":1714629729.556,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt),\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1453,"ts":1714629729.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), e\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1454,"ts":1714629730.478,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), e\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1455,"ts":1714629730.606,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env)\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1456,"ts":1714629731.092,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env)\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env))\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1457,"ts":1714629731.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env))\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1458,"ts":1714629732.709,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1459,"ts":1714629732.936,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  re\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1460,"ts":1714629733.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  re\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  ret\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1461,"ts":1714629733.333,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  ret\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  retu\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1462,"ts":1714629733.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  retu\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1463,"ts":1714629733.574,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return \n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1464,"ts":1714629733.649,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return \n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return re\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1465,"ts":1714629733.832,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return re\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1466,"ts":1714629733.882,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prev":{"430":null},"meta":{},"metaPrev":{},"map":{"430":{"type":"blank","loc":430}},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,431,425,283],"id":36},"431":{"type":"normal","top":430,"children":[],"id":431}},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,425,283],"id":36},"431":null},"id":1467,"ts":1714629735.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"start"}]}],"prev":{"430":{"type":"blank","loc":430}},"meta":{},"metaPrev":{},"map":{"430":{"type":"list","values":[],"loc":430}},"nsMap":{},"nsPrev":{},"id":1468,"ts":1714629736.399,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":432,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"inside"}]}],"prev":{"430":{"type":"list","values":[],"loc":430},"432":null},"meta":{},"metaPrev":{},"map":{"430":{"type":"list","values":[432],"loc":430},"432":{"type":"identifier","text":"S","loc":432}},"nsMap":{},"nsPrev":{},"id":1469,"ts":1714629736.507,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":432,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":432,"type":"subtext","at":1}]}],"prev":{"432":{"type":"identifier","text":"S","loc":432}},"meta":{},"metaPrev":{},"map":{"432":{"type":"identifier","text":"S","loc":432}},"nsMap":{},"nsPrev":{},"id":1470,"ts":1714629736.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":432,"type":"subtext","at":1}]}],"prev":{"430":{"type":"list","values":[432],"loc":430},"432":{"type":"identifier","text":"S","loc":432}},"meta":{},"metaPrev":{},"map":{"430":{"type":"list","values":[],"loc":430},"432":null},"nsMap":{},"nsPrev":{},"id":1471,"ts":1714629738.003,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":433,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"inside"}]}],"prev":{"430":{"type":"list","values":[],"loc":430},"433":null},"meta":{},"metaPrev":{},"map":{"430":{"type":"list","values":[433],"loc":430},"433":{"type":"identifier","text":"s","loc":433}},"nsMap":{},"nsPrev":{},"id":1472,"ts":1714629738.378,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":433,"type":"subtext","at":5}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":433,"type":"subtext","at":1}]}],"prev":{"433":{"type":"identifier","text":"s","loc":433}},"meta":{},"metaPrev":{},"map":{"433":{"type":"identifier","text":"stmts","loc":433}},"nsMap":{},"nsPrev":{},"id":1473,"ts":1714629738.449,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":0},{"idx":433,"type":"subtext","at":5}]}],"prev":{"430":{"type":"list","values":[433],"loc":430},"434":null},"meta":{},"metaPrev":{},"map":{"430":{"type":"list","values":[433,434],"loc":430},"434":{"type":"blank","loc":434}},"nsMap":{},"nsPrev":{},"id":1474,"ts":1714629738.839,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"start"}]}],"prev":{"434":{"type":"blank","loc":434}},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[],"loc":434}},"nsMap":{},"nsPrev":{},"id":1475,"ts":1714629738.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"inside"}]}],"prev":{"434":{"type":"array","values":[],"loc":434},"435":null},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[435],"loc":434},"435":{"type":"list","values":[],"loc":435}},"nsMap":{},"nsPrev":{},"id":1476,"ts":1714629742.819,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"child","at":0},{"idx":436,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"inside"}]}],"prev":{"435":{"type":"list","values":[],"loc":435},"436":null},"meta":{},"metaPrev":{},"map":{"435":{"type":"list","values":[436],"loc":435},"436":{"type":"identifier","text":"@","loc":436}},"nsMap":{},"nsPrev":{},"id":1477,"ts":1714629743.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"child","at":1},{"idx":437,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"child","at":0},{"idx":436,"type":"subtext","at":1}]}],"prev":{"435":{"type":"list","values":[436],"loc":435},"437":null},"meta":{},"metaPrev":{},"map":{"435":{"type":"list","values":[436,437],"loc":435},"437":{"type":"blank","loc":437}},"nsMap":{},"nsPrev":{},"id":1478,"ts":1714629744.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"child","at":1},{"idx":437,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"child","at":1},{"idx":437,"type":"start"}]}],"prev":{"437":{"type":"blank","loc":437}},"meta":{},"metaPrev":{},"map":{"437":{"type":"identifier","text":"10","loc":437}},"nsMap":{},"nsPrev":{},"id":1479,"ts":1714629744.993,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":435,"type":"end"}]}],"prev":{"434":{"type":"array","values":[435],"loc":434},"435":{"type":"list","values":[436,437],"loc":435},"436":{"type":"identifier","text":"@","loc":436},"437":{"type":"identifier","text":"10","loc":437}},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[],"loc":434},"435":null,"436":null,"437":null},"nsMap":{},"nsPrev":{},"id":1480,"ts":1714629753.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":438,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"inside"}]}],"prev":{"434":{"type":"array","values":[],"loc":434},"438":null},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[438],"loc":434},"438":{"type":"identifier","text":"1","loc":438}},"nsMap":{},"nsPrev":{},"id":1481,"ts":1714629753.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":438,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":438,"type":"subtext","at":1}]}],"prev":{"438":{"type":"identifier","text":"1","loc":438}},"meta":{},"metaPrev":{},"map":{"438":{"type":"identifier","text":"1","loc":438}},"nsMap":{},"nsPrev":{},"id":1482,"ts":1714629753.419,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":438,"type":"subtext","at":1}]}],"prev":{"434":{"type":"array","values":[438],"loc":434},"438":{"type":"identifier","text":"1","loc":438}},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[],"loc":434},"438":null},"nsMap":{},"nsPrev":{},"id":1483,"ts":1714629760.301,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"inside"}]}],"prev":{"434":{"type":"array","values":[],"loc":434},"439":null},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[439],"loc":434},"439":{"type":"list","values":[],"loc":439}},"nsMap":{},"nsPrev":{},"id":1484,"ts":1714629760.525,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":0},{"idx":440,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"inside"}]}],"prev":{"439":{"type":"list","values":[],"loc":439},"440":null},"meta":{},"metaPrev":{},"map":{"439":{"type":"list","values":[440],"loc":439},"440":{"type":"identifier","text":"d","loc":440}},"nsMap":{},"nsPrev":{},"id":1485,"ts":1714629760.712,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":0},{"idx":440,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":0},{"idx":440,"type":"subtext","at":1}]}],"prev":{"440":{"type":"identifier","text":"d","loc":440}},"meta":{},"metaPrev":{},"map":{"440":{"type":"identifier","text":"def","loc":440}},"nsMap":{},"nsPrev":{},"id":1486,"ts":1714629760.767,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":1},{"idx":441,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":0},{"idx":440,"type":"subtext","at":3}]}],"prev":{"439":{"type":"list","values":[440],"loc":439},"441":null},"meta":{},"metaPrev":{},"map":{"439":{"type":"list","values":[440,441],"loc":439},"441":{"type":"blank","loc":441}},"nsMap":{},"nsPrev":{},"id":1487,"ts":1714629761.028,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":1},{"idx":441,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":1},{"idx":441,"type":"start"}]}],"prev":{"441":{"type":"blank","loc":441}},"meta":{},"metaPrev":{},"map":{"441":{"type":"identifier","text":"n","loc":441}},"nsMap":{},"nsPrev":{},"id":1488,"ts":1714629762.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":2},{"idx":442,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":1},{"idx":441,"type":"subtext","at":1}]}],"prev":{"439":{"type":"list","values":[440,441],"loc":439},"442":null},"meta":{},"metaPrev":{},"map":{"439":{"type":"list","values":[440,441,442],"loc":439},"442":{"type":"blank","loc":442}},"nsMap":{},"nsPrev":{},"id":1489,"ts":1714629762.666,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":2},{"idx":442,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":2},{"idx":442,"type":"start"}]}],"prev":{"442":{"type":"blank","loc":442}},"meta":{},"metaPrev":{},"map":{"442":{"type":"identifier","text":"1","loc":442}},"nsMap":{},"nsPrev":{},"id":1490,"ts":1714629763.076,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":443,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"end"}]}],"prev":{"434":{"type":"array","values":[439],"loc":434},"443":null},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[439,443],"loc":434},"443":{"type":"blank","loc":443}},"nsMap":{},"nsPrev":{},"id":1491,"ts":1714629764.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":443,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":443,"type":"start"}]}],"prev":{"443":{"type":"blank","loc":443}},"meta":{},"metaPrev":{},"map":{"443":{"type":"identifier","text":"n","loc":443}},"nsMap":{},"nsPrev":{},"id":1492,"ts":1714629764.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => res = evaluateStmt(parseStmt(stmt), env));\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {res = evaluateStmt(parseStmt(stmt), env));\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1493,"ts":1714629785.2,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {res = evaluateStmt(parseStmt(stmt), env));\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env));\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1494,"ts":1714629785.369,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env));\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    );\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1495,"ts":1714629786.947,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    );\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1496,"ts":1714629787.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    \n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1497,"ts":1714629788.745,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    \n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    c\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1498,"ts":1714629788.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    c\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    con\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1499,"ts":1714629789.032,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    con\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    cons\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1500,"ts":1714629789.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    cons\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    conso\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1501,"ts":1714629789.289,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    conso\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    consol\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1502,"ts":1714629789.417,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    consol\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1503,"ts":1714629789.595,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.l\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1504,"ts":1714629789.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.l\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1505,"ts":1714629790,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log(\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1506,"ts":1714629790.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log(\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1507,"ts":1714629790.49,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1508,"ts":1714629790.711,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res'\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1509,"ts":1714629790.835,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res'\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res',\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1510,"ts":1714629791.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res',\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', r\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1511,"ts":1714629791.282,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', r\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1512,"ts":1714629791.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res,\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1513,"ts":1714629791.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res,\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res, e\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1514,"ts":1714629791.701,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res, e\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res, env\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1515,"ts":1714629791.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res, env\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res, env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1516,"ts":1714629792.215,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[name] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[no] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1517,"ts":1714629810.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[no] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[nod] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1518,"ts":1714629810.803,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[nod] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1519,"ts":1714629810.887,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node[] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1520,"ts":1714629811.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node[] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node[0] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1521,"ts":1714629811.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":421,"idx":36},{"type":"ns-top","idx":421},{"type":"rich-text","idx":420,"sel":null}]}],"prev":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node[0] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"meta":{},"metaPrev":{},"map":{"420":{"type":"raw-code","lang":"javascript","raw":"evaluateStmt = (node, env) => {\n  switch (node.type) {\n    case 'sexpr': return evaluate(node[0], env)\n    case 'sdef':\n      const value = evaluate(node[1], env)\n      env[node[0]] = value\n      return value\n    case 'sdeftype':\n      unwrapArray(node[1]).forEach(({0: name, 1: count}) => {\n        env[name] = constrFn(name, count)\n      })\n      return null\n  }\n}\n","loc":420}},"nsMap":{},"nsPrev":{},"id":1522,"ts":1714629811.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n    console.log('res', res, env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1523,"ts":1714629819.837,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":2},{"idx":442,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"child","at":2},{"idx":442,"type":"subtext","at":1}]}],"prev":{"442":{"type":"identifier","text":"1","loc":442}},"meta":{},"metaPrev":{},"map":{"442":{"type":"identifier","text":"10","loc":442}},"nsMap":{},"nsPrev":{},"id":1524,"ts":1714629823.835,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":0},{"idx":439,"type":"end"}]}],"prev":{"434":{"type":"array","values":[439,443],"loc":434},"444":null},"meta":{},"metaPrev":{},"map":{"434":{"type":"array","values":[439,444,443],"loc":434},"444":{"type":"blank","loc":444}},"nsMap":{},"nsPrev":{},"id":1525,"ts":1714629826.071,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"start"}]}],"prev":{"444":{"type":"blank","loc":444}},"meta":{},"metaPrev":{},"map":{"444":{"type":"list","values":[],"loc":444}},"nsMap":{},"nsPrev":{},"id":1526,"ts":1714629826.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":0},{"idx":445,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"inside"}]}],"prev":{"444":{"type":"list","values":[],"loc":444},"445":null},"meta":{},"metaPrev":{},"map":{"444":{"type":"list","values":[445],"loc":444},"445":{"type":"identifier","text":"d","loc":445}},"nsMap":{},"nsPrev":{},"id":1527,"ts":1714629826.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":0},{"idx":445,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":0},{"idx":445,"type":"subtext","at":1}]}],"prev":{"445":{"type":"identifier","text":"d","loc":445}},"meta":{},"metaPrev":{},"map":{"445":{"type":"identifier","text":"defn","loc":445}},"nsMap":{},"nsPrev":{},"id":1528,"ts":1714629826.55,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":1},{"idx":446,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":0},{"idx":445,"type":"subtext","at":4}]}],"prev":{"444":{"type":"list","values":[445],"loc":444},"446":null},"meta":{},"metaPrev":{},"map":{"444":{"type":"list","values":[445,446],"loc":444},"446":{"type":"blank","loc":446}},"nsMap":{},"nsPrev":{},"id":1529,"ts":1714629827.71,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":1},{"idx":446,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":1},{"idx":446,"type":"start"}]}],"prev":{"446":{"type":"blank","loc":446}},"meta":{},"metaPrev":{},"map":{"446":{"type":"identifier","text":"hi","loc":446}},"nsMap":{},"nsPrev":{},"id":1530,"ts":1714629828.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":2},{"idx":447,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":1},{"idx":446,"type":"subtext","at":2}]}],"prev":{"444":{"type":"list","values":[445,446],"loc":444},"447":null},"meta":{},"metaPrev":{},"map":{"444":{"type":"list","values":[445,446,447],"loc":444},"447":{"type":"blank","loc":447}},"nsMap":{},"nsPrev":{},"id":1531,"ts":1714629828.991,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":2},{"idx":447,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":2},{"idx":447,"type":"start"}]}],"prev":{"447":{"type":"blank","loc":447}},"meta":{},"metaPrev":{},"map":{"447":{"type":"array","values":[],"loc":447}},"nsMap":{},"nsPrev":{},"id":1532,"ts":1714629829.074,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":2},{"idx":447,"type":"child","at":0},{"idx":448,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":2},{"idx":447,"type":"inside"}]}],"prev":{"447":{"type":"array","values":[],"loc":447},"448":null},"meta":{},"metaPrev":{},"map":{"447":{"type":"array","values":[448],"loc":447},"448":{"type":"identifier","text":"x","loc":448}},"nsMap":{},"nsPrev":{},"id":1533,"ts":1714629829.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":2},{"idx":447,"type":"end"}]}],"prev":{"444":{"type":"list","values":[445,446,447],"loc":444},"449":null},"meta":{},"metaPrev":{},"map":{"444":{"type":"list","values":[445,446,447,449],"loc":444},"449":{"type":"blank","loc":449}},"nsMap":{},"nsPrev":{},"id":1534,"ts":1714629830.06,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"start"}]}],"prev":{"449":{"type":"blank","loc":449}},"meta":{},"metaPrev":{},"map":{"449":{"type":"list","values":[],"loc":449}},"nsMap":{},"nsPrev":{},"id":1535,"ts":1714629830.86,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":0},{"idx":450,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"inside"}]}],"prev":{"449":{"type":"list","values":[],"loc":449},"450":null},"meta":{},"metaPrev":{},"map":{"449":{"type":"list","values":[450],"loc":449},"450":{"type":"identifier","text":",","loc":450}},"nsMap":{},"nsPrev":{},"id":1536,"ts":1714629831.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":1},{"idx":451,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":0},{"idx":450,"type":"subtext","at":1}]}],"prev":{"449":{"type":"list","values":[450],"loc":449},"451":null},"meta":{},"metaPrev":{},"map":{"449":{"type":"list","values":[450,451],"loc":449},"451":{"type":"blank","loc":451}},"nsMap":{},"nsPrev":{},"id":1537,"ts":1714629831.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":1},{"idx":451,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":1},{"idx":451,"type":"start"}]}],"prev":{"451":{"type":"blank","loc":451}},"meta":{},"metaPrev":{},"map":{"451":{"type":"identifier","text":"x","loc":451}},"nsMap":{},"nsPrev":{},"id":1538,"ts":1714629831.285,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":2},{"idx":452,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":1},{"idx":451,"type":"subtext","at":1}]}],"prev":{"449":{"type":"list","values":[450,451],"loc":449},"452":null},"meta":{},"metaPrev":{},"map":{"449":{"type":"list","values":[450,451,452],"loc":449},"452":{"type":"blank","loc":452}},"nsMap":{},"nsPrev":{},"id":1539,"ts":1714629831.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":2},{"idx":452,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":1},{"idx":444,"type":"child","at":3},{"idx":449,"type":"child","at":2},{"idx":452,"type":"start"}]}],"prev":{"452":{"type":"blank","loc":452}},"meta":{},"metaPrev":{},"map":{"452":{"type":"identifier","text":"2","loc":452}},"nsMap":{},"nsPrev":{},"id":1540,"ts":1714629831.618,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"subtext","at":1}]}],"prev":{"443":{"type":"identifier","text":"n","loc":443}},"meta":{},"metaPrev":{},"map":{"443":{"type":"blank","loc":443}},"nsMap":{},"nsPrev":{},"id":1541,"ts":1714629833.535,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"subtext","at":0}]}],"prev":{"443":{"type":"blank","loc":443}},"meta":{},"metaPrev":{},"map":{"443":{"type":"list","values":[],"loc":443}},"nsMap":{},"nsPrev":{},"id":1542,"ts":1714629834.007,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"child","at":0},{"idx":453,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"inside"}]}],"prev":{"443":{"type":"list","values":[],"loc":443},"453":null},"meta":{},"metaPrev":{},"map":{"443":{"type":"list","values":[453],"loc":443},"453":{"type":"identifier","text":"h","loc":453}},"nsMap":{},"nsPrev":{},"id":1543,"ts":1714629834.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"child","at":0},{"idx":453,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"child","at":0},{"idx":453,"type":"subtext","at":1}]}],"prev":{"453":{"type":"identifier","text":"h","loc":453}},"meta":{},"metaPrev":{},"map":{"453":{"type":"identifier","text":"hi","loc":453}},"nsMap":{},"nsPrev":{},"id":1544,"ts":1714629834.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"child","at":1},{"idx":454,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"child","at":0},{"idx":453,"type":"subtext","at":2}]}],"prev":{"443":{"type":"list","values":[453],"loc":443},"454":null},"meta":{},"metaPrev":{},"map":{"443":{"type":"list","values":[453,454],"loc":443},"454":{"type":"blank","loc":454}},"nsMap":{},"nsPrev":{},"id":1545,"ts":1714629834.448,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"child","at":1},{"idx":454,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"child","at":1},{"idx":434,"type":"child","at":2},{"idx":443,"type":"child","at":1},{"idx":454,"type":"start"}]}],"prev":{"454":{"type":"blank","loc":454}},"meta":{},"metaPrev":{},"map":{"454":{"type":"identifier","text":"n","loc":454}},"nsMap":{},"nsPrev":{},"id":1546,"ts":1714629834.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {'}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1547,"ts":1714629844.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {'}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1548,"ts":1714629844.99,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {','}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1549,"ts":1714629845.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {','}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',':}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1550,"ts":1714629845.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',':}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1551,"ts":1714629845.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1552,"ts":1714629846.068,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a =}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1553,"ts":1714629846.223,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a =}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1554,"ts":1714629846.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1555,"ts":1714629846.852,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1556,"ts":1714629846.99,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b =}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1557,"ts":1714629847.109,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b =}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1558,"ts":1714629847.331,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pa}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1559,"ts":1714629847.553,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pa}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1560,"ts":1714629847.756,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pairs}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1561,"ts":1714629847.912,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pairs}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1562,"ts":1714629848.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1563,"ts":1714629848.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1564,"ts":1714629848.717,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a,}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1565,"ts":1714629848.836,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a,}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1566,"ts":1714629848.921,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, }\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1567,"ts":1714629849.047,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1568,"ts":1714629849.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1569,"ts":1714629857.611,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vares\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1570,"ts":1714629857.805,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vares\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vaulres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1571,"ts":1714629858.04,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vaulres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vaures\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1572,"ts":1714629858.461,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vaures\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vares\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1573,"ts":1714629858.6,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return vares\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valures\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1574,"ts":1714629858.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valures\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1575,"ts":1714629858.894,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueTres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1576,"ts":1714629859.097,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueTres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueTores\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1577,"ts":1714629859.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueTores\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToSres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1578,"ts":1714629859.367,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToSres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1579,"ts":1714629859.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrires\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1580,"ts":1714629859.65,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrires\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrigres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1581,"ts":1714629859.73,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrigres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrig(res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1582,"ts":1714629860.158,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrig(res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrigres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1583,"ts":1714629860.552,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrigres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrires\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1584,"ts":1714629860.947,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStrires\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStringres\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1585,"ts":1714629861.136,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToStringres\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToString(res\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1586,"ts":1714629861.362,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"type":"rich-text","idx":335,"sel":null}]}],"prev":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToString(res\n}\n","loc":335}},"meta":{},"metaPrev":{},"map":{"335":{"type":"raw-code","lang":"javascript","raw":"stmts = stmts => {\n  if (stmts.type !== 'array') throw new Error('need array')\n  const env = {',': a => b => pair(a, b)}\n  let res\n  stmts.values.forEach(stmt => {\n    res = evaluateStmt(parseStmt(stmt), env)\n  });\n  return valueToString(res)\n}\n","loc":335}},"nsMap":{},"nsPrev":{},"id":1587,"ts":1714629862.652,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"end"}]}],"prev":{"455":null},"meta":{},"metaPrev":{},"map":{"455":{"type":"blank","loc":455}},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,431,456,425,283],"id":36},"456":{"type":"normal","top":455,"children":[],"id":456}},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,431,425,283],"id":36},"456":null},"id":1588,"ts":1714629866.76,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"start"}]}],"prev":{"455":{"type":"blank","loc":455}},"meta":{},"metaPrev":{},"map":{"455":{"type":"list","values":[],"loc":455}},"nsMap":{},"nsPrev":{},"id":1589,"ts":1714629867.656,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":0},{"idx":457,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"inside"}]}],"prev":{"455":{"type":"list","values":[],"loc":455},"457":null},"meta":{},"metaPrev":{},"map":{"455":{"type":"list","values":[457],"loc":455},"457":{"type":"identifier","text":",","loc":457}},"nsMap":{},"nsPrev":{},"id":1590,"ts":1714629868.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":1},{"idx":458,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":0},{"idx":457,"type":"subtext","at":1}]}],"prev":{"455":{"type":"list","values":[457],"loc":455},"458":null},"meta":{},"metaPrev":{},"map":{"455":{"type":"list","values":[457,458],"loc":455},"458":{"type":"blank","loc":458}},"nsMap":{},"nsPrev":{},"id":1591,"ts":1714629868.399,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":1},{"idx":458,"type":"subtext","at":5}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":1},{"idx":458,"type":"start"}]}],"prev":{"458":{"type":"blank","loc":458}},"meta":{},"metaPrev":{},"map":{"458":{"type":"identifier","text":"stmts","loc":458}},"nsMap":{},"nsPrev":{},"id":1592,"ts":1714629868.571,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":1},{"idx":458,"type":"subtext","at":5}]}],"prev":{"455":{"type":"list","values":[457,458],"loc":455},"459":null},"meta":{},"metaPrev":{},"map":{"455":{"type":"list","values":[457,458,459],"loc":455},"459":{"type":"blank","loc":459}},"nsMap":{},"nsPrev":{},"id":1593,"ts":1714629868.968,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"start"}]}],"prev":{"459":{"type":"blank","loc":459}},"meta":{},"metaPrev":{},"map":{"459":{"type":"array","values":[],"loc":459}},"nsMap":{},"nsPrev":{},"id":1594,"ts":1714629870.221,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"inside"}]}],"prev":{"459":{"type":"array","values":[],"loc":459},"460":null},"meta":{},"metaPrev":{},"map":{"459":{"type":"array","values":[460],"loc":459},"460":{"type":"list","values":[],"loc":460}},"nsMap":{},"nsPrev":{},"id":1595,"ts":1714629870.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":0},{"idx":461,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"inside"}]}],"prev":{"460":{"type":"list","values":[],"loc":460},"461":null},"meta":{},"metaPrev":{},"map":{"460":{"type":"list","values":[461],"loc":460},"461":{"type":"identifier","text":",","loc":461}},"nsMap":{},"nsPrev":{},"id":1596,"ts":1714629870.699,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":1},{"idx":462,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":0},{"idx":461,"type":"subtext","at":1}]}],"prev":{"460":{"type":"list","values":[461],"loc":460},"462":null},"meta":{},"metaPrev":{},"map":{"460":{"type":"list","values":[461,462],"loc":460},"462":{"type":"blank","loc":462}},"nsMap":{},"nsPrev":{},"id":1597,"ts":1714629870.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":1},{"idx":462,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":1},{"idx":462,"type":"start"}]}],"prev":{"462":{"type":"blank","loc":462}},"meta":{},"metaPrev":{},"map":{"462":{"type":"array","values":[],"loc":462}},"nsMap":{},"nsPrev":{},"id":1598,"ts":1714629872.069,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":2},{"idx":463,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":1},{"idx":462,"type":"end"}]}],"prev":{"460":{"type":"list","values":[461,462],"loc":460},"463":null},"meta":{},"metaPrev":{},"map":{"460":{"type":"list","values":[461,462,463],"loc":460},"463":{"type":"blank","loc":463}},"nsMap":{},"nsPrev":{},"id":1599,"ts":1714629872.477,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":2},{"idx":463,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":0},{"idx":460,"type":"child","at":2},{"idx":463,"type":"start"}]}],"prev":{"463":{"type":"blank","loc":463}},"meta":{},"metaPrev":{},"map":{"463":{"type":"identifier","text":"0","loc":463}},"nsMap":{},"nsPrev":{},"id":1600,"ts":1714629872.777,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"456":{"type":"normal","top":455,"children":[],"id":456,"plugin":{"id":"fixture","options":null}}},"nsPrev":{"456":{"type":"normal","top":455,"children":[],"id":456}},"id":1601,"ts":1714629875.58,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"child","at":0},{"idx":464,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"inside"}]}],"prev":{"462":{"type":"array","values":[],"loc":462},"464":null},"meta":{},"metaPrev":{},"map":{"462":{"type":"array","values":[464],"loc":462},"464":{"type":"list","values":[],"loc":464}},"nsMap":{},"nsPrev":{},"id":1602,"ts":1714629877.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"child","at":0},{"idx":464,"type":"child","at":0},{"idx":465,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"child","at":0},{"idx":464,"type":"inside"}]}],"prev":{"464":{"type":"list","values":[],"loc":464},"465":null},"meta":{},"metaPrev":{},"map":{"464":{"type":"list","values":[465],"loc":464},"465":{"type":"identifier","text":"@","loc":465}},"nsMap":{},"nsPrev":{},"id":1603,"ts":1714629878.277,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"child","at":0},{"idx":464,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"child","at":0},{"idx":464,"type":"child","at":0},{"idx":465,"type":"subtext","at":1}]}],"prev":{"464":{"type":"list","values":[465],"loc":464},"465":{"type":"identifier","text":"@","loc":465}},"meta":{},"metaPrev":{},"map":{"464":{"type":"list","values":[],"loc":464},"465":null},"nsMap":{},"nsPrev":{},"id":1604,"ts":1714629878.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"child","at":0},{"idx":464,"type":"inside"}]}],"prev":{"462":{"type":"array","values":[464],"loc":462},"464":{"type":"list","values":[],"loc":464}},"meta":{},"metaPrev":{},"map":{"462":{"type":"array","values":[],"loc":462},"464":null},"nsMap":{},"nsPrev":{},"id":1605,"ts":1714629878.803,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"child","at":0},{"idx":466,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":1},{"idx":462,"type":"inside"}]}],"prev":{"462":{"type":"array","values":[],"loc":462},"466":null},"meta":{},"metaPrev":{},"map":{"462":{"type":"array","values":[466],"loc":462},"466":{"type":"identifier","text":"0","loc":466}},"nsMap":{},"nsPrev":{},"id":1606,"ts":1714629878.924,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":2},{"idx":463,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":2},{"idx":463,"type":"subtext","at":1}]}],"prev":{"463":{"type":"identifier","text":"0","loc":463}},"meta":{},"metaPrev":{},"map":{"463":{"type":"blank","loc":463}},"nsMap":{},"nsPrev":{},"id":1607,"ts":1714629880.81,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":2},{"idx":463,"type":"text","at":0},{"idx":467,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":2},{"idx":463,"type":"subtext","at":0}]}],"prev":{"463":{"type":"blank","loc":463},"467":null},"meta":{},"metaPrev":{},"map":{"463":{"type":"string","first":467,"templates":[],"loc":463},"467":{"type":"stringText","loc":467,"text":""}},"nsMap":{},"nsPrev":{},"id":1608,"ts":1714629881.532,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":2},{"idx":463,"type":"text","at":0},{"idx":467,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":2},{"idx":463,"type":"text","at":0},{"idx":467,"type":"subtext","at":0}]}],"prev":{"467":{"type":"stringText","loc":467,"text":""}},"meta":{},"metaPrev":{},"map":{"467":{"type":"stringText","loc":467,"text":"0"}},"nsMap":{},"nsPrev":{},"id":1609,"ts":1714629881.922,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":0,"idx":459},{"idx":460,"type":"child","at":2},{"idx":463,"type":"end"}]}],"prev":{"459":{"type":"array","values":[460],"loc":459},"468":null,"469":null,"470":null,"471":null},"meta":{},"metaPrev":{},"map":{"459":{"type":"array","values":[460,468],"loc":459},"468":{"type":"list","values":[469,470,471],"loc":468},"469":{"type":"identifier","text":",","loc":469},"470":{"type":"blank","loc":470},"471":{"type":"blank","loc":471}},"nsMap":{},"nsPrev":{},"id":1610,"ts":1714629884.471,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"start"}]}],"prev":{"470":{"type":"blank","loc":470}},"meta":{},"metaPrev":{},"map":{"470":{"type":"array","values":[],"loc":470}},"nsMap":{},"nsPrev":{},"id":1611,"ts":1714629886.516,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"inside"}]}],"prev":{"470":{"type":"array","values":[],"loc":470},"472":null},"meta":{},"metaPrev":{},"map":{"470":{"type":"array","values":[472],"loc":470},"472":{"type":"list","values":[],"loc":472}},"nsMap":{},"nsPrev":{},"id":1612,"ts":1714629886.762,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":0},{"idx":473,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"inside"}]}],"prev":{"472":{"type":"list","values":[],"loc":472},"473":null},"meta":{},"metaPrev":{},"map":{"472":{"type":"list","values":[473],"loc":472},"473":{"type":"identifier","text":"d","loc":473}},"nsMap":{},"nsPrev":{},"id":1613,"ts":1714629886.955,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":0},{"idx":473,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":0},{"idx":473,"type":"subtext","at":1}]}],"prev":{"473":{"type":"identifier","text":"d","loc":473}},"meta":{},"metaPrev":{},"map":{"473":{"type":"identifier","text":"def","loc":473}},"nsMap":{},"nsPrev":{},"id":1614,"ts":1714629887.028,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":1},{"idx":474,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":0},{"idx":473,"type":"subtext","at":3}]}],"prev":{"472":{"type":"list","values":[473],"loc":472},"474":null},"meta":{},"metaPrev":{},"map":{"472":{"type":"list","values":[473,474],"loc":472},"474":{"type":"blank","loc":474}},"nsMap":{},"nsPrev":{},"id":1615,"ts":1714629887.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":1},{"idx":474,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":1},{"idx":474,"type":"start"}]}],"prev":{"474":{"type":"blank","loc":474}},"meta":{},"metaPrev":{},"map":{"474":{"type":"identifier","text":"n","loc":474}},"nsMap":{},"nsPrev":{},"id":1616,"ts":1714629887.467,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":2},{"idx":475,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":1},{"idx":474,"type":"subtext","at":1}]}],"prev":{"472":{"type":"list","values":[473,474],"loc":472},"475":null},"meta":{},"metaPrev":{},"map":{"472":{"type":"list","values":[473,474,475],"loc":472},"475":{"type":"blank","loc":475}},"nsMap":{},"nsPrev":{},"id":1617,"ts":1714629887.578,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":2},{"idx":475,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"child","at":2},{"idx":475,"type":"start"}]}],"prev":{"475":{"type":"blank","loc":475}},"meta":{},"metaPrev":{},"map":{"475":{"type":"identifier","text":"10","loc":475}},"nsMap":{},"nsPrev":{},"id":1618,"ts":1714629887.72,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":1},{"idx":476,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":0},{"idx":472,"type":"end"}]}],"prev":{"470":{"type":"array","values":[472],"loc":470},"476":null},"meta":{},"metaPrev":{},"map":{"470":{"type":"array","values":[472,476],"loc":470},"476":{"type":"blank","loc":476}},"nsMap":{},"nsPrev":{},"id":1619,"ts":1714629888.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":1},{"idx":476,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":1},{"idx":470,"type":"child","at":1},{"idx":476,"type":"start"}]}],"prev":{"476":{"type":"blank","loc":476}},"meta":{},"metaPrev":{},"map":{"476":{"type":"identifier","text":"n","loc":476}},"nsMap":{},"nsPrev":{},"id":1620,"ts":1714629888.494,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":2},{"idx":471,"type":"text","at":0},{"idx":477,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":2},{"idx":471,"type":"start"}]}],"prev":{"471":{"type":"blank","loc":471},"477":null},"meta":{},"metaPrev":{},"map":{"471":{"type":"string","first":477,"templates":[],"loc":471},"477":{"type":"stringText","loc":477,"text":""}},"nsMap":{},"nsPrev":{},"id":1621,"ts":1714629890.218,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":2},{"idx":471,"type":"text","at":0},{"idx":477,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":2},{"idx":471,"type":"text","at":0},{"idx":477,"type":"subtext","at":0}]}],"prev":{"477":{"type":"stringText","loc":477,"text":""}},"meta":{},"metaPrev":{},"map":{"477":{"type":"stringText","loc":477,"text":"1"}},"nsMap":{},"nsPrev":{},"id":1622,"ts":1714629890.405,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":2},{"idx":471,"type":"text","at":0},{"idx":477,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":2},{"idx":471,"type":"text","at":0},{"idx":477,"type":"subtext","at":1}]}],"prev":{"477":{"type":"stringText","loc":477,"text":"1"}},"meta":{},"metaPrev":{},"map":{"477":{"type":"stringText","loc":477,"text":"10"}},"nsMap":{},"nsPrev":{},"id":1623,"ts":1714629890.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":1},{"idx":468,"type":"child","at":2},{"idx":471,"type":"end"}]}],"prev":{"459":{"type":"array","values":[460,468],"loc":459},"478":null,"479":null,"480":null,"481":null},"meta":{},"metaPrev":{},"map":{"459":{"type":"array","values":[460,468,478],"loc":459},"478":{"type":"list","values":[479,480,481],"loc":478},"479":{"type":"identifier","text":",","loc":479},"480":{"type":"blank","loc":480},"481":{"type":"blank","loc":481}},"nsMap":{},"nsPrev":{},"id":1624,"ts":1714629891.289,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"start"}]}],"prev":{"480":{"type":"blank","loc":480}},"meta":{},"metaPrev":{},"map":{"480":{"type":"array","values":[],"loc":480}},"nsMap":{},"nsPrev":{},"id":1625,"ts":1714629892.667,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"inside"}]}],"prev":{"480":{"type":"array","values":[],"loc":480},"482":null},"meta":{},"metaPrev":{},"map":{"480":{"type":"array","values":[482],"loc":480},"482":{"type":"list","values":[],"loc":482}},"nsMap":{},"nsPrev":{},"id":1626,"ts":1714629892.978,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":0},{"idx":483,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"inside"}]}],"prev":{"482":{"type":"list","values":[],"loc":482},"483":null},"meta":{},"metaPrev":{},"map":{"482":{"type":"list","values":[483],"loc":482},"483":{"type":"identifier","text":"d","loc":483}},"nsMap":{},"nsPrev":{},"id":1627,"ts":1714629893.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":0},{"idx":483,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":0},{"idx":483,"type":"subtext","at":1}]}],"prev":{"483":{"type":"identifier","text":"d","loc":483}},"meta":{},"metaPrev":{},"map":{"483":{"type":"identifier","text":"defn","loc":483}},"nsMap":{},"nsPrev":{},"id":1628,"ts":1714629893.244,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":1},{"idx":484,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":0},{"idx":483,"type":"subtext","at":4}]}],"prev":{"482":{"type":"list","values":[483],"loc":482},"484":null},"meta":{},"metaPrev":{},"map":{"482":{"type":"list","values":[483,484],"loc":482},"484":{"type":"blank","loc":484}},"nsMap":{},"nsPrev":{},"id":1629,"ts":1714629893.546,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":1},{"idx":484,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":1},{"idx":484,"type":"start"}]}],"prev":{"484":{"type":"blank","loc":484}},"meta":{},"metaPrev":{},"map":{"484":{"type":"identifier","text":"hi","loc":484}},"nsMap":{},"nsPrev":{},"id":1630,"ts":1714629894.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":2},{"idx":485,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":1},{"idx":484,"type":"subtext","at":2}]}],"prev":{"482":{"type":"list","values":[483,484],"loc":482},"485":null},"meta":{},"metaPrev":{},"map":{"482":{"type":"list","values":[483,484,485],"loc":482},"485":{"type":"blank","loc":485}},"nsMap":{},"nsPrev":{},"id":1631,"ts":1714629894.572,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":2},{"idx":485,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":2},{"idx":485,"type":"start"}]}],"prev":{"485":{"type":"blank","loc":485}},"meta":{},"metaPrev":{},"map":{"485":{"type":"array","values":[],"loc":485}},"nsMap":{},"nsPrev":{},"id":1632,"ts":1714629894.766,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":2},{"idx":485,"type":"child","at":0},{"idx":486,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":2},{"idx":485,"type":"inside"}]}],"prev":{"485":{"type":"array","values":[],"loc":485},"486":null},"meta":{},"metaPrev":{},"map":{"485":{"type":"array","values":[486],"loc":485},"486":{"type":"identifier","text":"x","loc":486}},"nsMap":{},"nsPrev":{},"id":1633,"ts":1714629895.14,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":2},{"idx":485,"type":"end"}]}],"prev":{"482":{"type":"list","values":[483,484,485],"loc":482},"487":null},"meta":{},"metaPrev":{},"map":{"482":{"type":"list","values":[483,484,485,487],"loc":482},"487":{"type":"blank","loc":487}},"nsMap":{},"nsPrev":{},"id":1634,"ts":1714629895.509,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"start"}]}],"prev":{"487":{"type":"blank","loc":487}},"meta":{},"metaPrev":{},"map":{"487":{"type":"identifier","text":",","loc":487}},"nsMap":{},"nsPrev":{},"id":1635,"ts":1714629895.645,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"subtext","at":1}]}],"prev":{"487":{"type":"identifier","text":",","loc":487}},"meta":{},"metaPrev":{},"map":{"487":{"type":"blank","loc":487}},"nsMap":{},"nsPrev":{},"id":1636,"ts":1714629896.451,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"subtext","at":0}]}],"prev":{"487":{"type":"blank","loc":487}},"meta":{},"metaPrev":{},"map":{"487":{"type":"list","values":[],"loc":487}},"nsMap":{},"nsPrev":{},"id":1637,"ts":1714629896.66,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":0},{"idx":488,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"inside"}]}],"prev":{"487":{"type":"list","values":[],"loc":487},"488":null},"meta":{},"metaPrev":{},"map":{"487":{"type":"list","values":[488],"loc":487},"488":{"type":"identifier","text":",","loc":488}},"nsMap":{},"nsPrev":{},"id":1638,"ts":1714629896.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":1},{"idx":489,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":0},{"idx":488,"type":"subtext","at":1}]}],"prev":{"487":{"type":"list","values":[488],"loc":487},"489":null},"meta":{},"metaPrev":{},"map":{"487":{"type":"list","values":[488,489],"loc":487},"489":{"type":"blank","loc":489}},"nsMap":{},"nsPrev":{},"id":1639,"ts":1714629896.987,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":1},{"idx":489,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":1},{"idx":489,"type":"start"}]}],"prev":{"489":{"type":"blank","loc":489}},"meta":{},"metaPrev":{},"map":{"489":{"type":"identifier","text":"x","loc":489}},"nsMap":{},"nsPrev":{},"id":1640,"ts":1714629897.23,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":2},{"idx":490,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":1},{"idx":489,"type":"subtext","at":1}]}],"prev":{"487":{"type":"list","values":[488,489],"loc":487},"490":null},"meta":{},"metaPrev":{},"map":{"487":{"type":"list","values":[488,489,490],"loc":487},"490":{"type":"blank","loc":490}},"nsMap":{},"nsPrev":{},"id":1641,"ts":1714629897.648,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":2},{"idx":490,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"child","at":3},{"idx":487,"type":"child","at":2},{"idx":490,"type":"start"}]}],"prev":{"490":{"type":"blank","loc":490}},"meta":{},"metaPrev":{},"map":{"490":{"type":"identifier","text":"2","loc":490}},"nsMap":{},"nsPrev":{},"id":1642,"ts":1714629897.783,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":0},{"idx":482,"type":"end"}]}],"prev":{"480":{"type":"array","values":[482],"loc":480},"491":null},"meta":{},"metaPrev":{},"map":{"480":{"type":"array","values":[482,491],"loc":480},"491":{"type":"blank","loc":491}},"nsMap":{},"nsPrev":{},"id":1643,"ts":1714629898.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"start"}]}],"prev":{"491":{"type":"blank","loc":491}},"meta":{},"metaPrev":{},"map":{"491":{"type":"list","values":[],"loc":491}},"nsMap":{},"nsPrev":{},"id":1644,"ts":1714629898.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"child","at":0},{"idx":492,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"inside"}]}],"prev":{"491":{"type":"list","values":[],"loc":491},"492":null},"meta":{},"metaPrev":{},"map":{"491":{"type":"list","values":[492],"loc":491},"492":{"type":"identifier","text":"h","loc":492}},"nsMap":{},"nsPrev":{},"id":1645,"ts":1714629899.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"child","at":0},{"idx":492,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"child","at":0},{"idx":492,"type":"subtext","at":1}]}],"prev":{"492":{"type":"identifier","text":"h","loc":492}},"meta":{},"metaPrev":{},"map":{"492":{"type":"identifier","text":"hi","loc":492}},"nsMap":{},"nsPrev":{},"id":1646,"ts":1714629899.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"child","at":1},{"idx":493,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"child","at":0},{"idx":492,"type":"subtext","at":2}]}],"prev":{"491":{"type":"list","values":[492],"loc":491},"493":null},"meta":{},"metaPrev":{},"map":{"491":{"type":"list","values":[492,493],"loc":491},"493":{"type":"blank","loc":493}},"nsMap":{},"nsPrev":{},"id":1647,"ts":1714629899.369,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"child","at":1},{"idx":493,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":1},{"idx":480,"type":"child","at":1},{"idx":491,"type":"child","at":1},{"idx":493,"type":"start"}]}],"prev":{"493":{"type":"blank","loc":493}},"meta":{},"metaPrev":{},"map":{"493":{"type":"identifier","text":"5","loc":493}},"nsMap":{},"nsPrev":{},"id":1648,"ts":1714629900.135,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"start"}]}],"prev":{"481":{"type":"blank","loc":481},"494":null},"meta":{},"metaPrev":{},"map":{"481":{"type":"string","first":494,"templates":[],"loc":481},"494":{"type":"stringText","loc":494,"text":""}},"nsMap":{},"nsPrev":{},"id":1649,"ts":1714629902.229,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":0}]}],"prev":{"494":{"type":"stringText","loc":494,"text":""}},"meta":{},"metaPrev":{},"map":{"494":{"type":"stringText","loc":494,"text":"("}},"nsMap":{},"nsPrev":{},"id":1650,"ts":1714629902.526,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":1}]}],"prev":{"494":{"type":"stringText","loc":494,"text":"("}},"meta":{},"metaPrev":{},"map":{"494":{"type":"stringText","loc":494,"text":"(,"}},"nsMap":{},"nsPrev":{},"id":1651,"ts":1714629902.745,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":2}]}],"prev":{"494":{"type":"stringText","loc":494,"text":"(,"}},"meta":{},"metaPrev":{},"map":{"494":{"type":"stringText","loc":494,"text":"(, "}},"nsMap":{},"nsPrev":{},"id":1652,"ts":1714629902.904,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":3}]}],"prev":{"494":{"type":"stringText","loc":494,"text":"(, "}},"meta":{},"metaPrev":{},"map":{"494":{"type":"stringText","loc":494,"text":"(, 5"}},"nsMap":{},"nsPrev":{},"id":1653,"ts":1714629903.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":5}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":4}]}],"prev":{"494":{"type":"stringText","loc":494,"text":"(, 5"}},"meta":{},"metaPrev":{},"map":{"494":{"type":"stringText","loc":494,"text":"(, 5 "}},"nsMap":{},"nsPrev":{},"id":1654,"ts":1714629903.607,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":6}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":5}]}],"prev":{"494":{"type":"stringText","loc":494,"text":"(, 5 "}},"meta":{},"metaPrev":{},"map":{"494":{"type":"stringText","loc":494,"text":"(, 5 2"}},"nsMap":{},"nsPrev":{},"id":1655,"ts":1714629903.759,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":7}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"text","at":0},{"idx":494,"type":"subtext","at":6}]}],"prev":{"494":{"type":"stringText","loc":494,"text":"(, 5 2"}},"meta":{},"metaPrev":{},"map":{"494":{"type":"stringText","loc":494,"text":"(, 5 2)"}},"nsMap":{},"nsPrev":{},"id":1656,"ts":1714629904.076,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":2},{"idx":478,"type":"child","at":2},{"idx":481,"type":"end"}]}],"prev":{"459":{"type":"array","values":[460,468,478],"loc":459},"495":null,"496":null,"497":null,"498":null},"meta":{},"metaPrev":{},"map":{"459":{"type":"array","values":[460,468,478,495],"loc":459},"495":{"type":"list","values":[496,497,498],"loc":495},"496":{"type":"identifier","text":",","loc":496},"497":{"type":"blank","loc":497},"498":{"type":"blank","loc":498}},"nsMap":{},"nsPrev":{},"id":1657,"ts":1714629905.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"start"}]}],"prev":{"497":{"type":"blank","loc":497}},"meta":{},"metaPrev":{},"map":{"497":{"type":"array","values":[],"loc":497}},"nsMap":{},"nsPrev":{},"id":1658,"ts":1714629906.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"inside"}]}],"prev":{"497":{"type":"array","values":[],"loc":497},"499":null},"meta":{},"metaPrev":{},"map":{"497":{"type":"array","values":[499],"loc":497},"499":{"type":"list","values":[],"loc":499}},"nsMap":{},"nsPrev":{},"id":1659,"ts":1714629906.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"inside"}]}],"prev":{"499":{"type":"list","values":[],"loc":499},"500":null},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500],"loc":499},"500":{"type":"identifier","text":"d","loc":500}},"nsMap":{},"nsPrev":{},"id":1660,"ts":1714629906.499,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":7}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":1}]}],"prev":{"500":{"type":"identifier","text":"d","loc":500}},"meta":{},"metaPrev":{},"map":{"500":{"type":"identifier","text":"deftype","loc":500}},"nsMap":{},"nsPrev":{},"id":1661,"ts":1714629906.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":7}]}],"prev":{"499":{"type":"list","values":[500],"loc":499},"501":null},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,501],"loc":499},"501":{"type":"blank","loc":501}},"nsMap":{},"nsPrev":{},"id":1662,"ts":1714629907.101,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"start"}]}],"prev":{"501":{"type":"blank","loc":501}},"meta":{},"metaPrev":{},"map":{"501":{"type":"list","values":[],"loc":501}},"nsMap":{},"nsPrev":{},"id":1663,"ts":1714629908.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"child","at":0},{"idx":502,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"inside"}]}],"prev":{"501":{"type":"list","values":[],"loc":501},"502":null},"meta":{},"metaPrev":{},"map":{"501":{"type":"list","values":[502],"loc":501},"502":{"type":"identifier","text":"s","loc":502}},"nsMap":{},"nsPrev":{},"id":1664,"ts":1714629908.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"child","at":0},{"idx":502,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"child","at":0},{"idx":502,"type":"subtext","at":1}]}],"prev":{"502":{"type":"identifier","text":"s","loc":502}},"meta":{},"metaPrev":{},"map":{"502":{"type":"identifier","text":"some","loc":502}},"nsMap":{},"nsPrev":{},"id":1665,"ts":1714629908.687,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"child","at":1},{"idx":503,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"child","at":0},{"idx":502,"type":"subtext","at":4}]}],"prev":{"501":{"type":"list","values":[502],"loc":501},"503":null},"meta":{},"metaPrev":{},"map":{"501":{"type":"list","values":[502,503],"loc":501},"503":{"type":"blank","loc":503}},"nsMap":{},"nsPrev":{},"id":1666,"ts":1714629908.919,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"child","at":1},{"idx":503,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"child","at":1},{"idx":503,"type":"start"}]}],"prev":{"503":{"type":"blank","loc":503}},"meta":{},"metaPrev":{},"map":{"503":{"type":"identifier","text":"a","loc":503}},"nsMap":{},"nsPrev":{},"id":1667,"ts":1714629909.026,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"end"}]}],"prev":{"499":{"type":"list","values":[500,501],"loc":499},"504":null},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,501,504],"loc":499},"504":{"type":"list","values":[],"loc":504}},"nsMap":{},"nsPrev":{},"id":1668,"ts":1714629909.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"child","at":1},{"idx":505,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"inside"}]}],"prev":{"504":{"type":"list","values":[],"loc":504},"505":null,"506":null},"meta":{},"metaPrev":{},"map":{"504":{"type":"list","values":[506,505],"loc":504},"505":{"type":"blank","loc":505},"506":{"type":"blank","loc":506}},"nsMap":{},"nsPrev":{},"id":1669,"ts":1714629909.491,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"child","at":1},{"idx":505,"type":"start"}]}],"prev":{"504":{"type":"list","values":[506,505],"loc":504},"505":{"type":"blank","loc":505}},"meta":{},"metaPrev":{},"map":{"504":{"type":"list","values":[],"loc":504},"505":null},"nsMap":{},"nsPrev":{},"id":1670,"ts":1714629910.21,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"inside"}]}],"prev":{"499":{"type":"list","values":[500,501,504],"loc":499},"504":{"type":"list","values":[],"loc":504}},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,501,504],"loc":499},"504":{"type":"blank","loc":504}},"nsMap":{},"nsPrev":{},"id":1671,"ts":1714629911.174,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":504,"type":"start"}]}],"prev":{"499":{"type":"list","values":[500,501,504],"loc":499},"504":{"type":"blank","loc":504}},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,501],"loc":499},"504":null},"nsMap":{},"nsPrev":{},"id":1672,"ts":1714629911.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"end"}]}],"prev":{"499":{"type":"list","values":[500,501],"loc":499},"501":{"type":"list","values":[502,503],"loc":501},"502":{"type":"identifier","text":"some","loc":502},"503":{"type":"identifier","text":"a","loc":503}},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,501],"loc":499},"501":{"type":"blank","loc":501},"502":null,"503":null},"nsMap":{},"nsPrev":{},"id":1673,"ts":1714629911.456,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":501,"type":"start"}]}],"prev":{"499":{"type":"list","values":[500,501],"loc":499},"501":{"type":"blank","loc":501}},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500],"loc":499},"501":null},"nsMap":{},"nsPrev":{},"id":1674,"ts":1714629911.49,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":6}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"end"}]}],"prev":{"500":{"type":"identifier","text":"deftype","loc":500}},"meta":{},"metaPrev":{},"map":{"500":{"type":"identifier","text":"deftyp","loc":500}},"nsMap":{},"nsPrev":{},"id":1675,"ts":1714629911.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":507,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":6}]}],"prev":{"499":{"type":"list","values":[500],"loc":499},"507":null},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,507],"loc":499},"507":{"type":"blank","loc":507}},"nsMap":{},"nsPrev":{},"id":1676,"ts":1714629912.629,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":507,"type":"start"}]}],"prev":{"499":{"type":"list","values":[500,507],"loc":499},"507":{"type":"blank","loc":507}},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500],"loc":499},"507":null},"nsMap":{},"nsPrev":{},"id":1677,"ts":1714629912.985,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":7}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"end"}]}],"prev":{"500":{"type":"identifier","text":"deftyp","loc":500}},"meta":{},"metaPrev":{},"map":{"500":{"type":"identifier","text":"deftype","loc":500}},"nsMap":{},"nsPrev":{},"id":1678,"ts":1714629913.041,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":0},{"idx":500,"type":"subtext","at":7}]}],"prev":{"499":{"type":"list","values":[500],"loc":499},"508":null},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,508],"loc":499},"508":{"type":"blank","loc":508}},"nsMap":{},"nsPrev":{},"id":1679,"ts":1714629913.148,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"start"}]}],"prev":{"508":{"type":"blank","loc":508}},"meta":{},"metaPrev":{},"map":{"508":{"type":"list","values":[],"loc":508}},"nsMap":{},"nsPrev":{},"id":1680,"ts":1714629913.223,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":0},{"idx":509,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"inside"}]}],"prev":{"508":{"type":"list","values":[],"loc":508},"509":null},"meta":{},"metaPrev":{},"map":{"508":{"type":"list","values":[509],"loc":508},"509":{"type":"identifier","text":"o","loc":509}},"nsMap":{},"nsPrev":{},"id":1681,"ts":1714629913.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":0},{"idx":509,"type":"subtext","at":6}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":0},{"idx":509,"type":"subtext","at":1}]}],"prev":{"509":{"type":"identifier","text":"o","loc":509}},"meta":{},"metaPrev":{},"map":{"509":{"type":"identifier","text":"option","loc":509}},"nsMap":{},"nsPrev":{},"id":1682,"ts":1714629913.634,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":1},{"idx":510,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":0},{"idx":509,"type":"subtext","at":6}]}],"prev":{"508":{"type":"list","values":[509],"loc":508},"510":null},"meta":{},"metaPrev":{},"map":{"508":{"type":"list","values":[509,510],"loc":508},"510":{"type":"blank","loc":510}},"nsMap":{},"nsPrev":{},"id":1683,"ts":1714629914.037,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":1},{"idx":510,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":1},{"idx":510,"type":"start"}]}],"prev":{"510":{"type":"blank","loc":510}},"meta":{},"metaPrev":{},"map":{"510":{"type":"identifier","text":"a","loc":510}},"nsMap":{},"nsPrev":{},"id":1684,"ts":1714629914.11,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"end"}]}],"prev":{"499":{"type":"list","values":[500,508],"loc":499},"511":null},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,508,511],"loc":499},"511":{"type":"blank","loc":511}},"nsMap":{},"nsPrev":{},"id":1685,"ts":1714629914.446,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"start"}]}],"prev":{"511":{"type":"blank","loc":511}},"meta":{},"metaPrev":{},"map":{"511":{"type":"list","values":[],"loc":511}},"nsMap":{},"nsPrev":{},"id":1686,"ts":1714629914.533,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"child","at":0},{"idx":512,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"inside"}]}],"prev":{"511":{"type":"list","values":[],"loc":511},"512":null},"meta":{},"metaPrev":{},"map":{"511":{"type":"list","values":[512],"loc":511},"512":{"type":"identifier","text":"s","loc":512}},"nsMap":{},"nsPrev":{},"id":1687,"ts":1714629914.773,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"child","at":0},{"idx":512,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"child","at":0},{"idx":512,"type":"subtext","at":1}]}],"prev":{"512":{"type":"identifier","text":"s","loc":512}},"meta":{},"metaPrev":{},"map":{"512":{"type":"identifier","text":"some","loc":512}},"nsMap":{},"nsPrev":{},"id":1688,"ts":1714629914.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"child","at":1},{"idx":513,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"child","at":0},{"idx":512,"type":"subtext","at":4}]}],"prev":{"511":{"type":"list","values":[512],"loc":511},"513":null},"meta":{},"metaPrev":{},"map":{"511":{"type":"list","values":[512,513],"loc":511},"513":{"type":"blank","loc":513}},"nsMap":{},"nsPrev":{},"id":1689,"ts":1714629915.095,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"child","at":1},{"idx":513,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"child","at":1},{"idx":513,"type":"start"}]}],"prev":{"513":{"type":"blank","loc":513}},"meta":{},"metaPrev":{},"map":{"513":{"type":"identifier","text":"a","loc":513}},"nsMap":{},"nsPrev":{},"id":1690,"ts":1714629915.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":3},{"idx":514,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":2},{"idx":511,"type":"end"}]}],"prev":{"499":{"type":"list","values":[500,508,511],"loc":499},"514":null},"meta":{},"metaPrev":{},"map":{"499":{"type":"list","values":[500,508,511,514],"loc":499},"514":{"type":"blank","loc":514}},"nsMap":{},"nsPrev":{},"id":1691,"ts":1714629915.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":3},{"idx":514,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":3},{"idx":514,"type":"start"}]}],"prev":{"514":{"type":"blank","loc":514}},"meta":{},"metaPrev":{},"map":{"514":{"type":"list","values":[],"loc":514}},"nsMap":{},"nsPrev":{},"id":1692,"ts":1714629916.968,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":3},{"idx":514,"type":"child","at":0},{"idx":515,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":3},{"idx":514,"type":"inside"}]}],"prev":{"514":{"type":"list","values":[],"loc":514},"515":null},"meta":{},"metaPrev":{},"map":{"514":{"type":"list","values":[515],"loc":514},"515":{"type":"identifier","text":"n","loc":515}},"nsMap":{},"nsPrev":{},"id":1693,"ts":1714629917.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":3},{"idx":514,"type":"child","at":0},{"idx":515,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":3},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":3},{"idx":514,"type":"child","at":0},{"idx":515,"type":"subtext","at":1}]}],"prev":{"515":{"type":"identifier","text":"n","loc":515}},"meta":{},"metaPrev":{},"map":{"515":{"type":"identifier","text":"none","loc":515}},"nsMap":{},"nsPrev":{},"id":1694,"ts":1714629917.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":0},{"idx":509,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"child","at":1},{"idx":508,"type":"child","at":0},{"idx":509,"type":"subtext","at":3}]}],"prev":{"509":{"type":"identifier","text":"option","loc":509}},"meta":{},"metaPrev":{},"map":{"509":{"type":"identifier","text":"optsion","loc":509}},"nsMap":{},"nsPrev":{},"id":1695,"ts":1714630030.58,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prev":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: constructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"meta":{},"metaPrev":{},"map":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: aconstructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"nsMap":{},"nsPrev":{},"id":1696,"ts":1714630062.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prev":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: aconstructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"meta":{},"metaPrev":{},"map":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arconstructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"nsMap":{},"nsPrev":{},"id":1697,"ts":1714630062.462,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prev":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arconstructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"meta":{},"metaPrev":{},"map":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arrconstructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"nsMap":{},"nsPrev":{},"id":1698,"ts":1714630062.589,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prev":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arrconstructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"meta":{},"metaPrev":{},"map":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arr(constructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"nsMap":{},"nsPrev":{},"id":1699,"ts":1714630062.842,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns","child":226,"idx":220},{"type":"ns-top","idx":226},{"type":"rich-text","idx":225,"sel":null}]}],"prev":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arr(constructors}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"meta":{},"metaPrev":{},"map":{"225":{"type":"raw-code","lang":"javascript","raw":"stmtForms = {\n  deftype(loc, head, ...tail) {\n    if (!head || !tail.length) return\n    const name = head.type === 'identifier' ? head.text : head.type === 'list' && head.values.length >= 1 && head.values[0].type === 'identifier' ? head.values[0].text : null\n    if (!name) return\n    const constructors = tail.map(item => {\n      if (item.type !== 'list') throw new Error(`constructor not a list`)\n      if (item.values.length < 1) throw new Error(`empty list`)\n      return pair(item.values[0].text, item.values.length - 1)\n    })\n    return {type: 'sdeftype', 0: name, 1: arr(constructors)}\n  },\n  def(loc, name, value) {\n    if (!name || !value) return\n    if (name.type !== 'identifier') return\n    return {type: 'sdef', 0: name.text, 1: parse(value), 2: loc}\n  },\n  defn(loc, name, args, value) {\n    if (!name || !args || !value) return\n    if (name.type !== 'identifier' || args.type !== 'array') return\n    const body = forms.fn(loc, args, value)\n    if (!body) return\n    return {type: 'sdef', 0: name.text, 1: body, 2: loc}\n  }\n}","loc":225}},"nsMap":{},"nsPrev":{},"id":1700,"ts":1714630063.995,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":0},{"idx":499,"type":"end"}]}],"prev":{"497":{"type":"array","values":[499],"loc":497},"516":null},"meta":{},"metaPrev":{},"map":{"497":{"type":"array","values":[499,516],"loc":497},"516":{"type":"blank","loc":516}},"nsMap":{},"nsPrev":{},"id":1701,"ts":1714630075.346,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"start"}]}],"prev":{"516":{"type":"blank","loc":516}},"meta":{},"metaPrev":{},"map":{"516":{"type":"list","values":[],"loc":516}},"nsMap":{},"nsPrev":{},"id":1702,"ts":1714630075.509,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"child","at":0},{"idx":517,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"inside"}]}],"prev":{"516":{"type":"list","values":[],"loc":516},"517":null},"meta":{},"metaPrev":{},"map":{"516":{"type":"list","values":[517],"loc":516},"517":{"type":"identifier","text":"s","loc":517}},"nsMap":{},"nsPrev":{},"id":1703,"ts":1714630075.72,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"child","at":0},{"idx":517,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"child","at":0},{"idx":517,"type":"subtext","at":1}]}],"prev":{"517":{"type":"identifier","text":"s","loc":517}},"meta":{},"metaPrev":{},"map":{"517":{"type":"identifier","text":"some","loc":517}},"nsMap":{},"nsPrev":{},"id":1704,"ts":1714630075.867,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"child","at":1},{"idx":518,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"child","at":0},{"idx":517,"type":"subtext","at":4}]}],"prev":{"516":{"type":"list","values":[517],"loc":516},"518":null},"meta":{},"metaPrev":{},"map":{"516":{"type":"list","values":[517,518],"loc":516},"518":{"type":"blank","loc":518}},"nsMap":{},"nsPrev":{},"id":1705,"ts":1714630076.85,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"child","at":1},{"idx":518,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":1},{"idx":497,"type":"child","at":1},{"idx":516,"type":"child","at":1},{"idx":518,"type":"start"}]}],"prev":{"518":{"type":"blank","loc":518}},"meta":{},"metaPrev":{},"map":{"518":{"type":"identifier","text":"10","loc":518}},"nsMap":{},"nsPrev":{},"id":1706,"ts":1714630076.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":2},{"idx":498,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":2},{"idx":498,"type":"subtext","at":0}]}],"prev":{"498":{"type":"blank","loc":498},"519":null},"meta":{},"metaPrev":{},"map":{"498":{"type":"string","first":519,"templates":[],"loc":498},"519":{"type":"stringText","loc":519,"text":"(some 10)"}},"nsMap":{},"nsPrev":{},"id":1707,"ts":1714630079.463,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":3,"idx":459},{"idx":495,"type":"child","at":2},{"idx":498,"type":"end"}]}],"prev":{"459":{"type":"array","values":[460,468,478,495],"loc":459},"520":null,"521":null,"522":null,"523":null},"meta":{},"metaPrev":{},"map":{"459":{"type":"array","values":[460,468,478,495,520],"loc":459},"520":{"type":"list","values":[521,522,523],"loc":520},"521":{"type":"identifier","text":",","loc":521},"522":{"type":"blank","loc":522},"523":{"type":"blank","loc":523}},"nsMap":{},"nsPrev":{},"id":1708,"ts":1714630080.828,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"start"}]}],"prev":{"522":{"type":"blank","loc":522}},"meta":{},"metaPrev":{},"map":{"522":{"type":"array","values":[],"loc":522}},"nsMap":{},"nsPrev":{},"id":1709,"ts":1714630081.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"inside"}]}],"prev":{"522":{"type":"array","values":[],"loc":522},"524":null},"meta":{},"metaPrev":{},"map":{"522":{"type":"array","values":[524],"loc":522},"524":{"type":"list","values":[],"loc":524}},"nsMap":{},"nsPrev":{},"id":1710,"ts":1714630081.752,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":0},{"idx":525,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"inside"}]}],"prev":{"524":{"type":"list","values":[],"loc":524},"525":null},"meta":{},"metaPrev":{},"map":{"524":{"type":"list","values":[525],"loc":524},"525":{"type":"identifier","text":"d","loc":525}},"nsMap":{},"nsPrev":{},"id":1711,"ts":1714630082.024,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":0},{"idx":525,"type":"subtext","at":7}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":0},{"idx":525,"type":"subtext","at":1}]}],"prev":{"525":{"type":"identifier","text":"d","loc":525}},"meta":{},"metaPrev":{},"map":{"525":{"type":"identifier","text":"deftype","loc":525}},"nsMap":{},"nsPrev":{},"id":1712,"ts":1714630082.091,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":1},{"idx":526,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":0},{"idx":525,"type":"subtext","at":7}]}],"prev":{"524":{"type":"list","values":[525],"loc":524},"526":null},"meta":{},"metaPrev":{},"map":{"524":{"type":"list","values":[525,526],"loc":524},"526":{"type":"blank","loc":526}},"nsMap":{},"nsPrev":{},"id":1713,"ts":1714630083.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":1},{"idx":526,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":1},{"idx":526,"type":"start"}]}],"prev":{"526":{"type":"blank","loc":526}},"meta":{},"metaPrev":{},"map":{"526":{"type":"identifier","text":"lots","loc":526}},"nsMap":{},"nsPrev":{},"id":1714,"ts":1714630083.869,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":1},{"idx":526,"type":"subtext","at":4}]}],"prev":{"524":{"type":"list","values":[525,526],"loc":524},"527":null},"meta":{},"metaPrev":{},"map":{"524":{"type":"list","values":[525,526,527],"loc":524},"527":{"type":"blank","loc":527}},"nsMap":{},"nsPrev":{},"id":1715,"ts":1714630084.669,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"start"}]}],"prev":{"527":{"type":"blank","loc":527}},"meta":{},"metaPrev":{},"map":{"527":{"type":"list","values":[],"loc":527}},"nsMap":{},"nsPrev":{},"id":1716,"ts":1714630084.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":0},{"idx":528,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"inside"}]}],"prev":{"527":{"type":"list","values":[],"loc":527},"528":null},"meta":{},"metaPrev":{},"map":{"527":{"type":"list","values":[528],"loc":527},"528":{"type":"identifier","text":"l","loc":528}},"nsMap":{},"nsPrev":{},"id":1717,"ts":1714630085.264,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":0},{"idx":528,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":0},{"idx":528,"type":"subtext","at":1}]}],"prev":{"528":{"type":"identifier","text":"l","loc":528}},"meta":{},"metaPrev":{},"map":{"528":{"type":"identifier","text":"lol","loc":528}},"nsMap":{},"nsPrev":{},"id":1718,"ts":1714630085.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":1},{"idx":529,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":0},{"idx":528,"type":"subtext","at":3}]}],"prev":{"527":{"type":"list","values":[528],"loc":527},"529":null},"meta":{},"metaPrev":{},"map":{"527":{"type":"list","values":[528,529],"loc":527},"529":{"type":"blank","loc":529}},"nsMap":{},"nsPrev":{},"id":1719,"ts":1714630085.689,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":1},{"idx":529,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":1},{"idx":529,"type":"start"}]}],"prev":{"529":{"type":"blank","loc":529}},"meta":{},"metaPrev":{},"map":{"529":{"type":"identifier","text":"a","loc":529}},"nsMap":{},"nsPrev":{},"id":1720,"ts":1714630086.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":2},{"idx":530,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":1},{"idx":529,"type":"subtext","at":1}]}],"prev":{"527":{"type":"list","values":[528,529],"loc":527},"530":null},"meta":{},"metaPrev":{},"map":{"527":{"type":"list","values":[528,529,530],"loc":527},"530":{"type":"blank","loc":530}},"nsMap":{},"nsPrev":{},"id":1721,"ts":1714630086.413,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":2},{"idx":530,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":2},{"idx":530,"type":"start"}]}],"prev":{"530":{"type":"blank","loc":530}},"meta":{},"metaPrev":{},"map":{"530":{"type":"identifier","text":"b","loc":530}},"nsMap":{},"nsPrev":{},"id":1722,"ts":1714630086.621,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":3},{"idx":531,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":2},{"idx":530,"type":"subtext","at":1}]}],"prev":{"527":{"type":"list","values":[528,529,530],"loc":527},"531":null},"meta":{},"metaPrev":{},"map":{"527":{"type":"list","values":[528,529,530,531],"loc":527},"531":{"type":"blank","loc":531}},"nsMap":{},"nsPrev":{},"id":1723,"ts":1714630087.299,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":3},{"idx":531,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"child","at":2},{"idx":527,"type":"child","at":3},{"idx":531,"type":"start"}]}],"prev":{"531":{"type":"blank","loc":531}},"meta":{},"metaPrev":{},"map":{"531":{"type":"identifier","text":"c","loc":531}},"nsMap":{},"nsPrev":{},"id":1724,"ts":1714630088.188,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":0},{"idx":524,"type":"end"}]}],"prev":{"522":{"type":"array","values":[524],"loc":522},"532":null},"meta":{},"metaPrev":{},"map":{"522":{"type":"array","values":[524,532],"loc":522},"532":{"type":"blank","loc":532}},"nsMap":{},"nsPrev":{},"id":1725,"ts":1714630089.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"start"}]}],"prev":{"532":{"type":"blank","loc":532}},"meta":{},"metaPrev":{},"map":{"532":{"type":"list","values":[],"loc":532}},"nsMap":{},"nsPrev":{},"id":1726,"ts":1714630089.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":0},{"idx":533,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"inside"}]}],"prev":{"532":{"type":"list","values":[],"loc":532},"533":null},"meta":{},"metaPrev":{},"map":{"532":{"type":"list","values":[533],"loc":532},"533":{"type":"identifier","text":"l","loc":533}},"nsMap":{},"nsPrev":{},"id":1727,"ts":1714630089.644,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":0},{"idx":533,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":0},{"idx":533,"type":"subtext","at":1}]}],"prev":{"533":{"type":"identifier","text":"l","loc":533}},"meta":{},"metaPrev":{},"map":{"533":{"type":"identifier","text":"lol","loc":533}},"nsMap":{},"nsPrev":{},"id":1728,"ts":1714630089.814,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":1},{"idx":534,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":0},{"idx":533,"type":"subtext","at":3}]}],"prev":{"532":{"type":"list","values":[533],"loc":532},"534":null},"meta":{},"metaPrev":{},"map":{"532":{"type":"list","values":[533,534],"loc":532},"534":{"type":"blank","loc":534}},"nsMap":{},"nsPrev":{},"id":1729,"ts":1714630090.225,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":1},{"idx":534,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":1},{"idx":534,"type":"start"}]}],"prev":{"534":{"type":"blank","loc":534}},"meta":{},"metaPrev":{},"map":{"534":{"type":"identifier","text":"1","loc":534}},"nsMap":{},"nsPrev":{},"id":1730,"ts":1714630090.451,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":2},{"idx":535,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":1},{"idx":534,"type":"subtext","at":1}]}],"prev":{"532":{"type":"list","values":[533,534],"loc":532},"535":null},"meta":{},"metaPrev":{},"map":{"532":{"type":"list","values":[533,534,535],"loc":532},"535":{"type":"blank","loc":535}},"nsMap":{},"nsPrev":{},"id":1731,"ts":1714630090.606,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":2},{"idx":535,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":2},{"idx":535,"type":"start"}]}],"prev":{"535":{"type":"blank","loc":535}},"meta":{},"metaPrev":{},"map":{"535":{"type":"identifier","text":"2","loc":535}},"nsMap":{},"nsPrev":{},"id":1732,"ts":1714630090.765,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":3},{"idx":536,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":2},{"idx":535,"type":"subtext","at":1}]}],"prev":{"532":{"type":"list","values":[533,534,535],"loc":532},"536":null},"meta":{},"metaPrev":{},"map":{"532":{"type":"list","values":[533,534,535,536],"loc":532},"536":{"type":"blank","loc":536}},"nsMap":{},"nsPrev":{},"id":1733,"ts":1714630090.895,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":3},{"idx":536,"type":"text","at":0},{"idx":537,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":3},{"idx":536,"type":"start"}]}],"prev":{"536":{"type":"blank","loc":536},"537":null},"meta":{},"metaPrev":{},"map":{"536":{"type":"string","first":537,"templates":[],"loc":536},"537":{"type":"stringText","loc":537,"text":""}},"nsMap":{},"nsPrev":{},"id":1734,"ts":1714630091.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":3},{"idx":536,"type":"text","at":0},{"idx":537,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":3},{"idx":536,"type":"text","at":0},{"idx":537,"type":"subtext","at":0}]}],"prev":{"537":{"type":"stringText","loc":537,"text":""}},"meta":{},"metaPrev":{},"map":{"537":{"type":"stringText","loc":537,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1735,"ts":1714630091.456,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":3},{"idx":536,"type":"text","at":0},{"idx":537,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"idx":459,"type":"child","at":4},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":3},{"idx":536,"type":"text","at":0},{"idx":537,"type":"subtext","at":1}]}],"prev":{"537":{"type":"stringText","loc":537,"text":"h"}},"meta":{},"metaPrev":{},"map":{"537":{"type":"stringText","loc":537,"text":"hi"}},"nsMap":{},"nsPrev":{},"id":1736,"ts":1714630091.471,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n      \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1737,"ts":1714630103.176,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n      \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1738,"ts":1714630103.518,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    ca\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1739,"ts":1714630104.021,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    ca\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    cas\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1740,"ts":1714630104.121,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    cas\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1741,"ts":1714630104.333,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case '\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1742,"ts":1714630104.437,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case '\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1743,"ts":1714630104.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'es\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1744,"ts":1714630104.911,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'es\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1745,"ts":1714630105.068,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr'\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1746,"ts":1714630105.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr'\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1747,"ts":1714630105.637,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n    \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1748,"ts":1714630105.862,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n    \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1749,"ts":1714630106.46,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      re\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1750,"ts":1714630107.737,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      re\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      ret\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1751,"ts":1714630107.977,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      ret\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      retur\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1752,"ts":1714630108.065,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      retur\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1753,"ts":1714630108.291,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1754,"ts":1714630108.434,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return no\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1755,"ts":1714630108.564,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return no\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1756,"ts":1714630108.615,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1757,"ts":1714630108.89,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1758,"ts":1714630109.451,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1759,"ts":1714630109.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1760,"ts":1714630109.869,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1761,"ts":1714630110.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1762,"ts":1714630110.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][0\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1763,"ts":1714630115.106,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][0\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1764,"ts":1714630115.74,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0][\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1765,"ts":1714630115.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"subtext","at":0}]}],"prev":{"523":{"type":"blank","loc":523},"538":null},"meta":{},"metaPrev":{},"map":{"523":{"type":"string","first":538,"templates":[],"loc":523},"538":{"type":"stringText","loc":538,"text":"(lol 1 2 \\\"hi\\\")"}},"nsMap":{},"nsPrev":{},"id":1766,"ts":1714630119.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":2,"idx":373},{"idx":407,"type":"child","at":2},{"idx":410,"type":"subtext","at":2}]}],"prev":{"373":{"type":"array","values":[374,388,407],"loc":373},"539":null,"540":null,"541":null,"542":null},"meta":{},"metaPrev":{},"map":{"373":{"type":"array","values":[374,388,407,539],"loc":373},"539":{"type":"list","values":[540,541,542],"loc":539},"540":{"type":"identifier","text":",","loc":540},"541":{"type":"blank","loc":541},"542":{"type":"blank","loc":542}},"nsMap":{},"nsPrev":{},"id":1767,"ts":1714630128.158,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"start"}]}],"prev":{"541":{"type":"blank","loc":541},"543":null},"meta":{},"metaPrev":{},"map":{"541":{"type":"string","first":543,"templates":[],"loc":541},"543":{"type":"stringText","loc":543,"text":""}},"nsMap":{},"nsPrev":{},"id":1768,"ts":1714630130.788,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":0}]}],"prev":{"543":{"type":"stringText","loc":543,"text":""}},"meta":{},"metaPrev":{},"map":{"543":{"type":"stringText","loc":543,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1769,"ts":1714630131.051,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":1}]}],"prev":{"543":{"type":"stringText","loc":543,"text":"h"}},"meta":{},"metaPrev":{},"map":{"543":{"type":"stringText","loc":543,"text":"he"}},"nsMap":{},"nsPrev":{},"id":1770,"ts":1714630131.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":2}]}],"prev":{"543":{"type":"stringText","loc":543,"text":"he"}},"meta":{},"metaPrev":{},"map":{"543":{"type":"stringText","loc":543,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1771,"ts":1714630131.971,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":1}]}],"prev":{"543":{"type":"stringText","loc":543,"text":"h"}},"meta":{},"metaPrev":{},"map":{"543":{"type":"stringText","loc":543,"text":""}},"nsMap":{},"nsPrev":{},"id":1772,"ts":1714630132.223,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"text","at":0},{"idx":543,"type":"subtext","at":0}]}],"prev":{"539":{"type":"list","values":[540,541,542],"loc":539},"541":{"type":"string","first":543,"templates":[],"loc":541}},"meta":{},"metaPrev":{},"map":{"539":{"type":"list","values":[540,541,542],"loc":539},"541":{"type":"blank","loc":541}},"nsMap":{},"nsPrev":{},"id":1773,"ts":1714630132.39,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"start"}]}],"prev":{"541":{"type":"blank","loc":541}},"meta":{},"metaPrev":{},"map":{"541":{"type":"list","values":[],"loc":541}},"nsMap":{},"nsPrev":{},"id":1774,"ts":1714630132.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":0},{"idx":544,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"inside"}]}],"prev":{"541":{"type":"list","values":[],"loc":541},"544":null},"meta":{},"metaPrev":{},"map":{"541":{"type":"list","values":[544],"loc":541},"544":{"type":"identifier","text":"@","loc":544}},"nsMap":{},"nsPrev":{},"id":1775,"ts":1714630133.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":0},{"idx":544,"type":"subtext","at":1}]}],"prev":{"541":{"type":"list","values":[544],"loc":541},"545":null},"meta":{},"metaPrev":{},"map":{"541":{"type":"list","values":[544,545],"loc":541},"545":{"type":"blank","loc":545}},"nsMap":{},"nsPrev":{},"id":1776,"ts":1714630133.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"start"}]}],"prev":{"545":{"type":"blank","loc":545},"546":null},"meta":{},"metaPrev":{},"map":{"545":{"type":"string","first":546,"templates":[],"loc":545},"546":{"type":"stringText","loc":546,"text":""}},"nsMap":{},"nsPrev":{},"id":1777,"ts":1714630134.181,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":0}]}],"prev":{"546":{"type":"stringText","loc":546,"text":""}},"meta":{},"metaPrev":{},"map":{"546":{"type":"stringText","loc":546,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1778,"ts":1714630134.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":3},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":1}]}],"prev":{"546":{"type":"stringText","loc":546,"text":"h"}},"meta":{},"metaPrev":{},"map":{"546":{"type":"stringText","loc":546,"text":"hi"}},"nsMap":{},"nsPrev":{},"id":1779,"ts":1714630134.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":547,"type":"child","at":0},{"idx":545,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"start"}]}],"prev":{"541":{"type":"list","values":[544,545],"loc":541},"547":null},"meta":{},"metaPrev":{},"map":{"541":{"type":"list","values":[544,547],"loc":541},"547":{"type":"array","values":[545],"loc":547}},"nsMap":{},"nsPrev":{},"id":1780,"ts":1714630180.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":547,"type":"child","at":0},{"idx":545,"type":"start"}]}],"prev":{"541":{"type":"list","values":[544,547],"loc":541},"547":{"type":"array","values":[545],"loc":547}},"meta":{},"metaPrev":{},"map":{"541":{"type":"list","values":[544,545],"loc":541},"547":null},"nsMap":{},"nsPrev":{},"id":1781,"ts":1714630196.507,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":0},{"idx":544,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":0},{"idx":544,"type":"subtext","at":1}]}],"prev":{"544":{"type":"identifier","text":"@","loc":544}},"meta":{},"metaPrev":{},"map":{"544":{"type":"identifier","text":"@","loc":544}},"nsMap":{},"nsPrev":{},"id":1782,"ts":1714630205.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":2}]}],"prev":{"546":{"type":"stringText","loc":546,"text":"hi"}},"meta":{},"metaPrev":{},"map":{"546":{"type":"stringText","loc":546,"text":"hi "}},"nsMap":{},"nsPrev":{},"id":1783,"ts":1714630256.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":3}]}],"prev":{"546":{"type":"stringText","loc":546,"text":"hi "}},"meta":{},"metaPrev":{},"map":{"546":{"type":"stringText","loc":546,"text":"hi $"}},"nsMap":{},"nsPrev":{},"id":1784,"ts":1714630256.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"expr","at":1},{"idx":548,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":0},{"idx":546,"type":"subtext","at":4}]}],"prev":{"545":{"type":"string","first":546,"templates":[],"loc":545},"546":{"type":"stringText","loc":546,"text":"hi $"},"548":null,"549":null},"meta":{},"metaPrev":{},"map":{"545":{"type":"string","first":546,"templates":[{"expr":548,"suffix":549}],"loc":545},"546":{"type":"stringText","loc":546,"text":"hi "},"548":{"type":"blank","loc":548},"549":{"type":"stringText","text":"","loc":549}},"nsMap":{},"nsPrev":{},"id":1785,"ts":1714630256.54,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"expr","at":1},{"idx":548,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"expr","at":1},{"idx":548,"type":"start"}]}],"prev":{"548":{"type":"blank","loc":548}},"meta":{},"metaPrev":{},"map":{"548":{"type":"identifier","text":"1","loc":548}},"nsMap":{},"nsPrev":{},"id":1786,"ts":1714630257.067,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]A\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1787,"ts":1714630270.45,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]A\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1788,"ts":1714630270.791,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] +\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1789,"ts":1714630270.925,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] +\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1790,"ts":1714630271.141,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + un\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1791,"ts":1714630271.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + un\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unw\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1792,"ts":1714630271.992,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unw\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1793,"ts":1714630272.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwra\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1794,"ts":1714630272.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwra\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrap\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1795,"ts":1714630272.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrap\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapA\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1796,"ts":1714630272.587,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapA\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapAr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1797,"ts":1714630272.78,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapAr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1798,"ts":1714630272.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1799,"ts":1714630273.207,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(nod\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1800,"ts":1714630273.425,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(nod\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1801,"ts":1714630273.517,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1802,"ts":1714630273.726,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1803,"ts":1714630273.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1804,"ts":1714630274.005,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1])\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1805,"ts":1714630274.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1])\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1806,"ts":1714630274.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).m\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1807,"ts":1714630274.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).m\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).ma\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1808,"ts":1714630274.834,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).ma\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1809,"ts":1714630274.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1810,"ts":1714630275.083,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map((\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1811,"ts":1714630276.983,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map((\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1812,"ts":1714630278.129,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1813,"ts":1714630278.42,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0:\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1814,"ts":1714630278.686,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0:\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1815,"ts":1714630278.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1816,"ts":1714630279.72,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1817,"ts":1714630279.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1818,"ts":1714630280.17,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1819,"ts":1714630280.374,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1820,"ts":1714630280.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: su\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1821,"ts":1714630281.142,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: su\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1822,"ts":1714630281.328,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1823,"ts":1714630282.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf})\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1824,"ts":1714630282.557,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf})\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1825,"ts":1714630282.736,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) =\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1826,"ts":1714630282.837,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) =\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) =>\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1827,"ts":1714630283.094,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) =>\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1828,"ts":1714630283.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1829,"ts":1714630288.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => ev\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1830,"ts":1714630288.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => ev\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => eva\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1831,"ts":1714630288.964,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => eva\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evalu\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1832,"ts":1714630289.093,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evalu\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evalua\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1833,"ts":1714630289.15,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evalua\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1834,"ts":1714630289.343,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1835,"ts":1714630289.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1836,"ts":1714630289.944,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(e\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(ex\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1837,"ts":1714630290.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(ex\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1838,"ts":1714630290.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp,\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1839,"ts":1714630290.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp,\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1840,"ts":1714630290.604,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, sc\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1841,"ts":1714630290.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, sc\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scop\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1842,"ts":1714630290.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scop\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1843,"ts":1714630291.226,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope)\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1844,"ts":1714630291.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope)\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1845,"ts":1714630291.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) +\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1846,"ts":1714630291.711,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) +\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1847,"ts":1714630291.85,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + \n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + su\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1848,"ts":1714630292.425,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + su\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1849,"ts":1714630292.501,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf)\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1850,"ts":1714630293.423,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf)\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1851,"ts":1714630293.7,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).j\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1852,"ts":1714630293.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).j\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).joi\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1853,"ts":1714630294.032,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).joi\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1854,"ts":1714630294.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1855,"ts":1714630294.443,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join(\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1856,"ts":1714630294.649,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('.\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1857,"ts":1714630294.909,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('.\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('..\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1858,"ts":1714630295.042,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('..\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('.\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1859,"ts":1714630295.465,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('.\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1860,"ts":1714630295.634,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join(''\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1861,"ts":1714630296.054,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join(''\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('')\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1862,"ts":1714630296.28,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArr(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('')\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArra(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('')\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1863,"ts":1714630303.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":22,"idx":36},{"type":"ns-top","idx":22},{"type":"rich-text","idx":21,"sel":null}]}],"prev":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArra(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('')\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"raw-code","lang":"javascript","raw":"evaluate = (node, scope) => {\n  switch (node.type) {\n    case 'eprim':\n      return node[0][0]\n    case 'estr':\n      return node[0] + unwrapArray(node[1]).map(({0: exp, 1: suf}) => evaluate(exp, scope) + suf).join('')\n    case 'evar':\n      if (!Object.hasOwn(scope, node[0])) {\n        throw new Error(`Unknown vbl: ${node[0]}. ${Object.keys(scope).join(', ')}`)\n      }\n      return scope[node[0]]\n    case 'elambda':\n      return v => evaluate(node[1], {...scope, ...evalPat(node[0], v)})\n    case 'eapp':\n      return evaluate(node[0], scope)(evaluate(node[1], scope))\n    case 'elet':\n      const init = evaluate(node[1], scope)\n      const got = evalPat(node[0], init)\n      if (!got) throw new Error(`let pattern didnt match: ${JSON.stringify(init)}`)\n      return evaluate(node[2], {...scope, ...got})\n    case 'ematch':\n      const target = evaluate(node[0], scope)\n      for (let {0: pat, 1: body} of unwrapArray(node[1])) {\n        const got = evalPat(pat, target)\n        if (got) {\n          return evaluate(body, {...scope, ...got})\n        }\n      }\n      throw new Error(`match failed (${node[2]}): ${JSON.stringify(target)}`)\n  }\n  return node.type\n}","loc":21}},"nsMap":{},"nsPrev":{},"id":1864,"ts":1714630303.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":1},{"idx":549,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"child","at":1},{"idx":545,"type":"text","at":1},{"idx":549,"type":"subtext","at":0}]}],"prev":{"549":{"type":"stringText","text":"","loc":549}},"meta":{},"metaPrev":{},"map":{"549":{"type":"stringText","text":".","loc":549}},"nsMap":{},"nsPrev":{},"id":1865,"ts":1714630306.792,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":2},{"idx":542,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":2},{"idx":542,"type":"subtext","at":0}]}],"prev":{"542":{"type":"blank","loc":542},"550":null},"meta":{},"metaPrev":{},"map":{"542":{"type":"string","first":550,"templates":[],"loc":542},"550":{"type":"stringText","loc":550,"text":"hi 1."}},"nsMap":{},"nsPrev":{},"id":1866,"ts":1714630308.698,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":283,"idx":36},{"type":"ns-top","idx":283},{"idx":282,"type":"end"}]}],"prev":{"551":null},"meta":{},"metaPrev":{},"map":{"551":{"type":"blank","loc":551}},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,431,456,425,283,552],"id":36},"552":{"type":"normal","top":551,"children":[],"id":552}},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,431,456,425,283],"id":36},"552":null},"id":1867,"ts":1714630433.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"start"}]}],"prev":{"551":{"type":"blank","loc":551},"553":null},"meta":{},"metaPrev":{},"map":{"551":{"type":"string","first":553,"templates":[],"loc":551},"553":{"type":"stringText","loc":553,"text":""}},"nsMap":{},"nsPrev":{},"id":1868,"ts":1714630433.648,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":0}]}],"prev":{"553":{"type":"stringText","loc":553,"text":""}},"meta":{},"metaPrev":{},"map":{"553":{"type":"stringText","loc":553,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1869,"ts":1714630434.27,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":1}]}],"prev":{"553":{"type":"stringText","loc":553,"text":"h"}},"meta":{},"metaPrev":{},"map":{"553":{"type":"stringText","loc":553,"text":"hi"}},"nsMap":{},"nsPrev":{},"id":1870,"ts":1714630434.305,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":2}]}],"prev":{"553":{"type":"stringText","loc":553,"text":"hi"}},"meta":{},"metaPrev":{},"map":{"553":{"type":"stringText","loc":553,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1871,"ts":1714630436.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":1}]}],"prev":{"553":{"type":"stringText","loc":553,"text":"h"}},"meta":{},"metaPrev":{},"map":{"553":{"type":"stringText","loc":553,"text":""}},"nsMap":{},"nsPrev":{},"id":1872,"ts":1714630436.314,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"text","at":0},{"idx":553,"type":"subtext","at":0}]}],"prev":{"551":{"type":"string","first":553,"templates":[],"loc":551}},"meta":{},"metaPrev":{},"map":{"551":{"type":"blank","loc":551}},"nsMap":{"552":{"type":"normal","top":551,"children":[],"id":552}},"nsPrev":{"552":{"type":"normal","top":551,"children":[],"id":552}},"id":1873,"ts":1714630436.469,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"start"}]}],"prev":{"551":{"type":"blank","loc":551}},"meta":{},"metaPrev":{},"map":{"551":{"type":"list","values":[],"loc":551}},"nsMap":{},"nsPrev":{},"id":1874,"ts":1714630436.749,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":0},{"idx":554,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"inside"}]}],"prev":{"551":{"type":"list","values":[],"loc":551},"554":null},"meta":{},"metaPrev":{},"map":{"551":{"type":"list","values":[554],"loc":551},"554":{"type":"identifier","text":"@","loc":554}},"nsMap":{},"nsPrev":{},"id":1875,"ts":1714630437.265,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":1},{"idx":555,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":0},{"idx":554,"type":"subtext","at":1}]}],"prev":{"551":{"type":"list","values":[554],"loc":551},"555":null},"meta":{},"metaPrev":{},"map":{"551":{"type":"list","values":[554,555],"loc":551},"555":{"type":"blank","loc":555}},"nsMap":{},"nsPrev":{},"id":1876,"ts":1714630438.12,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":1},{"idx":555,"type":"text","at":0},{"idx":556,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":1},{"idx":555,"type":"start"}]}],"prev":{"555":{"type":"blank","loc":555},"556":null},"meta":{},"metaPrev":{},"map":{"555":{"type":"string","first":556,"templates":[],"loc":555},"556":{"type":"stringText","loc":556,"text":""}},"nsMap":{},"nsPrev":{},"id":1877,"ts":1714630438.274,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":1},{"idx":555,"type":"text","at":0},{"idx":556,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":1},{"idx":555,"type":"text","at":0},{"idx":556,"type":"subtext","at":0}]}],"prev":{"556":{"type":"stringText","loc":556,"text":""}},"meta":{},"metaPrev":{},"map":{"556":{"type":"stringText","loc":556,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1878,"ts":1714630438.52,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":1},{"idx":555,"type":"text","at":0},{"idx":556,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"child","at":1},{"idx":555,"type":"text","at":0},{"idx":556,"type":"subtext","at":1}]}],"prev":{"556":{"type":"stringText","loc":556,"text":"h"}},"meta":{},"metaPrev":{},"map":{"556":{"type":"stringText","loc":556,"text":"hi"}},"nsMap":{},"nsPrev":{},"id":1879,"ts":1714630438.575,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":2},{"idx":557,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"end"}]}],"prev":{"539":{"type":"list","values":[540,541,542],"loc":539},"557":null},"meta":{},"metaPrev":{},"map":{"539":{"type":"list","values":[540,541,557,542],"loc":539},"557":{"type":"blank","loc":557}},"nsMap":{},"nsPrev":{},"id":1880,"ts":1714630446.796,"libraryRoot":""},{"id":1881,"meta":{},"metaPrev":{},"revert":1880,"prev":{"539":{"type":"list","values":[540,541,557,542],"loc":539},"557":{"type":"blank","loc":557}},"map":{"539":{"type":"list","values":[540,541,542],"loc":539},"557":null},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":1},{"idx":541,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":2},{"idx":557,"type":"start"}]}],"nsMap":{},"nsPrev":{},"ts":1714630447.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":3,"idx":373},{"idx":539,"type":"child","at":2},{"idx":542,"type":"end"}]}],"prev":{"373":{"type":"array","values":[374,388,407,539],"loc":373},"558":null,"559":null,"560":null,"561":null},"meta":{},"metaPrev":{},"map":{"373":{"type":"array","values":[374,388,407,539,558],"loc":373},"558":{"type":"list","values":[559,560,561],"loc":558},"559":{"type":"identifier","text":",","loc":559},"560":{"type":"blank","loc":560},"561":{"type":"blank","loc":561}},"nsMap":{},"nsPrev":{},"id":1882,"ts":1714630449.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"text","at":0},{"idx":562,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"start"}]}],"prev":{"560":{"type":"blank","loc":560},"562":null},"meta":{},"metaPrev":{},"map":{"560":{"type":"string","first":562,"templates":[],"loc":560},"562":{"type":"stringText","loc":562,"text":""}},"nsMap":{},"nsPrev":{},"id":1883,"ts":1714630449.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"text","at":0},{"idx":562,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"text","at":0},{"idx":562,"type":"subtext","at":0}]}],"prev":{"562":{"type":"stringText","loc":562,"text":""}},"meta":{},"metaPrev":{},"map":{"562":{"type":"stringText","loc":562,"text":"h"}},"nsMap":{},"nsPrev":{},"id":1884,"ts":1714630449.966,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"text","at":0},{"idx":562,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"text","at":0},{"idx":562,"type":"subtext","at":1}]}],"prev":{"562":{"type":"stringText","loc":562,"text":"h"}},"meta":{},"metaPrev":{},"map":{"562":{"type":"stringText","loc":562,"text":"hi"}},"nsMap":{},"nsPrev":{},"id":1885,"ts":1714630450.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":563,"type":"child","at":0},{"idx":560,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":560,"type":"start"}]}],"prev":{"558":{"type":"list","values":[559,560,561],"loc":558},"563":null},"meta":{},"metaPrev":{},"map":{"558":{"type":"list","values":[559,563,561],"loc":558},"563":{"type":"list","values":[560],"loc":563}},"nsMap":{},"nsPrev":{},"id":1886,"ts":1714630452.288,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":563,"type":"child","at":0},{"idx":564,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"idx":373,"type":"child","at":4},{"idx":558,"type":"child","at":1},{"idx":563,"type":"child","at":0},{"idx":560,"type":"start"}]}],"prev":{"563":{"type":"list","values":[560],"loc":563},"564":null},"meta":{},"metaPrev":{},"map":{"563":{"type":"list","values":[564,560],"loc":563},"564":{"type":"identifier","text":"@","loc":564}},"nsMap":{},"nsPrev":{},"id":1887,"ts":1714630452.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":4,"idx":373},{"idx":558,"type":"child","at":2},{"idx":561,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":370,"idx":36},{"type":"ns-top","idx":370},{"idx":369,"type":"child","at":2},{"type":"child","at":4,"idx":373},{"idx":558,"type":"child","at":2},{"idx":561,"type":"subtext","at":0}]}],"prev":{"561":{"type":"blank","loc":561},"565":null},"meta":{},"metaPrev":{},"map":{"561":{"type":"string","first":565,"templates":[],"loc":561},"565":{"type":"stringText","loc":565,"text":"hi"}},"nsMap":{},"nsPrev":{},"id":1888,"ts":1714630455.198,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":2},{"idx":535,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":1},{"idx":522,"type":"child","at":1},{"idx":532,"type":"child","at":2},{"idx":535,"type":"subtext","at":1}]}],"prev":{"535":{"type":"identifier","text":"2","loc":535}},"meta":{},"metaPrev":{},"map":{"535":{"type":"identifier","text":"true","loc":535}},"nsMap":{},"nsPrev":{},"id":1889,"ts":1714630463.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":7}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":8}]}],"prev":{"538":{"type":"stringText","loc":538,"text":"(lol 1 2 \\\"hi\\\")"}},"meta":{},"metaPrev":{},"map":{"538":{"type":"stringText","loc":538,"text":"(lol 1  \\\"hi\\\")"}},"nsMap":{},"nsPrev":{},"id":1890,"ts":1714630466.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":8}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":7}]}],"prev":{"538":{"type":"stringText","loc":538,"text":"(lol 1  \\\"hi\\\")"}},"meta":{},"metaPrev":{},"map":{"538":{"type":"stringText","loc":538,"text":"(lol 1 t \\\"hi\\\")"}},"nsMap":{},"nsPrev":{},"id":1891,"ts":1714630466.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":9}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":8}]}],"prev":{"538":{"type":"stringText","loc":538,"text":"(lol 1 t \\\"hi\\\")"}},"meta":{},"metaPrev":{},"map":{"538":{"type":"stringText","loc":538,"text":"(lol 1 tr \\\"hi\\\")"}},"nsMap":{},"nsPrev":{},"id":1892,"ts":1714630466.425,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":10}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":9}]}],"prev":{"538":{"type":"stringText","loc":538,"text":"(lol 1 tr \\\"hi\\\")"}},"meta":{},"metaPrev":{},"map":{"538":{"type":"stringText","loc":538,"text":"(lol 1 tru \\\"hi\\\")"}},"nsMap":{},"nsPrev":{},"id":1893,"ts":1714630466.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":11}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"child","at":2},{"type":"child","at":4,"idx":459},{"idx":520,"type":"child","at":2},{"idx":523,"type":"text","at":0},{"idx":538,"type":"subtext","at":10}]}],"prev":{"538":{"type":"stringText","loc":538,"text":"(lol 1 tru \\\"hi\\\")"}},"meta":{},"metaPrev":{},"map":{"538":{"type":"stringText","loc":538,"text":"(lol 1 true \\\"hi\\\")"}},"nsMap":{},"nsPrev":{},"id":1894,"ts":1714630466.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"end"}]}],"prev":{"430":{"type":"list","values":[433,434],"loc":430},"433":{"type":"identifier","text":"stmts","loc":433},"434":{"type":"array","values":[439,444,443],"loc":434},"439":{"type":"list","values":[440,441,442],"loc":439},"440":{"type":"identifier","text":"def","loc":440},"441":{"type":"identifier","text":"n","loc":441},"442":{"type":"identifier","text":"10","loc":442},"443":{"type":"list","values":[453,454],"loc":443},"444":{"type":"list","values":[445,446,447,449],"loc":444},"445":{"type":"identifier","text":"defn","loc":445},"446":{"type":"identifier","text":"hi","loc":446},"447":{"type":"array","values":[448],"loc":447},"448":{"type":"identifier","text":"x","loc":448},"449":{"type":"list","values":[450,451,452],"loc":449},"450":{"type":"identifier","text":",","loc":450},"451":{"type":"identifier","text":"x","loc":451},"452":{"type":"identifier","text":"2","loc":452},"453":{"type":"identifier","text":"hi","loc":453},"454":{"type":"identifier","text":"n","loc":454}},"meta":{},"metaPrev":{},"map":{"430":{"type":"blank","loc":430},"433":null,"434":null,"439":null,"440":null,"441":null,"442":null,"443":null,"444":null,"445":null,"446":null,"447":null,"448":null,"449":null,"450":null,"451":null,"452":null,"453":null,"454":null},"nsMap":{"431":{"type":"normal","top":430,"children":[],"id":431}},"nsPrev":{"431":{"type":"normal","top":430,"children":[],"id":431}},"id":1895,"ts":1714630477.394,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":336,"idx":36},{"type":"ns-top","idx":336},{"idx":335,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":431,"idx":36},{"type":"ns-top","idx":431},{"idx":430,"type":"start"}]}],"prev":{"430":{"type":"blank","loc":430}},"meta":{},"metaPrev":{},"map":{"430":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456,425,283,552],"id":36},"431":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,431,456,425,283,552],"id":36},"431":{"type":"normal","top":430,"children":[],"id":431}},"id":1896,"ts":1714630477.762,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"end"}]}],"prev":{"551":{"type":"list","values":[554,555],"loc":551},"554":{"type":"identifier","text":"@","loc":554},"555":{"type":"string","first":556,"templates":[],"loc":555},"556":{"type":"stringText","loc":556,"text":"hi"}},"meta":{},"metaPrev":{},"map":{"551":{"type":"blank","loc":551},"554":null,"555":null,"556":null},"nsMap":{"552":{"type":"normal","top":551,"children":[],"id":552}},"nsPrev":{"552":{"type":"normal","top":551,"children":[],"id":552}},"id":1897,"ts":1714630498.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":283,"idx":36},{"type":"ns-top","idx":283},{"idx":282,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":552,"idx":36},{"type":"ns-top","idx":552},{"idx":551,"type":"start"}]}],"prev":{"551":{"type":"blank","loc":551}},"meta":{},"metaPrev":{},"map":{"551":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456,425,283],"id":36},"552":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456,425,283,552],"id":36},"552":{"type":"normal","top":551,"children":[],"id":552}},"id":1898,"ts":1714630499.116,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":283,"idx":36},{"type":"ns-top","idx":283},{"idx":282,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":283,"idx":36},{"type":"ns-top","idx":283},{"idx":282,"type":"end"}]}],"prev":{"282":{"type":"list","values":[284,285],"loc":282},"284":{"type":"identifier","text":"parse","loc":284},"285":{"type":"identifier","text":"1","loc":285}},"meta":{},"metaPrev":{},"map":{"282":{"type":"blank","loc":282},"284":null,"285":null},"nsMap":{"283":{"type":"normal","top":282,"children":[],"id":283}},"nsPrev":{"283":{"type":"normal","top":282,"children":[],"id":283}},"id":1899,"ts":1714630499.385,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":283,"idx":36},{"type":"ns-top","idx":283},{"idx":282,"type":"start"}]}],"prev":{"282":{"type":"blank","loc":282}},"meta":{},"metaPrev":{},"map":{"282":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456,425],"id":36},"283":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456,425,283],"id":36},"283":{"type":"normal","top":282,"children":[],"id":283}},"id":1900,"ts":1714630499.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"end"}]}],"prev":{"424":{"type":"list","values":[426,427,428],"loc":424},"426":{"type":"identifier","text":"pair","loc":426},"427":{"type":"identifier","text":"1","loc":427},"428":{"type":"identifier","text":"2","loc":428}},"meta":{},"metaPrev":{},"map":{"424":{"type":"blank","loc":424},"426":null,"427":null,"428":null},"nsMap":{"425":{"type":"normal","top":424,"children":[],"id":425}},"nsPrev":{"425":{"type":"normal","top":424,"children":[],"id":425}},"id":1901,"ts":1714630500.038,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":456},{"idx":455,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":425,"idx":36},{"type":"ns-top","idx":425},{"idx":424,"type":"start"}]}],"prev":{"424":{"type":"blank","loc":424}},"meta":{},"metaPrev":{},"map":{"424":null},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456],"id":36},"425":null},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456,425],"id":36},"425":{"type":"normal","top":424,"children":[],"id":425}},"id":1902,"ts":1714630500.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":214,"idx":0},{"type":"ns-top","idx":214},{"idx":213,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":214,"idx":0},{"type":"ns-top","idx":214},{"idx":213,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"214":{"type":"normal","top":213,"children":[28,30,26,99,291,293,112,58,71,138,150],"id":214,"collapsed":true}},"nsPrev":{"214":{"type":"normal","top":213,"children":[28,30,26,99,291,293,112,58,71,138,150],"id":214,"collapsed":false}},"id":1903,"ts":1714630530.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":216,"idx":212},{"type":"ns-top","idx":216},{"idx":215,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":216,"idx":212},{"type":"ns-top","idx":216},{"idx":215,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"216":{"type":"normal","top":215,"children":[34,69,24,32,141,62,47,51,114,79],"id":216,"collapsed":true}},"nsPrev":{"216":{"type":"normal","top":215,"children":[34,69,24,32,141,62,47,51,114,79],"id":216,"collapsed":false}},"id":1904,"ts":1714630533.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns-top","idx":220},{"idx":219,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":220,"idx":212},{"type":"ns-top","idx":220},{"idx":219,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"220":{"type":"normal","top":219,"children":[222,226,228,248,230],"id":220,"collapsed":true}},"nsPrev":{"220":{"type":"normal","top":219,"children":[222,226,228,248,230],"id":220,"collapsed":false}},"id":1905,"ts":1714630534.478,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":216,"idx":212},{"type":"ns-top","idx":216},{"idx":215,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":216,"idx":212},{"type":"ns-top","idx":216},{"idx":215,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"216":{"type":"normal","top":215,"children":[34,69,24,32,141,62,47,51,114,79],"id":216,"collapsed":false}},"nsPrev":{"216":{"type":"normal","top":215,"children":[34,69,24,32,141,62,47,51,114,79],"id":216,"collapsed":true}},"id":1906,"ts":1714630535.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":216,"idx":212},{"type":"ns-top","idx":216},{"idx":215,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns","child":216,"idx":212},{"type":"ns-top","idx":216},{"idx":215,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"216":{"type":"normal","top":215,"children":[34,69,24,32,141,62,47,51,114,79],"id":216,"collapsed":true}},"nsPrev":{"216":{"type":"normal","top":215,"children":[34,69,24,32,141,62,47,51,114,79],"id":216,"collapsed":false}},"id":1907,"ts":1714630540.729,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns-top","idx":212},{"idx":211,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns-top","idx":212},{"idx":211,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"212":{"type":"normal","top":211,"children":[43,216,218,220],"id":212,"collapsed":true}},"nsPrev":{"212":{"type":"normal","top":211,"children":[43,216,218,220],"id":212,"collapsed":false}},"id":1908,"ts":1714630542.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns-top","idx":212},{"type":"rich-text","idx":211,"sel":"b188e96a-7452-4d88-8430-9cf830c2407c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":212,"idx":0},{"type":"ns-top","idx":212},{"type":"rich-text","idx":211,"sel":"b188e96a-7452-4d88-8430-9cf830c2407c"}]}],"prev":{"211":{"type":"rich-text","contents":[{"id":"b188e96a-7452-4d88-8430-9cf830c2407c","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Parser","styles":{}}],"children":[]}],"loc":211}},"meta":{},"metaPrev":{},"map":{"211":{"type":"rich-text","contents":[{"id":"b188e96a-7452-4d88-8430-9cf830c2407c","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Parser","styles":{}}],"children":[]}],"loc":211}},"nsMap":{},"nsPrev":{},"id":1909,"ts":1714630587.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":214,"idx":0},{"type":"ns-top","idx":214},{"idx":213,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":214,"idx":0},{"type":"ns-top","idx":214},{"idx":213,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"214":{"type":"normal","top":213,"children":[28,30,26,99,291,293,112,58,71,138,150],"id":214,"collapsed":false}},"nsPrev":{"214":{"type":"normal","top":213,"children":[28,30,26,99,291,293,112,58,71,138,150],"id":214,"collapsed":true}},"id":1910,"ts":1714631293.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":214,"idx":0},{"type":"ns-top","idx":214},{"idx":213,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":214,"idx":0},{"type":"ns-top","idx":214},{"idx":213,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"214":{"type":"normal","top":213,"children":[28,30,26,99,291,293,112,58,71,138,150],"id":214,"collapsed":true}},"nsPrev":{"214":{"type":"normal","top":213,"children":[28,30,26,99,291,293,112,58,71,138,150],"id":214,"collapsed":false}},"id":1911,"ts":1714632302.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":11,"idx":0},{"type":"ns-top","idx":11},{"type":"rich-text","idx":10,"sel":"9ce7f4f1-7ee8-47c2-bd25-480e7a33babf"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":11,"idx":0},{"type":"ns-top","idx":11},{"idx":10,"type":"subtext","at":0}]}],"prev":{"10":{"type":"blank","loc":10}},"meta":{},"metaPrev":{},"map":{"10":{"type":"rich-text","contents":[{"id":"9ce7f4f1-7ee8-47c2-bd25-480e7a33babf","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Compile to js","styles":{}}],"children":[]}],"loc":10}},"nsMap":{},"nsPrev":{},"id":1912,"ts":1714633067.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"idx":566,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":11,"idx":0},{"type":"ns-top","idx":11},{"idx":10,"type":"end"}]}],"prev":{"566":null},"meta":{},"metaPrev":{},"map":{"566":{"type":"blank","loc":566}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,214,212,36,11,567,9],"type":"normal"},"567":{"type":"normal","top":566,"children":[],"id":567}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3,214,212,36,11,9],"type":"normal"},"567":null},"id":1913,"ts":1714633075.895,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"start","idx":566}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"idx":566,"type":"start"}]}],"prev":{"566":{"type":"blank","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"// write some code","loc":566}},"nsMap":{},"nsPrev":{},"id":1914,"ts":1714633078.288,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"idx":566,"type":"end"}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"// write some code","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"","loc":566}},"nsMap":{},"nsPrev":{},"id":1915,"ts":1714633082.442,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"co","loc":566}},"nsMap":{},"nsPrev":{},"id":1916,"ts":1714633089.686,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"co","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"com","loc":566}},"nsMap":{},"nsPrev":{},"id":1917,"ts":1714633089.757,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"com","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"comp","loc":566}},"nsMap":{},"nsPrev":{},"id":1918,"ts":1714633089.792,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"comp","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compi","loc":566}},"nsMap":{},"nsPrev":{},"id":1919,"ts":1714633089.918,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compi","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compil","loc":566}},"nsMap":{},"nsPrev":{},"id":1920,"ts":1714633090.031,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compil","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile","loc":566}},"nsMap":{},"nsPrev":{},"id":1921,"ts":1714633090.138,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile ","loc":566}},"nsMap":{},"nsPrev":{},"id":1922,"ts":1714633090.623,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile ","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = ","loc":566}},"nsMap":{},"nsPrev":{},"id":1923,"ts":1714633090.758,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = ","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = no","loc":566}},"nsMap":{},"nsPrev":{},"id":1924,"ts":1714633105.932,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = no","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = nod","loc":566}},"nsMap":{},"nsPrev":{},"id":1925,"ts":1714633105.987,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = nod","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node","loc":566}},"nsMap":{},"nsPrev":{},"id":1926,"ts":1714633106.06,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node ","loc":566}},"nsMap":{},"nsPrev":{},"id":1927,"ts":1714633106.137,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node ","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node =","loc":566}},"nsMap":{},"nsPrev":{},"id":1928,"ts":1714633106.199,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node =","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node =>","loc":566}},"nsMap":{},"nsPrev":{},"id":1929,"ts":1714633106.488,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node =>","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {","loc":566}},"nsMap":{},"nsPrev":{},"id":1930,"ts":1714633106.609,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  ","loc":566}},"nsMap":{},"nsPrev":{},"id":1931,"ts":1714633107.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  ","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  }","loc":566}},"nsMap":{},"nsPrev":{},"id":1932,"ts":1714633107.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  }","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1933,"ts":1714633108.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1934,"ts":1714633110.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1935,"ts":1714633110.414,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (s\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1936,"ts":1714633110.938,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (s\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (sw\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1937,"ts":1714633111.24,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (sw\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (s\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1938,"ts":1714633111.509,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (s\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1939,"ts":1714633111.698,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  (\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1940,"ts":1714633111.863,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  s\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1941,"ts":1714633112.625,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  s\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  sw\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1942,"ts":1714633112.879,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  sw\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  swi\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1943,"ts":1714633112.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  swi\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  swit\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1944,"ts":1714633113.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  swit\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1945,"ts":1714633113.291,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1946,"ts":1714633113.438,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1947,"ts":1714633113.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (no\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1948,"ts":1714633113.744,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (no\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (nod\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1949,"ts":1714633113.781,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (nod\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1950,"ts":1714633113.85,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1951,"ts":1714633113.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.t\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1952,"ts":1714633114.081,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.t\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.typ\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1953,"ts":1714633114.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.typ\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1954,"ts":1714633114.333,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type)\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1955,"ts":1714633114.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type)\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1956,"ts":1714633114.754,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1957,"ts":1714633114.854,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1958,"ts":1714633115.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":456,"idx":36},{"type":"ns-top","idx":567},{"type":"start","idx":566}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":567,"idx":0},{"type":"ns-top","idx":567},{"idx":566,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,214,212,36,11,9],"type":"normal"},"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,567,456],"id":36}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3,214,212,36,11,567,9],"type":"normal"},"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456],"id":36}},"id":1959,"ts":1714633139.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    ca\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1960,"ts":1714633143.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    ca\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    cas\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1961,"ts":1714633143.296,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    cas\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1962,"ts":1714633143.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case '\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1963,"ts":1714633143.625,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case '\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'e\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1964,"ts":1714633144.326,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'e\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'ep\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1965,"ts":1714633144.488,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'ep\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'epr\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1966,"ts":1714633144.623,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'epr\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1967,"ts":1714633144.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim'\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1968,"ts":1714633145.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim'\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim':\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1969,"ts":1714633145.396,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim':\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1970,"ts":1714633149.938,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': re\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1971,"ts":1714633150.182,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': re\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': ret\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1972,"ts":1714633150.393,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': ret\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': retu\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1973,"ts":1714633150.457,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': retu\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': retur\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1974,"ts":1714633150.566,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': retur\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1975,"ts":1714633150.658,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1976,"ts":1714633150.947,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return ''\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1977,"ts":1714633151.091,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return ''\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1978,"ts":1714633151.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' +\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1979,"ts":1714633151.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' +\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1980,"ts":1714633151.819,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + no\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1981,"ts":1714633152.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + no\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1982,"ts":1714633152.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node.\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1983,"ts":1714633152.501,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node.\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1984,"ts":1714633153.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1985,"ts":1714633153.708,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1986,"ts":1714633153.952,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0]\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1987,"ts":1714633154.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0]\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1988,"ts":1714633154.327,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1989,"ts":1714633154.555,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1990,"ts":1714633155.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    ca\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1991,"ts":1714633155.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    ca\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    cas\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1992,"ts":1714633155.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    cas\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1993,"ts":1714633156.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1994,"ts":1714633156.303,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case '\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1995,"ts":1714633156.692,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case '\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'e\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1996,"ts":1714633156.81,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'e\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'es\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1997,"ts":1714633157.023,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'es\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1998,"ts":1714633157.222,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr'\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":1999,"ts":1714633157.8,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr'\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr':\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2000,"ts":1714633158.105,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr':\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2001,"ts":1714633158.319,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': re\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2002,"ts":1714633168.478,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': re\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': ret\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2003,"ts":1714633168.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': ret\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': retur\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2004,"ts":1714633168.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': retur\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2005,"ts":1714633168.955,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2006,"ts":1714633169.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2007,"ts":1714633169.591,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2008,"ts":1714633172.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${un\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2009,"ts":1714633172.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${un\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${uns\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2010,"ts":1714633173.523,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${uns\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unsl\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2011,"ts":1714633173.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unsl\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unsla\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2012,"ts":1714633173.797,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unsla\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2013,"ts":1714633174.608,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2014,"ts":1714633175.251,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(no\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2015,"ts":1714633177.109,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(no\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2016,"ts":1714633177.264,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2017,"ts":1714633177.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[]\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2018,"ts":1714633178.01,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[]\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2019,"ts":1714633178.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2020,"ts":1714633178.53,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0]\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2021,"ts":1714633178.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0]\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2022,"ts":1714633179.217,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2023,"ts":1714633179.974,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}$\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2024,"ts":1714633180.848,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}$\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2025,"ts":1714633180.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2026,"ts":1714633181.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2027,"ts":1714633181.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n    \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2028,"ts":1714633184.153,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n    \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n  \n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2029,"ts":1714633184.709,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n  \n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2030,"ts":1714633184.938,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${un}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2031,"ts":1714633189.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${un}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwr}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2032,"ts":1714633190.057,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwr}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwra}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2033,"ts":1714633190.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwra}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrap}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2034,"ts":1714633190.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrap}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapA}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2035,"ts":1714633190.578,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapA}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapAr}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2036,"ts":1714633190.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapAr}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArra}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2037,"ts":1714633190.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArra}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2038,"ts":1714633191.093,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray*}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2039,"ts":1714633191.338,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray*}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2040,"ts":1714633192.029,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2041,"ts":1714633192.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(no}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2042,"ts":1714633192.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(no}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(nod}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2043,"ts":1714633192.6,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(nod}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2044,"ts":1714633192.672,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2045,"ts":1714633192.906,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2046,"ts":1714633193.13,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2047,"ts":1714633193.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1])}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2048,"ts":1714633193.677,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1])}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2049,"ts":1714633194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).m}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2050,"ts":1714633194.229,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).m}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).ma}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2051,"ts":1714633194.321,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).ma}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2052,"ts":1714633194.42,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2053,"ts":1714633194.628,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map((}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2054,"ts":1714633195.329,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map((}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2055,"ts":1714633195.972,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2056,"ts":1714633196.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0:}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2057,"ts":1714633196.68,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0:}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2058,"ts":1714633196.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: e}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2059,"ts":1714633196.839,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: e}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: ex}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2060,"ts":1714633197.097,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: ex}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: exp}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2061,"ts":1714633197.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: exp}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2062,"ts":1714633197.347,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr,}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2063,"ts":1714633197.499,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr,}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2064,"ts":1714633197.63,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2065,"ts":1714633198.013,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2066,"ts":1714633198.264,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: s}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2067,"ts":1714633198.472,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: s}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: su}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2068,"ts":1714633198.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: su}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2069,"ts":1714633198.66,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2070,"ts":1714633199.103,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf})}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2071,"ts":1714633199.326,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf})}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2072,"ts":1714633202.447,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) =}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2073,"ts":1714633202.913,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) =}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) =>}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2074,"ts":1714633203.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) =>}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2075,"ts":1714633203.394,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2076,"ts":1714633217.166,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2077,"ts":1714633218.332,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2078,"ts":1714633218.49,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2079,"ts":1714633219.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\`\\`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2080,"ts":1714633221.746,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\`\\`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\`\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2081,"ts":1714633221.906,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\`\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2082,"ts":1714633224.059,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2083,"ts":1714633224.262,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2084,"ts":1714633227.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\$\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2085,"ts":1714633227.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\$\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2086,"ts":1714633227.847,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${}\\``}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2087,"ts":1714633228.526,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${}\\``}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${}\\`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2088,"ts":1714633229.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${}\\`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2089,"ts":1714633229.84,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2090,"ts":1714633233.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2091,"ts":1714633233.21,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${d}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2092,"ts":1714633236.934,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${d}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2093,"ts":1714633238.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${co}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2094,"ts":1714633238.64,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${co}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${comp}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2095,"ts":1714633238.788,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${comp}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compil}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2096,"ts":1714633239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compil}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2097,"ts":1714633239.204,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2098,"ts":1714633239.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(e}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2099,"ts":1714633239.587,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(e}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(ex}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2100,"ts":1714633239.819,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(ex}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(exp}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2101,"ts":1714633239.925,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(exp}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2102,"ts":1714633240.013,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2103,"ts":1714633244.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${c`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2104,"ts":1714633244.376,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${c`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2105,"ts":1714633244.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${s`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2106,"ts":1714633245.015,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${s`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${su`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2107,"ts":1714633245.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${su`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2108,"ts":1714633245.238,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2109,"ts":1714633245.934,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`)}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2110,"ts":1714633249.362,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`)}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2111,"ts":1714633252.477,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).j}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2112,"ts":1714633252.676,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).j}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).joi}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2113,"ts":1714633252.872,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).joi}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2114,"ts":1714633253.115,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join(}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2115,"ts":1714633253.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join(}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2116,"ts":1714633253.659,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2117,"ts":1714633253.942,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2118,"ts":1714633254.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n'}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2119,"ts":1714633254.709,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n'}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2120,"ts":1714633255.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2121,"ts":1714633255.484,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2122,"ts":1714633256.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2123,"ts":1714633264.146,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`\n      ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2124,"ts":1714633269.478,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr}}${suf}`\n      ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${suf}`\n      ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2125,"ts":1714633292.757,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${suf}`\n      ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${suf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2126,"ts":1714633300.578,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${suf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unsuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2127,"ts":1714633307.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unsuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslsuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2128,"ts":1714633307.595,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslsuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslasuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2129,"ts":1714633307.746,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslasuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslassuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2130,"ts":1714633307.9,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslassuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslashsuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2131,"ts":1714633308.084,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslashsuf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2132,"ts":1714633308.317,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2133,"ts":1714633310.06,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2134,"ts":1714633314.889,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2135,"ts":1714633315.078,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\`\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2136,"ts":1714633317.2,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\`\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2137,"ts":1714633317.342,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2138,"ts":1714633321.236,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    ca\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2139,"ts":1714633322.555,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    ca\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    cas\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2140,"ts":1714633322.624,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    cas\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2141,"ts":1714633322.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case '\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2142,"ts":1714633322.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case '\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'e\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2143,"ts":1714633323.107,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'e\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'ev\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2144,"ts":1714633323.269,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'ev\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2145,"ts":1714633323.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2146,"ts":1714633323.667,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar';\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2147,"ts":1714633324.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar';\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2148,"ts":1714633324.401,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar':\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2149,"ts":1714633324.66,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar':\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2150,"ts":1714633325.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': re\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2151,"ts":1714633326.701,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': re\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': ret\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2152,"ts":1714633327.05,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': ret\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': retu\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2153,"ts":1714633327.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': retu\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2154,"ts":1714633327.257,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2155,"ts":1714633327.338,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sa\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2156,"ts":1714633329.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sa\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sani\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2157,"ts":1714633330.067,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sani\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanit\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2158,"ts":1714633330.322,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanit\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return saniti\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2159,"ts":1714633330.816,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return saniti\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitiz\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2160,"ts":1714633330.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitiz\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2161,"ts":1714633331.187,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2162,"ts":1714633331.503,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2163,"ts":1714633332.436,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(nod\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2164,"ts":1714633332.478,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(nod\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2165,"ts":1714633332.553,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2166,"ts":1714633332.735,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2167,"ts":1714633332.964,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2168,"ts":1714633333.693,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2169,"ts":1714633335.58,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n  \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2170,"ts":1714633335.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n  \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2171,"ts":1714633336.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2172,"ts":1714633337.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    cas\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2173,"ts":1714633337.185,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    cas\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2174,"ts":1714633337.415,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2175,"ts":1714633337.613,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case'e\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2176,"ts":1714633337.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case'e\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2177,"ts":1714633338.43,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2178,"ts":1714633338.592,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2179,"ts":1714633338.714,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case '\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2180,"ts":1714633338.851,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case '\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'e\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2181,"ts":1714633339.257,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'e\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'el\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2182,"ts":1714633339.557,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'el\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'ela\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2183,"ts":1714633339.696,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'ela\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elam\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2184,"ts":1714633339.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elam\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elamb\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2185,"ts":1714633340.007,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elamb\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2186,"ts":1714633340.14,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2187,"ts":1714633340.375,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2188,"ts":1714633341.005,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2189,"ts":1714633354.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2190,"ts":1714633355.381,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      i\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2191,"ts":1714633357.711,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      i\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2192,"ts":1714633357.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2193,"ts":1714633359.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2194,"ts":1714633359.304,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (nod\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2195,"ts":1714633359.365,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (nod\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2196,"ts":1714633359.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2197,"ts":1714633359.896,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2198,"ts":1714633360.151,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2199,"ts":1714633360.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].ty\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2200,"ts":1714633360.726,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].ty\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].typ\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2201,"ts":1714633360.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].typ\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2202,"ts":1714633360.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2203,"ts":1714633361.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type =\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2204,"ts":1714633361.082,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type =\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type ==\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2205,"ts":1714633361.236,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type ==\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type ===\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2206,"ts":1714633361.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type ===\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2207,"ts":1714633361.485,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === '\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2208,"ts":1714633361.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === '\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'p\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2209,"ts":1714633362.313,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'p\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pa\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2210,"ts":1714633362.699,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pa\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'p\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2211,"ts":1714633362.937,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'p\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pv\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2212,"ts":1714633363.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pv\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2213,"ts":1714633363.167,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2214,"ts":1714633363.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar')\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2215,"ts":1714633363.622,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar')\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2216,"ts":1714633363.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') =\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2217,"ts":1714633363.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') =\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2218,"ts":1714633364.893,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') re\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2219,"ts":1714633365.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') re\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') ret\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2220,"ts":1714633366.148,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') ret\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') retu\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2221,"ts":1714633366.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') retu\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2222,"ts":1714633366.337,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2223,"ts":1714633366.419,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2224,"ts":1714633367.135,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2225,"ts":1714633369.718,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2226,"ts":1714633369.969,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2227,"ts":1714633370.35,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${nod\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2228,"ts":1714633370.417,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${nod\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2229,"ts":1714633370.469,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2230,"ts":1714633370.68,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2231,"ts":1714633370.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2232,"ts":1714633372.376,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2233,"ts":1714633372.658,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2234,"ts":1714633374.205,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]})\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2235,"ts":1714633374.754,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]})\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2236,"ts":1714633374.919,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) =\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2237,"ts":1714633375.026,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) =\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) =>\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2238,"ts":1714633375.805,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) =>\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) => \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2239,"ts":1714633375.964,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) => \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) => $\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2240,"ts":1714633377.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) => $\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2241,"ts":1714633377.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${node[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2242,"ts":1714633381.448,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sannode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2243,"ts":1714633381.485,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sannode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${santnode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2244,"ts":1714633381.705,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${santnode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${santinode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2245,"ts":1714633381.837,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${santinode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${santnode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2246,"ts":1714633382.089,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${santnode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sannode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2247,"ts":1714633382.221,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sannode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${saninode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2248,"ts":1714633382.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${saninode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitnode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2249,"ts":1714633382.55,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitnode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitinode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2250,"ts":1714633382.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitinode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitiznode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2251,"ts":1714633382.784,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitiznode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitizenode[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2252,"ts":1714633382.949,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitizenode[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0]}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2253,"ts":1714633383.124,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0]}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2254,"ts":1714633384.681,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2255,"ts":1714633389.992,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${com\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2256,"ts":1714633390.158,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${com\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${comp\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2257,"ts":1714633390.198,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${comp\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compi\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2258,"ts":1714633390.302,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compi\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compil\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2259,"ts":1714633390.425,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compil\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2260,"ts":1714633390.585,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2261,"ts":1714633390.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2262,"ts":1714633392.145,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2263,"ts":1714633392.297,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2264,"ts":1714633392.483,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2265,"ts":1714633392.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2266,"ts":1714633392.841,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2267,"ts":1714633393.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2268,"ts":1714633393.828,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2269,"ts":1714633394.514,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2270,"ts":1714633395.744,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      re\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2271,"ts":1714633402.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      re\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      ret\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2272,"ts":1714633402.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      ret\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      retur\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2273,"ts":1714633402.924,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      retur\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2274,"ts":1714633403.134,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2275,"ts":1714633403.801,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2276,"ts":1714633406.664,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$a\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2277,"ts":1714633408.086,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$a\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2278,"ts":1714633408.294,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2279,"ts":1714633408.656,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg =\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2280,"ts":1714633408.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg =\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg =>\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2281,"ts":1714633409.212,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg =>\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2282,"ts":1714633409.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2283,"ts":1714633414.429,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${}\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2284,"ts":1714633414.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${}\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2285,"ts":1714633415.362,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${om}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2286,"ts":1714633418.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${om}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${o}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2287,"ts":1714633418.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${o}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2288,"ts":1714633418.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${co}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2289,"ts":1714633418.819,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${co}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${com}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2290,"ts":1714633418.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${com}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${comb}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2291,"ts":1714633419.012,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${comb}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${combin}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2292,"ts":1714633419.193,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${combin}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${combi}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2293,"ts":1714633419.593,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${combi}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${comb}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2294,"ts":1714633419.75,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${comb}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${com}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2295,"ts":1714633419.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${com}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${comp}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2296,"ts":1714633420.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${comp}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compi}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2297,"ts":1714633420.382,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compi}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compile}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2298,"ts":1714633420.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compile}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compileP}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2299,"ts":1714633421.162,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compileP}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2300,"ts":1714633421.377,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2301,"ts":1714633421.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(no}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2302,"ts":1714633426.736,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(no}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2303,"ts":1714633426.912,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2304,"ts":1714633427.068,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0]}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2305,"ts":1714633427.311,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0]}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0],}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2306,"ts":1714633427.686,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0],}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2307,"ts":1714633427.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], no}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2308,"ts":1714633428.021,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], no}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], node}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2309,"ts":1714633428.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], node}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], nod}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2310,"ts":1714633428.616,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], nod}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], no}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2311,"ts":1714633428.812,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], no}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], n}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2312,"ts":1714633428.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], n}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2313,"ts":1714633429.124,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], om}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2314,"ts":1714633430.56,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], om}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], omp}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2315,"ts":1714633430.589,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], omp}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], om}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2316,"ts":1714633430.924,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], om}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], o}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2317,"ts":1714633431.087,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], o}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], }`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2318,"ts":1714633431.724,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], }`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], co}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2319,"ts":1714633431.951,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], co}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], com}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2320,"ts":1714633432.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], com}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], comp}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2321,"ts":1714633432.355,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], comp}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compil}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2322,"ts":1714633432.583,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compil}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2323,"ts":1714633433.138,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2324,"ts":1714633433.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(no}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2325,"ts":1714633433.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(no}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2326,"ts":1714633433.603,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2327,"ts":1714633433.822,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2328,"ts":1714633433.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2329,"ts":1714633434.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1])}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2330,"ts":1714633434.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1])}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2331,"ts":1714633434.514,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2332,"ts":1714633439.595,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2333,"ts":1714633440.447,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    ca\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2334,"ts":1714633441.479,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    ca\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    cas\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2335,"ts":1714633441.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    cas\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2336,"ts":1714633441.792,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case '\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2337,"ts":1714633441.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case '\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'e\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2338,"ts":1714633442.249,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'e\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'ea\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2339,"ts":1714633442.432,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'ea\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eap\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2340,"ts":1714633442.527,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eap\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2341,"ts":1714633442.676,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2342,"ts":1714633442.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2343,"ts":1714633443.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2344,"ts":1714633443.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2345,"ts":1714633444.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      re\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2346,"ts":1714633444.484,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      re\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      ret\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2347,"ts":1714633444.754,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      ret\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      retr\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2348,"ts":1714633444.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      retr\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      ret\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2349,"ts":1714633445.294,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      ret\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      retur\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2350,"ts":1714633445.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      retur\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2351,"ts":1714633445.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2352,"ts":1714633445.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2353,"ts":1714633447.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2354,"ts":1714633452.263,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `($\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2355,"ts":1714633452.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `($\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2356,"ts":1714633452.634,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2357,"ts":1714633454.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${comp\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2358,"ts":1714633454.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${comp\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compil\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2359,"ts":1714633454.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compil\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2360,"ts":1714633455.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2361,"ts":1714633455.706,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2362,"ts":1714633456.001,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2363,"ts":1714633456.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2364,"ts":1714633456.262,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2365,"ts":1714633456.543,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2366,"ts":1714633456.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])}\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2367,"ts":1714633457.686,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])}\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2368,"ts":1714633458.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2369,"ts":1714633458.766,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2370,"ts":1714633459.073,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${co\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2371,"ts":1714633460.299,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${co\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${com\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2372,"ts":1714633460.382,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${com\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${comp\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2373,"ts":1714633460.446,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${comp\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compi\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2374,"ts":1714633460.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compi\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compil\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2375,"ts":1714633460.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compil\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2376,"ts":1714633460.726,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2377,"ts":1714633461,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2378,"ts":1714633461.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2379,"ts":1714633461.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2380,"ts":1714633461.51,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2381,"ts":1714633461.659,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2382,"ts":1714633461.762,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2383,"ts":1714633462.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])}\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2384,"ts":1714633463.094,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])}\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2385,"ts":1714633463.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2386,"ts":1714633464.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2387,"ts":1714633466.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2388,"ts":1714633466.837,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2389,"ts":1714633467.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    cas\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2390,"ts":1714633467.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    cas\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2391,"ts":1714633467.854,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2392,"ts":1714633467.944,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case '\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2393,"ts":1714633468.145,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case '\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'e\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2394,"ts":1714633468.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'e\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'el\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2395,"ts":1714633468.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'el\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'ele\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2396,"ts":1714633468.736,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'ele\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2397,"ts":1714633468.874,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2398,"ts":1714633469.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2399,"ts":1714633469.311,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2400,"ts":1714633469.678,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2401,"ts":1714633471.563,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], , compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2402,"ts":1714633493.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], , compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], ', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2403,"ts":1714633493.49,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], ', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$, compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2404,"ts":1714633493.784,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$, compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$a, compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2405,"ts":1714633494.019,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$a, compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg, compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2406,"ts":1714633494.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg, compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2407,"ts":1714633494.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      re\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2408,"ts":1714633502.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      re\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      ret\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2409,"ts":1714633503.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      ret\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      retu\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2410,"ts":1714633503.452,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      retu\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2411,"ts":1714633503.635,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2412,"ts":1714633504.099,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2413,"ts":1714633504.381,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return ${c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2414,"ts":1714633505.028,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return ${c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return ${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2415,"ts":1714633505.388,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return ${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return $\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2416,"ts":1714633505.526,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return $\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2417,"ts":1714633505.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2418,"ts":1714633505.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return com\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2419,"ts":1714633505.993,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return com\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compi\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2420,"ts":1714633506.157,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compi\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compil\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2421,"ts":1714633506.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compil\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compile\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2422,"ts":1714633506.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compile\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compileP\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2423,"ts":1714633506.563,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compileP\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePat\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2424,"ts":1714633506.782,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePat\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2425,"ts":1714633506.913,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2426,"ts":1714633507.121,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2427,"ts":1714633508.296,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2428,"ts":1714633508.477,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2429,"ts":1714633508.644,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2430,"ts":1714633508.913,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2431,"ts":1714633509.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0],\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2432,"ts":1714633509.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0],\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2433,"ts":1714633509.543,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], co\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2434,"ts":1714633509.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], co\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], com\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2435,"ts":1714633509.824,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], com\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], comp\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2436,"ts":1714633509.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], comp\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compil\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2437,"ts":1714633510.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compil\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2438,"ts":1714633510.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2439,"ts":1714633510.328,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2440,"ts":1714633510.542,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2441,"ts":1714633510.602,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2442,"ts":1714633510.825,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2443,"ts":1714633510.968,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2444,"ts":1714633511.074,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1])\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2445,"ts":1714633511.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1])\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]),\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2446,"ts":1714633511.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]),\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2447,"ts":1714633511.933,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2448,"ts":1714633512.835,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), com\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2449,"ts":1714633512.913,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), com\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), comp\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2450,"ts":1714633512.964,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), comp\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compil\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2451,"ts":1714633513.157,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compil\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2452,"ts":1714633513.322,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2453,"ts":1714633513.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2454,"ts":1714633513.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2455,"ts":1714633513.804,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2456,"ts":1714633514.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2457,"ts":1714633514.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2458,"ts":1714633514.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2])\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2459,"ts":1714633514.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2])\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2460,"ts":1714633514.978,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2461,"ts":1714633517.824,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2462,"ts":1714633518.551,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2463,"ts":1714633519.231,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    cas\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2464,"ts":1714633519.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    cas\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2465,"ts":1714633519.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case '\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2466,"ts":1714633519.829,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case '\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'e\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2467,"ts":1714633519.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'e\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'em\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2468,"ts":1714633520.082,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'em\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'emt\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2469,"ts":1714633520.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'emt\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'em\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2470,"ts":1714633520.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'em\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'emat\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2471,"ts":1714633520.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'emat\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2472,"ts":1714633521.017,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2473,"ts":1714633521.332,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2474,"ts":1714633521.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n    \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2475,"ts":1714633522.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n    \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2476,"ts":1714633522.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${sanitize(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${p(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2477,"ts":1714633557.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${p(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${pa(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2478,"ts":1714633557.52,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${pa(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${pat(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2479,"ts":1714633557.617,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${pat(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patA(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2480,"ts":1714633557.857,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patA(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2481,"ts":1714633558.168,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"idx":566,"type":"start"}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0][0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0][0)}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2482,"ts":1714633560.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0][0)}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0][)}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2483,"ts":1714633560.777,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0][)}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2484,"ts":1714633561.075,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0]}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2485,"ts":1714633562.349,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0]}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2486,"ts":1714633563.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      if (node[0].type === 'pvar') return `(${patArgs(node[0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2487,"ts":1714633568.985,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n      return `$arg => ${compilePat(node[0], '$arg', compile(node[1]))}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2488,"ts":1714633572.346,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"idx":566,"type":"end"}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n    \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2489,"ts":1714633589.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n    \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2490,"ts":1714633589.686,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      re\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2491,"ts":1714633591.622,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      re\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      ret\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2492,"ts":1714633591.825,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      ret\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      retu\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2493,"ts":1714633591.925,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      retu\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      retur\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2494,"ts":1714633592.005,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      retur\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2495,"ts":1714633592.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2496,"ts":1714633592.866,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2497,"ts":1714633594.019,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2498,"ts":1714633594.541,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2499,"ts":1714633594.967,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${pa\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2500,"ts":1714633595.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${pa\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${pat\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2501,"ts":1714633595.981,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${pat\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patA\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2502,"ts":1714633596.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patA\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArg\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2503,"ts":1714633596.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArg\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2504,"ts":1714633596.517,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2505,"ts":1714633596.744,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(no\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2506,"ts":1714633597.025,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(no\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(nod\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2507,"ts":1714633597.074,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(nod\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2508,"ts":1714633597.14,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2509,"ts":1714633597.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2510,"ts":1714633597.729,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2511,"ts":1714633597.997,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2512,"ts":1714633598.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2513,"ts":1714633598.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2514,"ts":1714633598.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2515,"ts":1714633599.816,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])})\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2516,"ts":1714633600.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])})\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2517,"ts":1714633601.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) =\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2518,"ts":1714633601.226,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) =\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2519,"ts":1714633601.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => \n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2520,"ts":1714633601.883,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${co\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2521,"ts":1714633602.901,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${co\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${com\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2522,"ts":1714633602.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${com\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${comp\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2523,"ts":1714633603.046,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${comp\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compil\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2524,"ts":1714633603.182,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compil\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2525,"ts":1714633603.334,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2526,"ts":1714633603.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(no\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2527,"ts":1714633603.715,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(no\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2528,"ts":1714633603.777,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2529,"ts":1714633604.016,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2530,"ts":1714633604.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2531,"ts":1714633604.326,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2532,"ts":1714633605.116,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])}\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2533,"ts":1714633605.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])}\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2534,"ts":1714633607.919,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2535,"ts":1714633610.225,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})($\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2536,"ts":1714633610.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})($\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2537,"ts":1714633610.553,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${om\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2538,"ts":1714633611.551,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${om\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${omp\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2539,"ts":1714633611.611,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${omp\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${om\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2540,"ts":1714633611.941,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${om\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${o\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2541,"ts":1714633612.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${o\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2542,"ts":1714633612.3,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${c\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2543,"ts":1714633612.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${c\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${com\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2544,"ts":1714633612.543,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${com\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${comp\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2545,"ts":1714633612.608,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${comp\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compil\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2546,"ts":1714633612.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compil\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2547,"ts":1714633612.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2548,"ts":1714633613.085,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(no\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2549,"ts":1714633613.273,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(no\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2550,"ts":1714633613.339,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2551,"ts":1714633613.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2552,"ts":1714633613.769,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2553,"ts":1714633613.887,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1]\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2554,"ts":1714633614.161,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])}\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2555,"ts":1714633615.022,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])}\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2556,"ts":1714633615.643,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2557,"ts":1714633615.982,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n      return compilePath(node[0], compile(node[1]), compile(node[2]))\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2558,"ts":1714633617.147,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      c\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2559,"ts":1714633631.906,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      c\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      ca\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2560,"ts":1714633632.185,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      ca\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      cas\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2561,"ts":1714633632.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      cas\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2562,"ts":1714633632.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2563,"ts":1714633633.492,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case '\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2564,"ts":1714633633.788,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case '\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'e\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2565,"ts":1714633634.545,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'e\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'em\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2566,"ts":1714633635.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'em\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'emat\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2567,"ts":1714633635.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'emat\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematc\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2568,"ts":1714633636.415,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematc\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2569,"ts":1714633636.753,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2570,"ts":1714633637.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch'p\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2571,"ts":1714633638.144,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch'p\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch'\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2572,"ts":1714633638.671,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch'\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch':\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2573,"ts":1714633639.217,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch':\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2574,"ts":1714633639.455,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2575,"ts":1714633640.714,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2576,"ts":1714633645.615,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      re\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2577,"ts":1714633671.755,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      re\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      ret\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2578,"ts":1714633671.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      ret\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      retu\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2579,"ts":1714633672.045,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      retu\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      retur\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2580,"ts":1714633672.144,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      retur\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2581,"ts":1714633672.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2582,"ts":1714633672.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2583,"ts":1714633674.085,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `((\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2584,"ts":1714633675.123,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `((\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2585,"ts":1714633677.529,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($t\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2586,"ts":1714633677.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($t\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($ta\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2587,"ts":1714633678.442,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($ta\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($targ\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2588,"ts":1714633678.625,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($targ\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2589,"ts":1714633678.778,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target)\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2590,"ts":1714633680.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target)\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2591,"ts":1714633680.885,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) =\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2592,"ts":1714633681.04,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) =\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) =>\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2593,"ts":1714633681.442,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) =>\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => \n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2594,"ts":1714633682.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => \n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2595,"ts":1714633684.059,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {}\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2596,"ts":1714633686.125,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {}\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2597,"ts":1714633688.245,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2598,"ts":1714633688.798,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})($\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2599,"ts":1714633688.979,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})($\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2600,"ts":1714633689.095,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${co\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2601,"ts":1714633689.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${co\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${com\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2602,"ts":1714633689.73,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${com\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compi\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2603,"ts":1714633689.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compi\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compil\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2604,"ts":1714633690.006,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compil\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2605,"ts":1714633690.197,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2606,"ts":1714633690.347,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(no\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2607,"ts":1714633690.561,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(no\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(nod\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2608,"ts":1714633690.632,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(nod\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2609,"ts":1714633690.688,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2610,"ts":1714633690.869,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0]\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2611,"ts":1714633691.086,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0]\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2612,"ts":1714633691.488,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])}\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2613,"ts":1714633691.893,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])}\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])})\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2614,"ts":1714633693.784,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])})\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2615,"ts":1714633694.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2616,"ts":1714633699.868,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2617,"ts":1714633699.932,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${un}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2618,"ts":1714633700.756,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${un}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwr}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2619,"ts":1714633700.912,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwr}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwra}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2620,"ts":1714633701.092,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwra}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrap}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2621,"ts":1714633701.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrap}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapA}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2622,"ts":1714633701.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapA}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapAr}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2623,"ts":1714633702.047,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapAr}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArra}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2624,"ts":1714633702.192,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArra}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2625,"ts":1714633702.365,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2626,"ts":1714633703.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(no}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2627,"ts":1714633704.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(no}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(nod}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2628,"ts":1714633704.944,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(nod}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2629,"ts":1714633705.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2630,"ts":1714633705.21,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[]}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2631,"ts":1714633705.942,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[]}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2632,"ts":1714633706.25,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2633,"ts":1714633706.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2634,"ts":1714633706.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1])}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2635,"ts":1714633706.715,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1])}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2636,"ts":1714633707.405,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).ma}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2637,"ts":1714633707.622,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).ma}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2638,"ts":1714633707.806,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2639,"ts":1714633707.994,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map((}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2640,"ts":1714633710.99,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map((}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2641,"ts":1714633711.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2642,"ts":1714633711.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0:}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2643,"ts":1714633712.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0:}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: }})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2644,"ts":1714633712.429,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: }})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: p}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2645,"ts":1714633712.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: p}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2646,"ts":1714633712.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, }})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2647,"ts":1714633712.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, }})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2648,"ts":1714633713.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: }})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2649,"ts":1714633713.441,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: }})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: b}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2650,"ts":1714633713.666,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: b}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: bo}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2651,"ts":1714633713.752,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: bo}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: bod}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2652,"ts":1714633713.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: bod}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2653,"ts":1714633713.919,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body})})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2654,"ts":1714633719.037,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body})})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) })(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2655,"ts":1714633719.21,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) })(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) =})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2656,"ts":1714633719.324,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) =})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) =>})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2657,"ts":1714633719.705,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) =>})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => })(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2658,"ts":1714633719.932,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => })(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => )})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2659,"ts":1714633722.35,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => )})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2660,"ts":1714633722.606,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).j})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2661,"ts":1714633722.8,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).j})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).joi})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2662,"ts":1714633722.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).joi})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2663,"ts":1714633723.143,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join(})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2664,"ts":1714633723.326,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join(})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2665,"ts":1714633723.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2666,"ts":1714633723.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2667,"ts":1714633723.995,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n)})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2668,"ts":1714633724.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n)})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2669,"ts":1714633725.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n'})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2670,"ts":1714633725.272,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n'})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2671,"ts":1714633725.54,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => c).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2672,"ts":1714633729.124,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => c).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => comp).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2673,"ts":1714633729.31,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => comp).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compil).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2674,"ts":1714633729.543,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compil).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compile).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2675,"ts":1714633729.671,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compile).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compileP).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2676,"ts":1714633729.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compileP).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2677,"ts":1714633730.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat().join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2678,"ts":1714633730.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat().join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(p).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2679,"ts":1714633730.987,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(p).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2680,"ts":1714633731.171,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat,).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2681,"ts":1714633731.291,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat,).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2682,"ts":1714633731.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, ').join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2683,"ts":1714633731.509,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, ').join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2684,"ts":1714633731.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$t).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2685,"ts":1714633732.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$t).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$ta).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2686,"ts":1714633732.274,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$ta).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$targ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2687,"ts":1714633732.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$targ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2688,"ts":1714633732.527,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target').join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2689,"ts":1714633732.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target').join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target',).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2690,"ts":1714633732.873,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target',).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2691,"ts":1714633732.988,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', ).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', b).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2692,"ts":1714633733.153,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', b).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', bo).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2693,"ts":1714633733.246,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', bo).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', bod).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2694,"ts":1714633733.342,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', bod).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', body).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2695,"ts":1714633733.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', body).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', body)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2696,"ts":1714633734.709,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', body)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', cobody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2697,"ts":1714633743.099,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', cobody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', combody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2698,"ts":1714633743.207,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', combody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compbody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2699,"ts":1714633743.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compbody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compilbody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2700,"ts":1714633743.461,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compilbody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compilebody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2701,"ts":1714633743.645,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compilebody)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2702,"ts":1714633743.852,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body_)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2703,"ts":1714633745.549,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body_)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2704,"ts":1714633746.051,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body)).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2705,"ts":1714633746.249,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n} ","loc":566}},"nsMap":{},"nsPrev":{},"id":2706,"ts":1714633749.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n} ","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2707,"ts":1714633749.931,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"idx":568,"type":"rich-text","sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"568":null},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","loc":568,"raw":""}},"nsMap":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,567,569,456],"id":36},"569":{"type":"normal","top":568,"children":[],"id":569}},"nsPrev":{"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,567,456],"id":36},"569":null},"id":2708,"ts":1714633750.35,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"idx":568,"type":"rich-text","sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","loc":568,"raw":""}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"c","loc":568}},"nsMap":{},"nsPrev":{},"id":2709,"ts":1714633760.736,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"c","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"com","loc":568}},"nsMap":{},"nsPrev":{},"id":2710,"ts":1714633760.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"com","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"comp","loc":568}},"nsMap":{},"nsPrev":{},"id":2711,"ts":1714633760.858,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"comp","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compil","loc":568}},"nsMap":{},"nsPrev":{},"id":2712,"ts":1714633761.069,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compil","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compile","loc":568}},"nsMap":{},"nsPrev":{},"id":2713,"ts":1714633761.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compile","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compileP","loc":568}},"nsMap":{},"nsPrev":{},"id":2714,"ts":1714633762.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compileP","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePt","loc":568}},"nsMap":{},"nsPrev":{},"id":2715,"ts":1714633763.526,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePt","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePt ","loc":568}},"nsMap":{},"nsPrev":{},"id":2716,"ts":1714633764.294,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePt ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePt =","loc":568}},"nsMap":{},"nsPrev":{},"id":2717,"ts":1714633764.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"idx":286,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"idx":286,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"287":{"type":"normal","top":286,"children":[],"id":287,"plugin":{"id":"fixture","options":null}}},"nsPrev":{"287":{"type":"normal","top":286,"children":[],"id":287}},"id":2718,"ts":1714633773.855,"libraryRoot":""},{"id":2719,"meta":{},"metaPrev":{},"revert":2718,"prev":{},"map":{},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"idx":286,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":287,"idx":36},{"type":"ns-top","idx":287},{"idx":286,"type":"start"}]}],"nsMap":{"287":{"type":"normal","top":286,"children":[],"id":287}},"nsPrev":{"287":{"type":"normal","top":286,"children":[],"id":287,"plugin":{"id":"fixture","options":null}}},"ts":1714633777.538,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePt =","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat =","loc":568}},"nsMap":{},"nsPrev":{},"id":2720,"ts":1714633786.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat =","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = ","loc":568}},"nsMap":{},"nsPrev":{},"id":2721,"ts":1714633791.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = no","loc":568}},"nsMap":{},"nsPrev":{},"id":2722,"ts":1714633794.184,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = no","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = nod","loc":568}},"nsMap":{},"nsPrev":{},"id":2723,"ts":1714633794.241,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = nod","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node","loc":568}},"nsMap":{},"nsPrev":{},"id":2724,"ts":1714633794.305,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node ","loc":568}},"nsMap":{},"nsPrev":{},"id":2725,"ts":1714633794.378,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node =","loc":568}},"nsMap":{},"nsPrev":{},"id":2726,"ts":1714633794.92,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node =","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node =>","loc":568}},"nsMap":{},"nsPrev":{},"id":2727,"ts":1714633795.285,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node =>","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => ","loc":568}},"nsMap":{},"nsPrev":{},"id":2728,"ts":1714633795.417,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {","loc":568}},"nsMap":{},"nsPrev":{},"id":2729,"ts":1714633795.8,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  ","loc":568}},"nsMap":{},"nsPrev":{},"id":2730,"ts":1714633796.045,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  s","loc":568}},"nsMap":{},"nsPrev":{},"id":2731,"ts":1714633796.302,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  s","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  sw","loc":568}},"nsMap":{},"nsPrev":{},"id":2732,"ts":1714633796.479,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  sw","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  swit","loc":568}},"nsMap":{},"nsPrev":{},"id":2733,"ts":1714633796.598,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  swit","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switc","loc":568}},"nsMap":{},"nsPrev":{},"id":2734,"ts":1714633796.874,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switc","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switc ","loc":568}},"nsMap":{},"nsPrev":{},"id":2735,"ts":1714633797.074,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switc ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switc","loc":568}},"nsMap":{},"nsPrev":{},"id":2736,"ts":1714633797.378,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switc","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch","loc":568}},"nsMap":{},"nsPrev":{},"id":2737,"ts":1714633797.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch ","loc":568}},"nsMap":{},"nsPrev":{},"id":2738,"ts":1714633797.664,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (","loc":568}},"nsMap":{},"nsPrev":{},"id":2739,"ts":1714633797.763,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (no","loc":568}},"nsMap":{},"nsPrev":{},"id":2740,"ts":1714633797.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (no","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (nod","loc":568}},"nsMap":{},"nsPrev":{},"id":2741,"ts":1714633798.006,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (nod","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node","loc":568}},"nsMap":{},"nsPrev":{},"id":2742,"ts":1714633798.078,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.","loc":568}},"nsMap":{},"nsPrev":{},"id":2743,"ts":1714633798.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.t","loc":568}},"nsMap":{},"nsPrev":{},"id":2744,"ts":1714633798.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.t","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.typ","loc":568}},"nsMap":{},"nsPrev":{},"id":2745,"ts":1714633798.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.typ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type","loc":568}},"nsMap":{},"nsPrev":{},"id":2746,"ts":1714633798.498,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type)","loc":568}},"nsMap":{},"nsPrev":{},"id":2747,"ts":1714633798.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type)","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) ","loc":568}},"nsMap":{},"nsPrev":{},"id":2748,"ts":1714633798.961,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {","loc":568}},"nsMap":{},"nsPrev":{},"id":2749,"ts":1714633799.089,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n    ","loc":568}},"nsMap":{},"nsPrev":{},"id":2750,"ts":1714633799.355,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n    ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  ","loc":568}},"nsMap":{},"nsPrev":{},"id":2751,"ts":1714633800.332,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }","loc":568}},"nsMap":{},"nsPrev":{},"id":2752,"ts":1714633800.474,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n  ","loc":568}},"nsMap":{},"nsPrev":{},"id":2753,"ts":1714633800.85,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n  ","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n","loc":568}},"nsMap":{},"nsPrev":{},"id":2754,"ts":1714633801.168,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n\n","loc":568}},"nsMap":{},"nsPrev":{},"id":2755,"ts":1714633802.037,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n\n","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2756,"ts":1714633802.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = node => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2757,"ts":1714633805.98,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2758,"ts":1714633807.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node,  => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2759,"ts":1714633808.095,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node,  => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, t => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2760,"ts":1714633808.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, t => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, ta => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2761,"ts":1714633808.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, ta => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tagt => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2762,"ts":1714633808.55,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tagt => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tagte => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2763,"ts":1714633808.617,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tagte => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tagt => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2764,"ts":1714633808.913,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tagt => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tag => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2765,"ts":1714633809.21,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tag => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tar => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2766,"ts":1714633809.397,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, tar => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, targ => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2767,"ts":1714633809.455,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, targ => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2768,"ts":1714633809.613,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2769,"ts":1714633809.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target,  => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2770,"ts":1714633809.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target,  => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, b => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2771,"ts":1714633810.046,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, b => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, bo => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2772,"ts":1714633810.193,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, bo => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, boy => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2773,"ts":1714633810.359,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, boy => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, bo => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2774,"ts":1714633810.698,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, bo => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2775,"ts":1714633810.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2776,"ts":1714633811.159,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2777,"ts":1714633812.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    ca\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2778,"ts":1714633812.852,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    ca\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    cas\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2779,"ts":1714633812.909,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    cas\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2780,"ts":1714633813.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2781,"ts":1714633813.23,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'p\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2782,"ts":1714633814.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'p\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pan\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2783,"ts":1714633815.082,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pan\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2784,"ts":1714633815.154,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany'\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2785,"ts":1714633815.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany'\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2786,"ts":1714633816.335,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2787,"ts":1714633867.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2788,"ts":1714633868.621,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2789,"ts":1714633903.21,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'recompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2790,"ts":1714633903.399,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'recompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'retucompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2791,"ts":1714633903.664,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'retucompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'returncompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2792,"ts":1714633903.907,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'returncompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return' compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2793,"ts":1714633904.204,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return' compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return'compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2794,"ts":1714633904.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return'compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'returncompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2795,"ts":1714633904.823,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'returncompile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2796,"ts":1714633904.956,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return ' compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2797,"ts":1714633905.086,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"type":"rich-text","idx":566,"sel":null}]}],"prev":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return ' compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"meta":{},"metaPrev":{},"map":{"566":{"type":"raw-code","lang":"javascript","raw":"compile = node => {\n  switch (node.type) {\n    case 'eprim': return '' + node[0][0]\n    case 'estr': return `\\`${unslash(node[0])}${unwrapArray(node[1]).map(\n      ({0: expr, 1: suf}) => `\\${${compile(expr)}}${unslash(suf)}\\``\n    ).join('\\n')}`\n    case 'evar': return sanitize(node[0])\n    case 'elambda':\n      return `(${patArgs(node[0])}) => ${compile(node[1])}`\n    case 'eapp':\n      return `(${compile(node[0])})(${compile(node[1])})`\n    case 'elet':\n      return `((${patArgs(node[0])}) => ${compile(node[2])})(${compile(node[1])})`\n    case 'ematch':\n      return `(($target) => {${unwrapArray(node[1]).map(({0: pat, 1: body}) => compilePat(pat, '$target', 'return ' + compile(body))).join('\\n')})(${compile(node[0])})`\n  }\n}","loc":566}},"nsMap":{},"nsPrev":{},"id":2798,"ts":1714633905.339,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      er\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2799,"ts":1714633907.37,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      er\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      e\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2800,"ts":1714633908.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      e\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2801,"ts":1714633908.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      re\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2802,"ts":1714633908.995,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      re\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      ret\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2803,"ts":1714633909.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      ret\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      retur\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2804,"ts":1714633909.319,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      retur\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2805,"ts":1714633909.449,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2806,"ts":1714633909.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return b\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2807,"ts":1714633909.713,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return b\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return bod\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2808,"ts":1714633909.814,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return bod\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2809,"ts":1714633910.017,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2810,"ts":1714633910.265,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2811,"ts":1714633910.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    ca\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2812,"ts":1714633910.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    ca\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    cas\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2813,"ts":1714633910.919,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    cas\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2814,"ts":1714633911.159,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2815,"ts":1714633911.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'p\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2816,"ts":1714633911.89,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'p\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pp\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2817,"ts":1714633912.058,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pp\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'ppri\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2818,"ts":1714633912.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'ppri\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pprin\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2819,"ts":1714633912.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pprin\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pp\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2820,"ts":1714633914.085,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pp\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'p\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2821,"ts":1714633914.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'p\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2822,"ts":1714633914.525,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'var\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2823,"ts":1714633914.734,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'var\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'va\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2824,"ts":1714633915.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'va\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'v\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2825,"ts":1714633915.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'v\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2826,"ts":1714633916.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'p\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2827,"ts":1714633916.458,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'p\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2828,"ts":1714633916.666,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar'\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2829,"ts":1714633916.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar'\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2830,"ts":1714633917.137,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2831,"ts":1714633917.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2832,"ts":1714633918.311,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      re\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2833,"ts":1714633920.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      re\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      ret\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2834,"ts":1714633920.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      ret\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      retur\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2835,"ts":1714633920.44,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      retur\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2836,"ts":1714633920.699,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2837,"ts":1714633920.802,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2838,"ts":1714633920.997,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `le\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2839,"ts":1714633932.358,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `le\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2840,"ts":1714633932.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2841,"ts":1714633932.518,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2842,"ts":1714633932.824,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${no\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2843,"ts":1714633934.952,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${no\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${node\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2844,"ts":1714633935.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${node\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${node[\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2845,"ts":1714633935.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${node[\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${node[0]\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2846,"ts":1714633936.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${node[0]\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${no\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2847,"ts":1714633937.232,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${no\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${n\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2848,"ts":1714633937.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${n\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2849,"ts":1714633937.635,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sa\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2850,"ts":1714633937.788,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sa\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${san\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2851,"ts":1714633937.887,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${san\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sani\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2852,"ts":1714633939.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sani\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanit\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2853,"ts":1714633939.525,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanit\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${saniti\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2854,"ts":1714633939.664,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${saniti\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitiz\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2855,"ts":1714633939.792,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitiz\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2856,"ts":1714633939.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2857,"ts":1714633940.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(n\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2858,"ts":1714633941.023,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(n\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(na\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2859,"ts":1714633941.462,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(na\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(n\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2860,"ts":1714633942.308,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(n\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(no\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2861,"ts":1714633942.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(no\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2862,"ts":1714633942.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2863,"ts":1714633946.732,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0]\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2864,"ts":1714633946.999,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0]\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2865,"ts":1714633947.535,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2866,"ts":1714633948.245,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2867,"ts":1714633949.657,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} =\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2868,"ts":1714633949.787,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} =\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2869,"ts":1714633949.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2870,"ts":1714633952.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${t\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2871,"ts":1714633952.937,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${t\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${ta\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2872,"ts":1714633953.095,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${ta\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${tar\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2873,"ts":1714633953.256,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${tar\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2874,"ts":1714633953.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2875,"ts":1714633954.069,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2876,"ts":1714633954.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2877,"ts":1714633955.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2878,"ts":1714633955.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n$\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2879,"ts":1714633956.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n$\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n$P\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2880,"ts":1714633956.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n$P\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n$\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2881,"ts":1714633957.318,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n$\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2882,"ts":1714633957.532,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${b\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2883,"ts":1714633957.729,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${b\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${bo\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2884,"ts":1714633957.825,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${bo\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${bod\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2885,"ts":1714633957.918,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${bod\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2886,"ts":1714633958.018,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2887,"ts":1714633959.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2888,"ts":1714633959.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2889,"ts":1714633960.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2890,"ts":1714633961.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    ca\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2891,"ts":1714633962.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    ca\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    cas\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2892,"ts":1714633962.315,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    cas\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    case \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2893,"ts":1714633962.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    case \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2894,"ts":1714633962.786,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `let ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `co ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2895,"ts":1714633966.786,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `co ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `con ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2896,"ts":1714633966.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `con ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `const ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2897,"ts":1714633966.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `const ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2898,"ts":1714633968.637,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"idx":568,"type":"end"}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}`\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2899,"ts":1714633971.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'p\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2900,"ts":1714633974.739,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'p\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pp\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2901,"ts":1714633974.94,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pp\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'ppri\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2902,"ts":1714633975.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'ppri\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2903,"ts":1714633975.291,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim'\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2904,"ts":1714633975.615,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim'\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2905,"ts":1714633975.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2906,"ts":1714633976.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2907,"ts":1714633976.707,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      re\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2908,"ts":1714633977,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      re\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      retu\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2909,"ts":1714633977.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      retu\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2910,"ts":1714633977.429,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2911,"ts":1714633977.632,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2912,"ts":1714633978.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `i\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2913,"ts":1714633978.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `i\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2914,"ts":1714633978.597,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2915,"ts":1714633978.706,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if ($\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2916,"ts":1714633978.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if ($\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2917,"ts":1714633980.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${t\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2918,"ts":1714633981.226,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${t\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${ta\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2919,"ts":1714633981.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${ta\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${targ\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2920,"ts":1714633981.559,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${targ\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2921,"ts":1714633981.736,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2922,"ts":1714633982.45,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target})\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2923,"ts":1714633982.976,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target})\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2924,"ts":1714633983.51,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2925,"ts":1714633983.641,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} =\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2926,"ts":1714633983.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} =\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} ==\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2927,"ts":1714633983.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} ==\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} ===\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2928,"ts":1714633984.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} ===\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2929,"ts":1714633984.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2930,"ts":1714633984.587,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${no\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2931,"ts":1714633986.52,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${no\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${nod\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2932,"ts":1714633986.589,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${nod\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2933,"ts":1714633986.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2934,"ts":1714633986.958,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0]\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2935,"ts":1714633988.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0]\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2936,"ts":1714633989.049,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2937,"ts":1714633989.285,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2938,"ts":1714633990.094,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]})\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2939,"ts":1714633991.081,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]})\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2940,"ts":1714633993.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2941,"ts":1714633993.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2942,"ts":1714633995.755,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${b\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2943,"ts":1714633996.153,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${b\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bdy\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2944,"ts":1714633996.35,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bdy\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bd\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2945,"ts":1714633996.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bd\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${b\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2946,"ts":1714633997.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${b\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bo\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2947,"ts":1714633997.322,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bo\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bod\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2948,"ts":1714633997.407,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${bod\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2949,"ts":1714633997.518,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2950,"ts":1714633997.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2951,"ts":1714633999.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2952,"ts":1714633999.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2953,"ts":1714634000.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2954,"ts":1714634000.857,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    ca\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2955,"ts":1714634001.409,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    ca\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    cas\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2956,"ts":1714634001.497,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    cas\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2957,"ts":1714634001.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2958,"ts":1714634001.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case '\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2959,"ts":1714634003.633,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case '\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'p\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2960,"ts":1714634003.928,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'p\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pc\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2961,"ts":1714634004.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pc\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pco\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2962,"ts":1714634004.31,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pco\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2963,"ts":1714634004.351,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon'\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2964,"ts":1714634005.241,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon'\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2965,"ts":1714634005.458,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n    \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2966,"ts":1714634005.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n    \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2967,"ts":1714634006.342,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      c\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2968,"ts":1714634015.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      c\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      con\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2969,"ts":1714634015.347,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      con\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      cons\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2970,"ts":1714634015.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      cons\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2971,"ts":1714634015.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2972,"ts":1714634015.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const a\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2973,"ts":1714634016.018,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const a\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const arg\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2974,"ts":1714634016.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const arg\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2975,"ts":1714634016.223,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2976,"ts":1714634016.309,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args =\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2977,"ts":1714634016.393,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args =\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = \n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2978,"ts":1714634016.591,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = \n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = un\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2979,"ts":1714634016.749,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = un\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unw\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2980,"ts":1714634016.79,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unw\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwra\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2981,"ts":1714634016.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwra\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrap\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2982,"ts":1714634017.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrap\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapa\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2983,"ts":1714634017.322,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapa\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrap\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2984,"ts":1714634017.848,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrap\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapA\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2985,"ts":1714634018.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapA\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapAr\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2986,"ts":1714634018.221,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapAr\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArra\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2987,"ts":1714634018.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArra\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2988,"ts":1714634018.612,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2989,"ts":1714634019.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(no\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2990,"ts":1714634020.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(no\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2991,"ts":1714634020.287,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2992,"ts":1714634020.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[1\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2993,"ts":1714634020.727,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[1\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[1]\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2994,"ts":1714634020.846,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"type":"rich-text","idx":568,"sel":null}]}],"prev":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[1]\n  }\n}","loc":568}},"meta":{},"metaPrev":{},"map":{"568":{"type":"raw-code","lang":"javascript","raw":"compilePat = (node, target, body) => {\n  switch (node.type) {\n    case 'pany':\n      return body\n    case 'pvar':\n      return `{const ${sanitize(node[0])} = ${target};\\n${body}}`\n    case 'pprim':\n      return `if (${target} === ${node[0][0]}) {${body}}`\n    case 'pcon':\n      const args = unwrapArray(node[1])\n  }\n}","loc":568}},"nsMap":{},"nsPrev":{},"id":2995,"ts":1714634021.116,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":11,"idx":0},{"type":"ns","idx":11},{"type":"ns-top","idx":569},{"type":"start","idx":568}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":569,"idx":36},{"type":"ns-top","idx":569},{"idx":568,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"11":{"type":"normal","top":10,"children":[569],"id":11},"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,567,456],"id":36}},"nsPrev":{"11":{"type":"normal","top":10,"children":[],"id":11},"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,567,569,456],"id":36}},"id":2996,"ts":1714660576.362,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":11,"idx":0},{"type":"ns","idx":11,"child":569},{"type":"ns-top","idx":567},{"type":"start","idx":566}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns","child":567,"idx":36},{"type":"ns-top","idx":567},{"idx":566,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"11":{"type":"normal","top":10,"children":[567,569],"id":11},"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456],"id":36}},"nsPrev":{"11":{"type":"normal","top":10,"children":[569],"id":11},"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,567,456],"id":36}},"id":2997,"ts":1714660579.891,"libraryRoot":""}],"clipboard":[],"hover":[],"regs":{},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":11,"idx":0},{"type":"ns","idx":11,"child":569},{"type":"ns-top","idx":567},{"type":"start","idx":566}]}],"cards":[{"path":[],"top":0}],"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,214,212,36,11,9],"type":"normal"},"1":{"id":1,"top":0,"children":[],"type":"normal"},"3":{"type":"normal","top":2,"children":[],"id":3},"9":{"type":"normal","top":8,"children":[],"id":9},"11":{"type":"normal","top":10,"children":[567,569],"id":11},"22":{"type":"normal","top":21,"children":[],"id":22},"24":{"type":"normal","top":23,"children":[],"id":24},"26":{"type":"normal","top":25,"children":[],"id":26},"28":{"type":"normal","top":27,"children":[],"id":28},"30":{"type":"normal","top":29,"children":[],"id":30},"32":{"type":"normal","top":31,"children":[],"id":32},"34":{"type":"normal","top":33,"children":[],"id":34},"36":{"type":"normal","top":35,"children":[421,423,22,287,276,370,336,456],"id":36},"43":{"type":"normal","top":42,"children":[],"id":43},"47":{"type":"normal","top":46,"children":[],"id":47},"51":{"type":"normal","top":50,"children":[],"id":51},"58":{"type":"normal","top":57,"children":[],"id":58},"62":{"type":"normal","top":61,"children":[],"id":62},"69":{"type":"normal","top":68,"children":[],"id":69},"71":{"type":"normal","top":70,"children":[],"id":71},"77":{"type":"normal","top":76,"children":[],"id":77},"79":{"type":"normal","top":78,"children":[],"id":79,"plugin":{"id":"fixture","options":null}},"99":{"type":"normal","top":98,"children":[110],"id":99},"110":{"type":"normal","top":109,"children":[],"id":110},"112":{"type":"normal","top":111,"children":[],"id":112},"114":{"type":"normal","top":113,"children":[],"id":114},"138":{"type":"normal","top":137,"children":[],"id":138},"141":{"type":"normal","top":140,"children":[],"id":141},"150":{"type":"normal","top":149,"children":[],"id":150},"189":{"type":"normal","top":188,"children":[],"id":189},"212":{"type":"normal","top":211,"children":[43,216,218,220],"id":212,"collapsed":true},"214":{"type":"normal","top":213,"children":[28,30,26,99,291,293,112,58,71,138,150],"id":214,"collapsed":true},"216":{"type":"normal","top":215,"children":[34,69,24,32,141,62,47,51,114,79],"id":216,"collapsed":true},"218":{"type":"normal","top":217,"id":218,"children":[189,77],"collapsed":true},"220":{"type":"normal","top":219,"children":[222,226,228,248,230],"id":220,"collapsed":true},"222":{"type":"normal","top":221,"children":[],"id":222},"226":{"type":"normal","top":225,"children":[],"id":226},"228":{"type":"normal","top":227,"children":[],"id":228},"230":{"type":"normal","top":229,"children":[],"id":230,"plugin":{"id":"fixture","options":null}},"248":{"type":"normal","top":249,"children":[],"id":248},"276":{"type":"normal","top":275,"children":[],"id":276},"287":{"type":"normal","top":286,"children":[],"id":287},"291":{"type":"normal","top":290,"children":[],"id":291},"293":{"type":"normal","top":292,"children":[],"id":293},"336":{"type":"normal","top":335,"children":[],"id":336},"370":{"type":"normal","top":369,"children":[],"id":370,"plugin":{"id":"fixture","options":null}},"421":{"type":"normal","top":420,"id":421,"children":[]},"423":{"type":"normal","top":422,"children":[],"id":423},"456":{"type":"normal","top":455,"children":[],"id":456,"plugin":{"id":"fixture","options":null}},"567":{"type":"normal","top":566,"children":[],"id":567},"569":{"type":"normal","top":568,"children":[],"id":569}},"highlight":[],"evaluator":":js:"}