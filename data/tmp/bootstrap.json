{"map":{"0":{"type":"rich-text","contents":[{"id":"8fd26af0-7082-4132-96f0-eb9bd9a651aa","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"Bootstrap (js) parser + compiler","styles":{}}],"children":[]}],"loc":0},"2":{"type":"rich-text","contents":[{"id":"68285dbb-f6ad-428e-a83c-89f93b2af3cf","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Parser consumes (Node)s and produces (stmt /  expr)","styles":{}}],"children":[]}],"loc":2},"8":{"type":"blank","loc":8},"10":{"type":"blank","loc":10},"17":{"type":"blank","loc":17},"21":{"type":"blank","loc":21},"23":{"type":"raw-code","lang":"javascript","raw":"c = {\n  prim: (prim, loc=-1) => ({type: 'eprim', 0: prim, 1: loc}),\n  int: (v, loc=-1) => ({type: 'pint', 0: v, 1: loc}),\n  bool: (v, loc=-1) => ({type: 'pbool', 0: v, 1: loc}),\n  evar: (text, loc=-1) => ({type: 'evar', 0: text, 1: loc}),\n  app: (target, arg, loc=-1) => ({type: 'eapp', 0: target, 1: arg, 2: loc}),\n  nil: l => c.evar('nil', l),\n  cons: (a, b, l) => c.app(c.app(c.evar('cons', l), a, l), b, l),\n  list: (values, l) => {\n    let v = c.nil(l)\n    for (let i=values.length-1;i>=0;i--) {\n      v = c.cons(values[i], v, l)\n    }\n    return v\n  },\n  \n}","loc":23},"25":{"type":"raw-code","lang":"javascript","raw":"arr = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":25},"27":{"type":"raw-code","lang":"javascript","raw":"cons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":27},"29":{"type":"raw-code","lang":"javascript","raw":"nil = {type: 'nil'}","loc":29},"31":{"type":"list","values":[40,41],"loc":31},"33":{"type":"raw-code","lang":"javascript","raw":"parse = node => {\n  switch (node.type) {\n    case 'identifier': {\n      return parsePrim(node) || c.evar(node.text, node.loc)\n    }\n    case 'array': {\n      return c.list(node.values.map(parse), node.loc)\n    }\n    case 'string': {\n      const exprs = node.templates.map(t => parse(t.expr))\n      return {type: 'estr', 0: node.first.text, 1: arr(\n        node.templates.map((t, i) => pair(exprs[i], t.suffix.text))\n      )}\n    }\n    case 'list': {\n      if (!node.values.length) return c.evar('()', node.loc)\n      if (node.values[0].type === 'identifier') {\n        const first = node.values[0].text;\n        if (forms[first]) {\n          const res = forms[first](node.loc, ...node.values.slice(1))\n          if (res) return res\n        }\n      }\n      const values = node.values.map(parse)\n      let res = values[0]\n      for (let i=1; i<values.length; i++) {\n        res = c.app(res, values[i], node.loc)\n      }\n      return res\n    }\n  }\n  return 'lol' + node.type\n}","loc":33},"35":{"type":"array","values":[37,38,39],"loc":35},"37":{"type":"identifier","text":"1","loc":37},"38":{"type":"identifier","text":"2","loc":38},"39":{"type":"identifier","text":"3","loc":39},"40":{"type":"identifier","text":"parse","loc":40},"41":{"type":"identifier","text":"1","loc":41},"42":{"type":"raw-code","lang":"javascript","raw":"parsePrim = node => {\n  const v = +node.text\n  if (!isNaN(v)) {\n    return c.prim(c.int(v, node.loc), node.loc)\n  }\n  if (node.text === 'true' || node.text === 'false') {\n    return c.prim(c.bool(node.text === 'true', node.loc), node.loc)\n  }\n}","loc":42},"46":{"type":"list","values":[48,49],"loc":46},"48":{"type":"identifier","text":"parse","loc":48},"49":{"type":"identifier","text":"true","loc":49},"50":{"type":"list","values":[52,53],"loc":50},"52":{"type":"identifier","text":"parse","loc":52},"53":{"type":"array","values":[54,55,56],"loc":53},"54":{"type":"identifier","text":"1","loc":54},"55":{"type":"identifier","text":"2","loc":55},"56":{"type":"identifier","text":"3","loc":56},"57":{"type":"raw-code","lang":"javascript","raw":"pair = (a, b) => ({type: ',', 0: a, 1: b})","loc":57},"61":{"type":"list","values":[63,64],"loc":61},"63":{"type":"identifier","text":"parse","loc":63},"64":{"type":"string","first":65,"templates":[{"expr":66,"suffix":67}],"loc":64},"65":{"type":"stringText","loc":65,"text":"hi"},"66":{"type":"identifier","text":"1","loc":66},"67":{"type":"stringText","text":"","loc":67},"68":{"type":"raw-code","lang":"javascript","raw":"forms = {\n  fn: (loc, args, body) => {\n    if (!args || !body) return\n    if (args.type !== 'array') return\n    const pats = args.values.map(parsePat)\n    return foldr(parse(body), pats, (body, arg) => ({type: 'elambda', 0: arg, 1: body, 2: loc}))\n  },\n  let: (loc, bindings, body) => {\n    if (!bindings || !body) return\n    if (bindings.type !== 'array') return\n    const pairs = makePairs(bindings.values)\n    return foldr(parse(body), pairs, (body, [pat, init]) => {\n      return {type: 'elet', 0: parsePat(pat), 1: parse(init), 2: body, 3: loc}\n    })\n  },\n  match: (loc, target, ...rest) => {\n    if (!target || !rest.length) return\n    const cases = makePairs(rest)\n    return {type: 'ematch', 0: parse(target), 1: arr(cases.map(([pat, body]) => pair(parsePat(pat), parse(body)))), 2: loc}\n  },\n  '@': (loc, inner) => ({type: 'equot', 0: parse(inner), 1: loc}),\n  '@@': (loc, inner) => ({type: 'equot', 0: inner, 1: loc}),\n  '@!': (loc, inner) => ({type: 'equot', 0: parseStmt(inner), 1: loc}),\n  'if': (loc, cond, yes, no) => ({type: 'ematch', 0: parse(cond), 1: arr([pair(\n    {type: 'pprim', 0: {type: 'pbool', 0: true, 1: loc}, 1: loc},\n    parse(yes)\n    ), pair(\n      {type: 'pany', 0: loc},\n      parse(no)\n    )\n  ])}),\n}","loc":68},"70":{"type":"raw-code","lang":"javascript","raw":"foldr = (init, items, f) => items.length === 0 ? init : f(foldr(init, items.slice(1), f), items[0])","loc":70},"76":{"type":"raw-code","lang":"javascript","raw":"parsePat = node => {\n  switch (node.type) {\n    case 'identifier':\n      switch(node.text) {\n        case '_': return {type: 'pany', 0: node.loc}\n        case 'true': case 'false':\n          return {type: 'pprim', 0: {type: 'pbool', 0: node.text === 'true', 1: node.loc}, 1: node.loc}\n      }\n      const v = +node.text\n      if (!isNaN(v)) return {type: 'pprim', 0: {type: 'pint', 0: v, 1: node.loc}, 1: node.loc}\n      return {type: 'pvar', 0: node.text, 1: node.loc}\n    case 'string':\n      return {type: 'pstr', 0: node.first.text, 1: node.loc}\n    case 'list':\n      if (!node.values.length) return {type: 'pcon', 0: '()', 1: nil}\n      if (node.values[0].type !== 'identifier') throw new Error('pat exp must start with identifier')\n      return {type: 'pcon', 0: node.values[0].text, 1: arr(node.values.slice(1).map(parsePat))}\n  }\n}","loc":76},"78":{"type":"list","values":[80,81,82],"loc":78},"80":{"type":"identifier","text":",","loc":80},"81":{"type":"identifier","text":"test","loc":81},"82":{"type":"array","values":[83,116,127,152,170],"loc":82},"83":{"type":"list","values":[84,88,86],"loc":83},"84":{"type":"identifier","text":",","loc":84},"86":{"type":"string","first":115,"templates":[],"loc":86},"87":{"type":"identifier","text":"@","loc":87},"88":{"type":"list","values":[87,89],"loc":88},"89":{"type":"identifier","text":"1","loc":89},"98":{"type":"raw-code","lang":"javascript","raw":"unwrapArray = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":98},"109":{"type":"raw-code","lang":"javascript","raw":"unwrapArray(arr([1,2,3]))","loc":109},"111":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapArray(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":111},"113":{"type":"raw-code","lang":"javascript","raw":"test = v => valueToString(parse(v))","loc":113},"115":{"type":"stringText","loc":115,"text":"(eprim (pint 1 89) 89)"},"116":{"type":"list","values":[117,118,119],"loc":116},"117":{"type":"identifier","text":",","loc":117},"118":{"type":"array","values":[],"loc":118},"119":{"type":"string","first":120,"templates":[],"loc":119},"120":{"type":"stringText","loc":120,"text":"(evar \\\"nil\\\" 118)"},"127":{"type":"list","values":[128,134,130],"loc":127},"128":{"type":"identifier","text":",","loc":128},"129":{"type":"list","values":[131,132,133],"loc":129},"130":{"type":"string","first":151,"templates":[],"loc":130},"131":{"type":"identifier","text":"fn","loc":131},"132":{"type":"array","values":[136],"loc":132},"133":{"type":"identifier","text":"1","loc":133},"134":{"type":"list","values":[135,129],"loc":134},"135":{"type":"identifier","text":"@","loc":135},"136":{"type":"identifier","text":"a","loc":136},"137":{"type":"raw-code","lang":"javascript","raw":"loop = (v, f) => f(v, n => loop(n, f))","loc":137},"140":{"type":"list","values":[142,146],"loc":140},"142":{"type":"identifier","text":"@","loc":142},"146":{"type":"identifier","text":"12","loc":146},"149":{"type":"raw-code","lang":"javascript","raw":"makePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":149},"151":{"type":"stringText","loc":151,"text":"(elambda (pvar \\\"a\\\" 136) (eprim (pint 1 133) 133) 129)"},"152":{"type":"list","values":[153,154,155],"loc":152},"153":{"type":"identifier","text":",","loc":153},"154":{"type":"list","values":[156,157],"loc":154},"155":{"type":"string","first":169,"templates":[],"loc":155},"156":{"type":"identifier","text":"@","loc":156},"157":{"type":"list","values":[160,161,162,163,164,166],"loc":157},"159":{"type":"blank","loc":159},"160":{"type":"identifier","text":"match","loc":160},"161":{"type":"identifier","text":"x","loc":161},"162":{"type":"identifier","text":"1","loc":162},"163":{"type":"identifier","text":"2","loc":163},"164":{"type":"string","first":165,"templates":[],"loc":164},"165":{"type":"stringText","loc":165,"text":"hi"},"166":{"type":"identifier","text":"1","loc":166},"169":{"type":"stringText","loc":169,"text":"(ematch (evar \\\"x\\\" 161) [(, (pprim (pint 1 162) 162) (eprim (pint 2 163) 163)) (, (pstr \\\"hi\\\" 164) (eprim (pint 1 166) 166))] 157)"},"170":{"type":"list","values":[171,172,173],"loc":170},"171":{"type":"identifier","text":",","loc":171},"172":{"type":"list","values":[174,175],"loc":172},"173":{"type":"string","first":187,"templates":[],"loc":173},"174":{"type":"identifier","text":"@","loc":174},"175":{"type":"list","values":[178,179,186],"loc":175},"177":{"type":"blank","loc":177},"178":{"type":"identifier","text":"let","loc":178},"179":{"type":"array","values":[180,185],"loc":179},"180":{"type":"list","values":[181,182,184],"loc":180},"181":{"type":"identifier","text":",","loc":181},"182":{"type":"identifier","text":"a","loc":182},"184":{"type":"identifier","text":"b","loc":184},"185":{"type":"identifier","text":"c","loc":185},"186":{"type":"identifier","text":"d","loc":186},"187":{"type":"stringText","loc":187,"text":"(elet (pcon \\\",\\\" [(pvar \\\"a\\\" 182) (pvar \\\"b\\\" 184)]) (evar \\\"c\\\" 185) (evar \\\"d\\\" 186) 175)"},"-1":{"type":"list","values":[0],"loc":-1}},"root":-1,"meta":{},"history":[{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":79,"idx":0},{"type":"ns-top","idx":79},{"idx":78,"type":"child","at":2},{"type":"child","at":4,"idx":82},{"idx":170,"type":"child","at":2},{"idx":173,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":79,"idx":0},{"type":"ns-top","idx":79},{"idx":78,"type":"child","at":2},{"type":"child","at":4,"idx":82},{"idx":170,"type":"child","at":2},{"idx":173,"type":"subtext","at":0}]}],"prev":{"173":{"type":"blank","loc":173},"187":null},"meta":{},"metaPrev":{},"map":{"173":{"type":"string","first":187,"templates":[],"loc":173},"187":{"type":"stringText","loc":187,"text":"(elet (pcon \\\",\\\" [(pvar \\\"a\\\" 182) (pvar \\\"b\\\" 184)]) (evar \\\"c\\\" 185) (evar \\\"d\\\" 186) 175)"}},"nsMap":{},"nsPrev":{},"id":5084,"ts":1714606180.085,"libraryRoot":""}],"clipboard":[],"hover":[],"regs":{},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":79,"idx":0},{"type":"ns-top","idx":79},{"idx":78,"type":"child","at":2},{"type":"child","at":4,"idx":82},{"idx":170,"type":"child","at":2},{"idx":173,"type":"end"}]}],"cards":[{"path":[],"top":0}],"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,28,30,26,99,110,112,58,24,43,34,69,150,77,71,138,114,32,141,79,62,47,51,36,22,11,9],"type":"normal"},"1":{"id":1,"top":0,"children":[],"type":"normal"},"3":{"type":"normal","top":2,"children":[],"id":3},"9":{"type":"normal","top":8,"children":[],"id":9},"11":{"type":"normal","top":10,"children":[],"id":11},"22":{"type":"normal","top":21,"children":[],"id":22},"24":{"type":"normal","top":23,"children":[],"id":24},"26":{"type":"normal","top":25,"children":[],"id":26},"28":{"type":"normal","top":27,"children":[],"id":28},"30":{"type":"normal","top":29,"children":[],"id":30},"32":{"type":"normal","top":31,"children":[],"id":32},"34":{"type":"normal","top":33,"children":[],"id":34},"36":{"type":"normal","top":35,"children":[],"id":36},"43":{"type":"normal","top":42,"children":[],"id":43},"47":{"type":"normal","top":46,"children":[],"id":47},"51":{"type":"normal","top":50,"children":[],"id":51},"58":{"type":"normal","top":57,"children":[],"id":58},"62":{"type":"normal","top":61,"children":[],"id":62},"69":{"type":"normal","top":68,"children":[],"id":69},"71":{"type":"normal","top":70,"children":[],"id":71},"77":{"type":"normal","top":76,"children":[],"id":77},"79":{"type":"normal","top":78,"children":[],"id":79,"plugin":{"id":"fixture","options":null}},"99":{"type":"normal","top":98,"children":[],"id":99},"110":{"type":"normal","top":109,"children":[],"id":110},"112":{"type":"normal","top":111,"children":[],"id":112},"114":{"type":"normal","top":113,"children":[],"id":114},"138":{"type":"normal","top":137,"children":[],"id":138},"141":{"type":"normal","top":140,"children":[],"id":141},"150":{"type":"normal","top":149,"children":[],"id":150}},"highlight":[],"evaluator":":js:"}