{"map":{"0":{"type":"rich-text","contents":[{"id":"50e95763-10e4-446e-b3fb-103c8c8a05d0","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"A bit about this editor environment","styles":{}}],"children":[]}],"loc":0},"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. The \"structured\" part refers to the fact that the editor's \"source of truth\" representation of your source code is not a long sequence of utf-8 characters, but rather \"structured data\". For many structured editors, the structure of the data is the Abstract Syntax Tree (AST) of the given programming language. Typical programming languages have node types for expressions (variables, numbers, strings, function application, lambdas, array & object literals, infix boolean and prefix unary operators), statements (control structures such as ","styles":{}},{"type":"text","text":"if","styles":{"code":true}},{"type":"text","text":", ","styles":{}},{"type":"text","text":"for","styles":{"code":true}},{"type":"text","text":", and ","styles":{}},{"type":"text","text":"while","styles":{"code":true}},{"type":"text","text":", function and class declaration), and, types (type variables, type application).","styles":{}}],"children":[]},{"id":"4db72981-1cc1-4f35-8e3c-fb37cccbf403","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This has the downside of being quite complicated; both on the implementation side (ensuring that rendering, formatting, and editing each node type works as intended is a huge job) but more importantly: there's a lot of mental overhead for the user, because key strokes might do different things depending on what kind of Node your cursor is in, so you have to be aware of what kind of node (out of dozens of types) you are currently editing.","styles":{}}],"children":[]},{"id":"8e3f048c-0af6-4d0f-a7ed-0ffd4bf406a3","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"In an attempt to avoid these downsides, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions (identifiers, strings, lists, and arrays). In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of text characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some notable features of this structured editor:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\". Deleting a close-paren deletes the whole group.","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\". Adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. error underlines & hover information are trivially preserved.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is currently inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced in the CST. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with: the \"Concrete Syntax Tree\". The \"evaluator\" for this page is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]},{"id":"e8c14d10-4142-4e52-9720-460043746437","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the TypeScript type of a CST node (abbreviated to include only the variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":2},"4":{"type":"list","values":[6,7,9,18],"loc":4},"6":{"type":"identifier","text":"hello","loc":6},"7":{"type":"string","first":8,"templates":[{"expr":16,"suffix":17}],"loc":7},"8":{"type":"stringText","loc":8,"text":"world "},"9":{"type":"identifier","text":"12","loc":9},"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some sort.\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14},"16":{"type":"identifier","text":"abc","loc":16},"17":{"type":"stringText","text":"!","loc":17},"18":{"type":"array","values":[24],"loc":18},"19":{"type":"rich-text","contents":[{"id":"e36ae16e-cd08-42be-821b-f5068cee7a9d","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"And here's some code! Feel free to play around with it; everything on this page is editable.","styles":{}}],"children":[]}],"loc":19},"21":{"type":"identifier","text":"b","loc":21},"24":{"type":"spread","contents":21,"loc":24},"-1":{"type":"list","values":[0],"loc":-1}},"root":-1,"meta":{},"history":[{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"50e95763-10e4-446e-b3fb-103c8c8a05d0"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"idx":0,"type":"subtext","at":0}]}],"prev":{"0":{"type":"blank","loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"50e95763-10e4-446e-b3fb-103c8c8a05d0","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"A bit about this editor environment","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":0,"ts":1714767441.533,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"22dcf8b2-852c-4062-a235-3150b52701e9"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"50e95763-10e4-446e-b3fb-103c8c8a05d0"}]}],"prev":{"2":null},"meta":{},"metaPrev":{},"map":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. In contrast to other structured editors, which tend to operate on the Abstract Syntax Tree of the target language, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of ascii characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some things of note:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\"","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\"; adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. errors & hover information is preserved, etc.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[],"children":[]}],"loc":2}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3],"type":"normal"},"3":{"type":"normal","top":2,"children":[],"id":3}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1],"type":"normal"},"3":null},"id":1,"ts":1714767451.671,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"50e95763-10e4-446e-b3fb-103c8c8a05d0"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"50e95763-10e4-446e-b3fb-103c8c8a05d0"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"50e95763-10e4-446e-b3fb-103c8c8a05d0","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"A bit about this editor environment","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"50e95763-10e4-446e-b3fb-103c8c8a05d0","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"A bit about this editor environment","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":2,"ts":1714769903.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"idx":0,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"idx":0,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"1":{"id":1,"top":0,"children":[],"type":"normal","display":{"id":"none","options":null}}},"nsPrev":{"1":{"id":1,"top":0,"children":[],"type":"normal"}},"id":3,"ts":1714769906.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"3":{"type":"normal","top":2,"children":[],"id":3,"display":{"id":"none","options":null}}},"nsPrev":{"3":{"type":"normal","top":2,"children":[],"id":3}},"id":4,"ts":1714769908.432,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"22dcf8b2-852c-4062-a235-3150b52701e9"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"22dcf8b2-852c-4062-a235-3150b52701e9"}]}],"prev":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. In contrast to other structured editors, which tend to operate on the Abstract Syntax Tree of the target language, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of ascii characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some things of note:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\"","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\"; adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. errors & hover information is preserved, etc.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[],"children":[]}],"loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. In contrast to other structured editors, which tend to operate on the Abstract Syntax Tree of the target language, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of ascii characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some things of note:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\"","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\"; adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. errors & hover information is preserved, etc.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with; the \"Concrete Syntax Tree\":","styles":{}}],"children":[]}],"loc":2}},"nsMap":{},"nsPrev":{},"id":5,"ts":1714769959.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"end"}]}],"prev":{"4":null},"meta":{},"metaPrev":{},"map":{"4":{"type":"blank","loc":4}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,5],"type":"normal"},"5":{"type":"normal","top":4,"children":[],"id":5}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3],"type":"normal"},"5":null},"id":6,"ts":1714769997.24,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"478e2a34-cfda-49a3-ae1e-fe3c822725b2"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"478e2a34-cfda-49a3-ae1e-fe3c822725b2"}]}],"prev":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. In contrast to other structured editors, which tend to operate on the Abstract Syntax Tree of the target language, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of ascii characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some things of note:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\"","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\"; adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. errors & hover information is preserved, etc.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with; the \"Concrete Syntax Tree\":","styles":{}}],"children":[]}],"loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. In contrast to other structured editors, which tend to operate on the Abstract Syntax Tree of the target language, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of ascii characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some things of note:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\"","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\"; adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. errors & hover information is preserved, etc.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with; the \"Concrete Syntax Tree\". The \"evaluator\" for this section is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]}],"loc":2}},"nsMap":{},"nsPrev":{},"id":7,"ts":1714770003.481,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"subtext","at":0}]}],"prev":{"4":{"type":"blank","loc":4}},"meta":{},"metaPrev":{},"map":{"4":{"type":"list","values":[],"loc":4}},"nsMap":{},"nsPrev":{},"id":8,"ts":1714770034.588,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":0},{"idx":6,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"inside"}]}],"prev":{"4":{"type":"list","values":[],"loc":4},"6":null},"meta":{},"metaPrev":{},"map":{"4":{"type":"list","values":[6],"loc":4},"6":{"type":"identifier","text":"h","loc":6}},"nsMap":{},"nsPrev":{},"id":9,"ts":1714770034.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":0},{"idx":6,"type":"subtext","at":5}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":0},{"idx":6,"type":"subtext","at":1}]}],"prev":{"6":{"type":"identifier","text":"h","loc":6}},"meta":{},"metaPrev":{},"map":{"6":{"type":"identifier","text":"hello","loc":6}},"nsMap":{},"nsPrev":{},"id":10,"ts":1714770035.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":0},{"idx":6,"type":"subtext","at":5}]}],"prev":{"4":{"type":"list","values":[6],"loc":4},"7":null},"meta":{},"metaPrev":{},"map":{"4":{"type":"list","values":[6,7],"loc":4},"7":{"type":"blank","loc":7}},"nsMap":{},"nsPrev":{},"id":11,"ts":1714770035.617,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"start"}]}],"prev":{"7":{"type":"blank","loc":7}},"meta":{},"metaPrev":{},"map":{"7":{"type":"array","values":[],"loc":7}},"nsMap":{},"nsPrev":{},"id":12,"ts":1714770035.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"inside"}]}],"prev":{"4":{"type":"list","values":[6,7],"loc":4},"7":{"type":"array","values":[],"loc":7}},"meta":{},"metaPrev":{},"map":{"4":{"type":"list","values":[6,7],"loc":4},"7":{"type":"blank","loc":7}},"nsMap":{},"nsPrev":{},"id":13,"ts":1714770036.451,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"start"}]}],"prev":{"7":{"type":"blank","loc":7},"8":null},"meta":{},"metaPrev":{},"map":{"7":{"type":"string","first":8,"templates":[],"loc":7},"8":{"type":"stringText","loc":8,"text":""}},"nsMap":{},"nsPrev":{},"id":14,"ts":1714770036.645,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":0}]}],"prev":{"8":{"type":"stringText","loc":8,"text":""}},"meta":{},"metaPrev":{},"map":{"8":{"type":"stringText","loc":8,"text":"w"}},"nsMap":{},"nsPrev":{},"id":15,"ts":1714770036.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":1}]}],"prev":{"8":{"type":"stringText","loc":8,"text":"w"}},"meta":{},"metaPrev":{},"map":{"8":{"type":"stringText","loc":8,"text":"wo"}},"nsMap":{},"nsPrev":{},"id":16,"ts":1714770036.93,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":2}]}],"prev":{"8":{"type":"stringText","loc":8,"text":"wo"}},"meta":{},"metaPrev":{},"map":{"8":{"type":"stringText","loc":8,"text":"wor"}},"nsMap":{},"nsPrev":{},"id":17,"ts":1714770036.999,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":3}]}],"prev":{"8":{"type":"stringText","loc":8,"text":"wor"}},"meta":{},"metaPrev":{},"map":{"8":{"type":"stringText","loc":8,"text":"worl"}},"nsMap":{},"nsPrev":{},"id":18,"ts":1714770037.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":5}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":4}]}],"prev":{"8":{"type":"stringText","loc":8,"text":"worl"}},"meta":{},"metaPrev":{},"map":{"8":{"type":"stringText","loc":8,"text":"world"}},"nsMap":{},"nsPrev":{},"id":19,"ts":1714770037.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null}}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5}},"id":20,"ts":1714770214.702,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null}}},"id":21,"ts":1714770549.449,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"id":22,"ts":1714770551.94,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"id":23,"ts":1714770553.848,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":9,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"end"}]}],"prev":{"4":{"type":"list","values":[6,7],"loc":4},"9":null},"meta":{},"metaPrev":{},"map":{"4":{"type":"list","values":[6,7,9],"loc":4},"9":{"type":"blank","loc":9}},"nsMap":{},"nsPrev":{},"id":24,"ts":1714770584.994,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":9,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":9,"type":"start"}]}],"prev":{"9":{"type":"blank","loc":9}},"meta":{},"metaPrev":{},"map":{"9":{"type":"identifier","text":"12","loc":9}},"nsMap":{},"nsPrev":{},"id":25,"ts":1714770585.57,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":10,"type":"annot-annot"},{"idx":11,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":9,"type":"subtext","at":2}]}],"prev":{"4":{"type":"list","values":[6,7,9],"loc":4},"10":null,"11":null},"meta":{},"metaPrev":{},"map":{"4":{"type":"list","values":[6,7,10],"loc":4},"10":{"type":"annot","target":9,"annot":11,"loc":10},"11":{"type":"blank","loc":11}},"nsMap":{},"nsPrev":{},"id":26,"ts":1714770622.854,"libraryRoot":""},{"id":27,"meta":{},"metaPrev":{},"revert":26,"prev":{"4":{"type":"list","values":[6,7,10],"loc":4},"10":{"type":"annot","target":9,"annot":11,"loc":10},"11":{"type":"blank","loc":11}},"map":{"4":{"type":"list","values":[6,7,9],"loc":4},"10":null,"11":null},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":9,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":10,"type":"annot-annot"},{"idx":11,"type":"start"}]}],"nsMap":{},"nsPrev":{},"ts":1714770624.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"idx":12,"type":"rich-text","sel":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"end"}]}],"prev":{"12":null},"meta":{},"metaPrev":{},"map":{"12":{"type":"rich-text","contents":null,"loc":12}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,5,13],"type":"normal"},"13":{"type":"normal","top":12,"children":[],"id":13}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3,5],"type":"normal"},"13":null},"id":28,"ts":1714770634.649,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"idx":14,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"idx":12,"type":"end"}]}],"prev":{"14":null},"meta":{},"metaPrev":{},"map":{"14":{"type":"blank","loc":14}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,5,13,15],"type":"normal"},"15":{"type":"normal","top":14,"children":[],"id":15}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3,5,13],"type":"normal"},"15":null},"id":29,"ts":1714770697.019,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"idx":14,"type":"start"}]}],"prev":{"14":{"type":"blank","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"// some code","loc":14}},"nsMap":{},"nsPrev":{},"id":30,"ts":1714770698.542,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"// some code","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"","loc":14}},"nsMap":{},"nsPrev":{},"id":31,"ts":1714770699.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number}\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n} {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":32,"ts":1714770700.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number}\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n} {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number}\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":33,"ts":1714770705.075,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"idx":14,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"idx":14,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"15":{"type":"normal","top":14,"children":[],"id":15,"display":{"id":"none","options":null}}},"nsPrev":{"15":{"type":"normal","top":14,"children":[],"id":15}},"id":34,"ts":1714770710.517,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"idx":12,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"idx":12,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"13":{"type":"normal","top":12,"children":[],"id":13,"display":{"id":"none","options":null}}},"nsPrev":{"13":{"type":"normal","top":12,"children":[],"id":13}},"id":35,"ts":1714770714.711,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":6}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":5}]}],"prev":{"8":{"type":"stringText","loc":8,"text":"world"}},"meta":{},"metaPrev":{},"map":{"8":{"type":"stringText","loc":8,"text":"world "}},"nsMap":{},"nsPrev":{},"id":36,"ts":1714770746.04,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":7}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":6}]}],"prev":{"8":{"type":"stringText","loc":8,"text":"world "}},"meta":{},"metaPrev":{},"map":{"8":{"type":"stringText","loc":8,"text":"world $"}},"nsMap":{},"nsPrev":{},"id":37,"ts":1714770746.197,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"expr","at":1},{"idx":16,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":0},{"idx":8,"type":"subtext","at":7}]}],"prev":{"7":{"type":"string","first":8,"templates":[],"loc":7},"8":{"type":"stringText","loc":8,"text":"world $"},"16":null,"17":null},"meta":{},"metaPrev":{},"map":{"7":{"type":"string","first":8,"templates":[{"expr":16,"suffix":17}],"loc":7},"8":{"type":"stringText","loc":8,"text":"world "},"16":{"type":"blank","loc":16},"17":{"type":"stringText","text":"","loc":17}},"nsMap":{},"nsPrev":{},"id":38,"ts":1714770746.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"expr","at":1},{"idx":16,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"expr","at":1},{"idx":16,"type":"start"}]}],"prev":{"16":{"type":"blank","loc":16}},"meta":{},"metaPrev":{},"map":{"16":{"type":"identifier","text":"abc","loc":16}},"nsMap":{},"nsPrev":{},"id":39,"ts":1714770748.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":1},{"idx":17,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":1},{"idx":7,"type":"text","at":1},{"idx":17,"type":"start"}]}],"prev":{"17":{"type":"stringText","text":"","loc":17}},"meta":{},"metaPrev":{},"map":{"17":{"type":"stringText","text":"!","loc":17}},"nsMap":{},"nsPrev":{},"id":40,"ts":1714770752.294,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":2},{"idx":9,"type":"subtext","at":2}]}],"prev":{"4":{"type":"list","values":[6,7,9],"loc":4},"18":null},"meta":{},"metaPrev":{},"map":{"4":{"type":"list","values":[6,7,9,18],"loc":4},"18":{"type":"blank","loc":18}},"nsMap":{},"nsPrev":{},"id":41,"ts":1714770766.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"start"}]}],"prev":{"18":{"type":"blank","loc":18}},"meta":{},"metaPrev":{},"map":{"18":{"type":"array","values":[],"loc":18}},"nsMap":{},"nsPrev":{},"id":42,"ts":1714770766.577,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"type":"rich-text","idx":12,"sel":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"type":"rich-text","idx":12,"sel":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f"}]}],"prev":{"12":{"type":"rich-text","contents":null,"loc":12}},"meta":{},"metaPrev":{},"map":{"12":{"type":"rich-text","contents":[{"id":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Because it will be relevant in a bit, here's the TypeScript type of a CST node (this is somewhat abbreviated, but there are the only variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":12}},"nsMap":{},"nsPrev":{},"id":43,"ts":1714770803.218,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"3":{"type":"normal","top":2,"children":[],"id":3,"display":{"id":"none","options":null},"collapsed":true}},"nsPrev":{"3":{"type":"normal","top":2,"children":[],"id":3,"display":{"id":"none","options":null}}},"id":44,"ts":1714771039.01,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"3":{"type":"normal","top":2,"children":[],"id":3,"display":{"id":"none","options":null},"collapsed":false}},"nsPrev":{"3":{"type":"normal","top":2,"children":[],"id":3,"display":{"id":"none","options":null},"collapsed":true}},"id":45,"ts":1714771039.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"id":46,"ts":1714771045.993,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"id":47,"ts":1714771048.027,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"id":48,"ts":1714771114.658,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":true}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"id":49,"ts":1714771115.342,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":true}},"id":50,"ts":1714771116.2,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"id":51,"ts":1714771117.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"type":"rich-text","idx":12,"sel":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"type":"rich-text","idx":12,"sel":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f"}]}],"prev":{"12":{"type":"rich-text","contents":[{"id":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Because it will be relevant in a bit, here's the TypeScript type of a CST node (this is somewhat abbreviated, but there are the only variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":12}},"meta":{},"metaPrev":{},"map":{"12":{"type":"rich-text","contents":[{"id":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Because it will be relevant in a bit, here's the TypeScript type of a CST node (abbreviated to include only the variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":12}},"nsMap":{},"nsPrev":{},"id":52,"ts":1714771294.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number}\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":53,"ts":1714771318.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} /\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":54,"ts":1714771318.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} /\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} //\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":55,"ts":1714771319.114,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} //\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":56,"ts":1714771319.343,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // a\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":57,"ts":1714771320.773,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // a\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // ab\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":58,"ts":1714771320.884,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // ab\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":59,"ts":1714771321.042,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":60,"ts":1714771321.201,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":61,"ts":1714771321.817,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":62,"ts":1714771322.494,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":63,"ts":1714771324.022,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":64,"ts":1714771324.305,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":65,"ts":1714771324.474,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":66,"ts":1714771325.035,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":67,"ts":1714771325.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":68,"ts":1714771325.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":69,"ts":1714771327.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":70,"ts":1714771327.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":71,"ts":1714771327.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":72,"ts":1714771330.508,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":73,"ts":1714771330.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":74,"ts":1714771332.976,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":75,"ts":1714771338.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":76,"ts":1714771338.564,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":77,"ts":1714771339.114,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >-\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":78,"ts":1714771339.317,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >-\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":79,"ts":1714771339.708,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":80,"ts":1714771340.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":81,"ts":1714771341.142,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=,\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":82,"ts":1714771341.265,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, \n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":83,"ts":1714771341.756,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":84,"ts":1714771341.897,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"nsMap":{},"nsPrev":{},"id":85,"ts":1714771342.078,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"478e2a34-cfda-49a3-ae1e-fe3c822725b2"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"22dcf8b2-852c-4062-a235-3150b52701e9"}]}],"prev":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. In contrast to other structured editors, which tend to operate on the Abstract Syntax Tree of the target language, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of ascii characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some things of note:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\"","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\"; adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. errors & hover information is preserved, etc.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with; the \"Concrete Syntax Tree\". The \"evaluator\" for this section is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]}],"loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. The \"structured\" part refers to the fact that the editor's \"source of truth\" representation of your source code is not a long sequence of utf-8 characters, but rather \"structured data\". For many structured editors, the structure of the data is the Abstract Syntax Tree (AST) of the given programming language. Typical programming languages have node types for expressions (variables, numbers, strings, function application, lambdas, array & object literals, infix boolean and prefix unary operators), statements (control structures such as ","styles":{}},{"type":"text","text":"if","styles":{"code":true}},{"type":"text","text":", ","styles":{}},{"type":"text","text":"for","styles":{"code":true}},{"type":"text","text":", and ","styles":{}},{"type":"text","text":"while","styles":{"code":true}},{"type":"text","text":", function and class declaration), and, types (type variables, type application).","styles":{}}],"children":[]},{"id":"4db72981-1cc1-4f35-8e3c-fb37cccbf403","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This has the downside of being quite complicated; both on the implementation side (ensuring that rendering, formatting, and editing each node type works as intended is a huge job) but more importantly there's a lot of mental overhead for the user, because key strokes might do different things depending on what kind of Node your cursor is in, so there's a ton to keep track of.","styles":{}}],"children":[]},{"id":"8e3f048c-0af6-4d0f-a7ed-0ffd4bf406a3","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"In an attempt to avoid these downsides, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of text characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some notable features of this structured editor:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\". Deleting a close-paren deletes the whole group.","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\". Adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. error underlines & hover information are trivially preserved.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is currently inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced in the CST. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with: the \"Concrete Syntax Tree\". The \"evaluator\" for this page is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]}],"loc":2}},"nsMap":{},"nsPrev":{},"id":86,"ts":1714771411.054,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":5},{"type":"start","idx":4}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,13,15,5],"type":"normal"}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3,5,13,15],"type":"normal"}},"id":87,"ts":1714772512.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"type":"rich-text","idx":12,"sel":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"type":"rich-text","idx":12,"sel":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f"}]}],"prev":{"12":{"type":"rich-text","contents":[{"id":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Because it will be relevant in a bit, here's the TypeScript type of a CST node (abbreviated to include only the variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":12}},"meta":{},"metaPrev":{},"map":{"12":{"type":"rich-text","contents":[{"id":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Because it will be relevant in a bit, ","styles":{}}],"children":[]}],"loc":12}},"nsMap":{},"nsPrev":{},"id":88,"ts":1714772523.235,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"478e2a34-cfda-49a3-ae1e-fe3c822725b2"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"478e2a34-cfda-49a3-ae1e-fe3c822725b2"}]}],"prev":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. The \"structured\" part refers to the fact that the editor's \"source of truth\" representation of your source code is not a long sequence of utf-8 characters, but rather \"structured data\". For many structured editors, the structure of the data is the Abstract Syntax Tree (AST) of the given programming language. Typical programming languages have node types for expressions (variables, numbers, strings, function application, lambdas, array & object literals, infix boolean and prefix unary operators), statements (control structures such as ","styles":{}},{"type":"text","text":"if","styles":{"code":true}},{"type":"text","text":", ","styles":{}},{"type":"text","text":"for","styles":{"code":true}},{"type":"text","text":", and ","styles":{}},{"type":"text","text":"while","styles":{"code":true}},{"type":"text","text":", function and class declaration), and, types (type variables, type application).","styles":{}}],"children":[]},{"id":"4db72981-1cc1-4f35-8e3c-fb37cccbf403","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This has the downside of being quite complicated; both on the implementation side (ensuring that rendering, formatting, and editing each node type works as intended is a huge job) but more importantly there's a lot of mental overhead for the user, because key strokes might do different things depending on what kind of Node your cursor is in, so there's a ton to keep track of.","styles":{}}],"children":[]},{"id":"8e3f048c-0af6-4d0f-a7ed-0ffd4bf406a3","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"In an attempt to avoid these downsides, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of text characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some notable features of this structured editor:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\". Deleting a close-paren deletes the whole group.","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\". Adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. error underlines & hover information are trivially preserved.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is currently inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced in the CST. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with: the \"Concrete Syntax Tree\". The \"evaluator\" for this page is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]}],"loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. The \"structured\" part refers to the fact that the editor's \"source of truth\" representation of your source code is not a long sequence of utf-8 characters, but rather \"structured data\". For many structured editors, the structure of the data is the Abstract Syntax Tree (AST) of the given programming language. Typical programming languages have node types for expressions (variables, numbers, strings, function application, lambdas, array & object literals, infix boolean and prefix unary operators), statements (control structures such as ","styles":{}},{"type":"text","text":"if","styles":{"code":true}},{"type":"text","text":", ","styles":{}},{"type":"text","text":"for","styles":{"code":true}},{"type":"text","text":", and ","styles":{}},{"type":"text","text":"while","styles":{"code":true}},{"type":"text","text":", function and class declaration), and, types (type variables, type application).","styles":{}}],"children":[]},{"id":"4db72981-1cc1-4f35-8e3c-fb37cccbf403","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This has the downside of being quite complicated; both on the implementation side (ensuring that rendering, formatting, and editing each node type works as intended is a huge job) but more importantly there's a lot of mental overhead for the user, because key strokes might do different things depending on what kind of Node your cursor is in, so there's a ton to keep track of.","styles":{}}],"children":[]},{"id":"8e3f048c-0af6-4d0f-a7ed-0ffd4bf406a3","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"In an attempt to avoid these downsides, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of text characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some notable features of this structured editor:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\". Deleting a close-paren deletes the whole group.","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\". Adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. error underlines & hover information are trivially preserved.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is currently inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced in the CST. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with: the \"Concrete Syntax Tree\". The \"evaluator\" for this page is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]},{"id":"e8c14d10-4142-4e52-9720-460043746437","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the TypeScript type of a CST node (abbreviated to include only the variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":2}},"nsMap":{},"nsPrev":{},"id":89,"ts":1714772524.949,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"idx":12,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"idx":12,"type":"end"}]}],"prev":{"12":{"type":"rich-text","contents":[{"id":"335b03a4-bc3a-44a5-8f08-3ac9a4e8200f","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Because it will be relevant in a bit, ","styles":{}}],"children":[]}],"loc":12}},"meta":{},"metaPrev":{},"map":{"12":{"type":"blank","loc":12}},"nsMap":{"13":{"type":"normal","top":12,"children":[],"id":13,"display":{"id":"none","options":null}}},"nsPrev":{"13":{"type":"normal","top":12,"children":[],"id":13,"display":{"id":"none","options":null}}},"id":90,"ts":1714772528.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":13,"idx":0},{"type":"ns-top","idx":13},{"idx":12,"type":"start"}]}],"prev":{"12":{"type":"blank","loc":12}},"meta":{},"metaPrev":{},"map":{"12":null},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,15,5],"type":"normal"},"13":null},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3,13,15,5],"type":"normal"},"13":{"type":"normal","top":12,"children":[],"id":13,"display":{"id":"none","options":null}}},"id":91,"ts":1714772529.032,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"type":"rich-text","idx":19,"sel":"e36ae16e-cd08-42be-821b-f5068cee7a9d"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"idx":14,"type":"end"}]}],"prev":{"19":null},"meta":{},"metaPrev":{},"map":{"19":{"type":"rich-text","contents":[{"id":"e36ae16e-cd08-42be-821b-f5068cee7a9d","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"And here's some code. Feel free to play around with it; everything on this page is editable.","styles":{}}],"children":[]}],"loc":19}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,15,20,5],"type":"normal"},"20":{"type":"normal","top":19,"children":[],"id":20}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,3,15,5],"type":"normal"},"20":null},"id":92,"ts":1714772534.216,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":19,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":19,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"20":{"type":"normal","top":19,"children":[],"id":20,"display":{"id":"none","options":null}}},"nsPrev":{"20":{"type":"normal","top":19,"children":[],"id":20}},"id":93,"ts":1714772561.724,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"id":94,"ts":1714772573.32,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"id":95,"ts":1714772579.591,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"id":96,"ts":1714772625.583,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"}},"nsPrev":{"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":false}},"id":97,"ts":1714772746.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n    ","loc":14}},"nsMap":{},"nsPrev":{},"id":98,"ts":1714772856.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n    ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n   ","loc":14}},"nsMap":{},"nsPrev":{},"id":99,"ts":1714772856.673,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n   ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n  ","loc":14}},"nsMap":{},"nsPrev":{},"id":100,"ts":1714772856.851,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n  ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n ","loc":14}},"nsMap":{},"nsPrev":{},"id":101,"ts":1714772857.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n","loc":14}},"nsMap":{},"nsPrev":{},"id":102,"ts":1714772857.349,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n\n","loc":14}},"nsMap":{},"nsPrev":{},"id":103,"ts":1714772858.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n\n","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n/","loc":14}},"nsMap":{},"nsPrev":{},"id":104,"ts":1714772858.635,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n/","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n//","loc":14}},"nsMap":{},"nsPrev":{},"id":105,"ts":1714772858.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n//","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// ","loc":14}},"nsMap":{},"nsPrev":{},"id":106,"ts":1714772858.912,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// t","loc":14}},"nsMap":{},"nsPrev":{},"id":107,"ts":1714772859.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// t","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// thi","loc":14}},"nsMap":{},"nsPrev":{},"id":108,"ts":1714772859.365,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// thi","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this ","loc":14}},"nsMap":{},"nsPrev":{},"id":109,"ts":1714772859.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this i","loc":14}},"nsMap":{},"nsPrev":{},"id":110,"ts":1714772859.756,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this i","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is","loc":14}},"nsMap":{},"nsPrev":{},"id":111,"ts":1714772859.867,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is ","loc":14}},"nsMap":{},"nsPrev":{},"id":112,"ts":1714772859.941,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a","loc":14}},"nsMap":{},"nsPrev":{},"id":113,"ts":1714772860.065,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a ","loc":14}},"nsMap":{},"nsPrev":{},"id":114,"ts":1714772860.147,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"","loc":14}},"nsMap":{},"nsPrev":{},"id":115,"ts":1714772860.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"j","loc":14}},"nsMap":{},"nsPrev":{},"id":116,"ts":1714772860.787,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"j","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"ja","loc":14}},"nsMap":{},"nsPrev":{},"id":117,"ts":1714772860.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"ja","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"jav","loc":14}},"nsMap":{},"nsPrev":{},"id":118,"ts":1714772861.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"jav","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"java","loc":14}},"nsMap":{},"nsPrev":{},"id":119,"ts":1714772861.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"java","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javasc","loc":14}},"nsMap":{},"nsPrev":{},"id":120,"ts":1714772861.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javasc","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascr","loc":14}},"nsMap":{},"nsPrev":{},"id":121,"ts":1714772861.757,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascr","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascrip","loc":14}},"nsMap":{},"nsPrev":{},"id":122,"ts":1714772861.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascrip","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript","loc":14}},"nsMap":{},"nsPrev":{},"id":123,"ts":1714772861.934,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript ","loc":14}},"nsMap":{},"nsPrev":{},"id":124,"ts":1714772862.099,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript s","loc":14}},"nsMap":{},"nsPrev":{},"id":125,"ts":1714772862.342,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript s","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript sou","loc":14}},"nsMap":{},"nsPrev":{},"id":126,"ts":1714772862.637,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript sou","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript sour","loc":14}},"nsMap":{},"nsPrev":{},"id":127,"ts":1714772862.656,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript sour","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source","loc":14}},"nsMap":{},"nsPrev":{},"id":128,"ts":1714772862.896,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\"","loc":14}},"nsMap":{},"nsPrev":{},"id":129,"ts":1714772863.152,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\"","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" ","loc":14}},"nsMap":{},"nsPrev":{},"id":130,"ts":1714772863.822,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" t","loc":14}},"nsMap":{},"nsPrev":{},"id":131,"ts":1714772863.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" t","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" typ","loc":14}},"nsMap":{},"nsPrev":{},"id":132,"ts":1714772864.066,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" typ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type","loc":14}},"nsMap":{},"nsPrev":{},"id":133,"ts":1714772864.114,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type ","loc":14}},"nsMap":{},"nsPrev":{},"id":134,"ts":1714772864.199,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type no","loc":14}},"nsMap":{},"nsPrev":{},"id":135,"ts":1714772864.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type no","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node","loc":14}},"nsMap":{},"nsPrev":{},"id":136,"ts":1714772864.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node,","loc":14}},"nsMap":{},"nsPrev":{},"id":137,"ts":1714772866.759,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node,","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, ","loc":14}},"nsMap":{},"nsPrev":{},"id":138,"ts":1714772866.857,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, w","loc":14}},"nsMap":{},"nsPrev":{},"id":139,"ts":1714772870.476,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, w","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, whi","loc":14}},"nsMap":{},"nsPrev":{},"id":140,"ts":1714772870.575,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, whi","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, whic","loc":14}},"nsMap":{},"nsPrev":{},"id":141,"ts":1714772870.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, whic","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which","loc":14}},"nsMap":{},"nsPrev":{},"id":142,"ts":1714772870.781,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which ","loc":14}},"nsMap":{},"nsPrev":{},"id":143,"ts":1714772870.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is","loc":14}},"nsMap":{},"nsPrev":{},"id":144,"ts":1714772871.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is ","loc":14}},"nsMap":{},"nsPrev":{},"id":145,"ts":1714772871.162,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is","loc":14}},"nsMap":{},"nsPrev":{},"id":146,"ts":1714772871.476,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is,","loc":14}},"nsMap":{},"nsPrev":{},"id":147,"ts":1714772871.707,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is,","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, ","loc":14}},"nsMap":{},"nsPrev":{},"id":148,"ts":1714772871.829,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sa","loc":14}},"nsMap":{},"nsPrev":{},"id":149,"ts":1714772872.066,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sa","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sad","loc":14}},"nsMap":{},"nsPrev":{},"id":150,"ts":1714772872.617,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sad","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly","loc":14}},"nsMap":{},"nsPrev":{},"id":151,"ts":1714772872.743,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly,","loc":14}},"nsMap":{},"nsPrev":{},"id":152,"ts":1714772873.063,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly,","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, ","loc":14}},"nsMap":{},"nsPrev":{},"id":153,"ts":1714772873.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, j","loc":14}},"nsMap":{},"nsPrev":{},"id":154,"ts":1714772873.313,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, j","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, jus","loc":14}},"nsMap":{},"nsPrev":{},"id":155,"ts":1714772873.491,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, jus","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just","loc":14}},"nsMap":{},"nsPrev":{},"id":156,"ts":1714772873.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just ","loc":14}},"nsMap":{},"nsPrev":{},"id":157,"ts":1714772873.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a","loc":14}},"nsMap":{},"nsPrev":{},"id":158,"ts":1714772873.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a ","loc":14}},"nsMap":{},"nsPrev":{},"id":159,"ts":1714772873.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a b","loc":14}},"nsMap":{},"nsPrev":{},"id":160,"ts":1714772875.812,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a b","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a bi","loc":14}},"nsMap":{},"nsPrev":{},"id":161,"ts":1714772875.887,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a bi","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big","loc":14}},"nsMap":{},"nsPrev":{},"id":162,"ts":1714772876.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ","loc":14}},"nsMap":{},"nsPrev":{},"id":163,"ts":1714772876.417,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big o","loc":14}},"nsMap":{},"nsPrev":{},"id":164,"ts":1714772876.55,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big o","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol","loc":14}},"nsMap":{},"nsPrev":{},"id":165,"ts":1714772876.755,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol'","loc":14}},"nsMap":{},"nsPrev":{},"id":166,"ts":1714772877.003,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol'","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' ","loc":14}},"nsMap":{},"nsPrev":{},"id":167,"ts":1714772877.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' te","loc":14}},"nsMap":{},"nsPrev":{},"id":168,"ts":1714772877.54,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' te","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' tex","loc":14}},"nsMap":{},"nsPrev":{},"id":169,"ts":1714772877.786,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' tex","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text","loc":14}},"nsMap":{},"nsPrev":{},"id":170,"ts":1714772877.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text ","loc":14}},"nsMap":{},"nsPrev":{},"id":171,"ts":1714772878.041,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text str","loc":14}},"nsMap":{},"nsPrev":{},"id":172,"ts":1714772878.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text str","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text stri","loc":14}},"nsMap":{},"nsPrev":{},"id":173,"ts":1714772878.28,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text stri","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text strin","loc":14}},"nsMap":{},"nsPrev":{},"id":174,"ts":1714772878.351,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text strin","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string","loc":14}},"nsMap":{},"nsPrev":{},"id":175,"ts":1714772878.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.","loc":14}},"nsMap":{},"nsPrev":{},"id":176,"ts":1714772878.597,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n\n","loc":14}},"nsMap":{},"nsPrev":{},"id":177,"ts":1714772879.459,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n\n","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n/","loc":14}},"nsMap":{},"nsPrev":{},"id":178,"ts":1714772879.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n/","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n//","loc":14}},"nsMap":{},"nsPrev":{},"id":179,"ts":1714772879.787,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n//","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// ","loc":14}},"nsMap":{},"nsPrev":{},"id":180,"ts":1714772879.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// n","loc":14}},"nsMap":{},"nsPrev":{},"id":181,"ts":1714772880.025,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// n","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no","loc":14}},"nsMap":{},"nsPrev":{},"id":182,"ts":1714772880.155,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no ","loc":14}},"nsMap":{},"nsPrev":{},"id":183,"ts":1714772880.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no str","loc":14}},"nsMap":{},"nsPrev":{},"id":184,"ts":1714772880.515,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no str","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no stru","loc":14}},"nsMap":{},"nsPrev":{},"id":185,"ts":1714772880.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no stru","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no struc","loc":14}},"nsMap":{},"nsPrev":{},"id":186,"ts":1714772880.718,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no struc","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no struct","loc":14}},"nsMap":{},"nsPrev":{},"id":187,"ts":1714772880.873,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no struct","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structur","loc":14}},"nsMap":{},"nsPrev":{},"id":188,"ts":1714772880.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structur","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structure","loc":14}},"nsMap":{},"nsPrev":{},"id":189,"ts":1714772881.059,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structure","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured","loc":14}},"nsMap":{},"nsPrev":{},"id":190,"ts":1714772881.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured ","loc":14}},"nsMap":{},"nsPrev":{},"id":191,"ts":1714772881.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured g","loc":14}},"nsMap":{},"nsPrev":{},"id":192,"ts":1714772881.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured g","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured go","loc":14}},"nsMap":{},"nsPrev":{},"id":193,"ts":1714772881.735,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured go","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goo","loc":14}},"nsMap":{},"nsPrev":{},"id":194,"ts":1714772881.877,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goo","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured good","loc":14}},"nsMap":{},"nsPrev":{},"id":195,"ts":1714772881.981,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured good","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodne","loc":14}},"nsMap":{},"nsPrev":{},"id":196,"ts":1714772882.089,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodne","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodnes","loc":14}},"nsMap":{},"nsPrev":{},"id":197,"ts":1714772882.32,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodnes","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness","loc":14}},"nsMap":{},"nsPrev":{},"id":198,"ts":1714772882.462,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness ","loc":14}},"nsMap":{},"nsPrev":{},"id":199,"ts":1714772882.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness he","loc":14}},"nsMap":{},"nsPrev":{},"id":200,"ts":1714772882.702,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness he","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness her","loc":14}},"nsMap":{},"nsPrev":{},"id":201,"ts":1714772882.737,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness her","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness here","loc":14}},"nsMap":{},"nsPrev":{},"id":202,"ts":1714772882.837,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness here","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness here.","loc":14}},"nsMap":{},"nsPrev":{},"id":203,"ts":1714772882.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured goodness here.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured egoodness here.","loc":14}},"nsMap":{},"nsPrev":{},"id":204,"ts":1714772884.969,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured egoodness here.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured edgoodness here.","loc":14}},"nsMap":{},"nsPrev":{},"id":205,"ts":1714772885.122,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured edgoodness here.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured edigoodness here.","loc":14}},"nsMap":{},"nsPrev":{},"id":206,"ts":1714772885.207,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured edigoodness here.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editgoodness here.","loc":14}},"nsMap":{},"nsPrev":{},"id":207,"ts":1714772885.294,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editgoodness here.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editorgoodness here.","loc":14}},"nsMap":{},"nsPrev":{},"id":208,"ts":1714772885.381,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editorgoodness here.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here.","loc":14}},"nsMap":{},"nsPrev":{},"id":209,"ts":1714772885.564,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. ","loc":14}},"nsMap":{},"nsPrev":{},"id":210,"ts":1714772891.148,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. F","loc":14}},"nsMap":{},"nsPrev":{},"id":211,"ts":1714772891.273,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. F","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. For","loc":14}},"nsMap":{},"nsPrev":{},"id":212,"ts":1714772891.437,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. For","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fort","loc":14}},"nsMap":{},"nsPrev":{},"id":213,"ts":1714772891.744,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fort","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortun","loc":14}},"nsMap":{},"nsPrev":{},"id":214,"ts":1714772891.861,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortun","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortuna","loc":14}},"nsMap":{},"nsPrev":{},"id":215,"ts":1714772891.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortuna","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunat","loc":14}},"nsMap":{},"nsPrev":{},"id":216,"ts":1714772892.005,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunat","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunate","loc":14}},"nsMap":{},"nsPrev":{},"id":217,"ts":1714772892.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunate","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunatel","loc":14}},"nsMap":{},"nsPrev":{},"id":218,"ts":1714772892.17,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunatel","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately","loc":14}},"nsMap":{},"nsPrev":{},"id":219,"ts":1714772892.249,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately ","loc":14}},"nsMap":{},"nsPrev":{},"id":220,"ts":1714772892.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we","loc":14}},"nsMap":{},"nsPrev":{},"id":221,"ts":1714772892.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we ","loc":14}},"nsMap":{},"nsPrev":{},"id":222,"ts":1714772892.689,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we wo","loc":14}},"nsMap":{},"nsPrev":{},"id":223,"ts":1714772893.017,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we wo","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won","loc":14}},"nsMap":{},"nsPrev":{},"id":224,"ts":1714772893.116,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won'","loc":14}},"nsMap":{},"nsPrev":{},"id":225,"ts":1714772893.161,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won'","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't","loc":14}},"nsMap":{},"nsPrev":{},"id":226,"ts":1714772893.225,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't ","loc":14}},"nsMap":{},"nsPrev":{},"id":227,"ts":1714772893.301,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't e","loc":14}},"nsMap":{},"nsPrev":{},"id":228,"ts":1714772893.911,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't e","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't eb","loc":14}},"nsMap":{},"nsPrev":{},"id":229,"ts":1714772894.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't eb","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't e","loc":14}},"nsMap":{},"nsPrev":{},"id":230,"ts":1714772894.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't e","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't ","loc":14}},"nsMap":{},"nsPrev":{},"id":231,"ts":1714772894.689,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't b","loc":14}},"nsMap":{},"nsPrev":{},"id":232,"ts":1714772895.029,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't b","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't be","loc":14}},"nsMap":{},"nsPrev":{},"id":233,"ts":1714772895.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't be","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't be ","loc":14}},"nsMap":{},"nsPrev":{},"id":234,"ts":1714772895.236,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we won't be ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we ","loc":14}},"nsMap":{},"nsPrev":{},"id":235,"ts":1714772897.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we","loc":14}},"nsMap":{},"nsPrev":{},"id":236,"ts":1714772898.313,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'","loc":14}},"nsMap":{},"nsPrev":{},"id":237,"ts":1714772898.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'l","loc":14}},"nsMap":{},"nsPrev":{},"id":238,"ts":1714772898.765,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'l","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll","loc":14}},"nsMap":{},"nsPrev":{},"id":239,"ts":1714772898.922,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll ","loc":14}},"nsMap":{},"nsPrev":{},"id":240,"ts":1714772899.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll mo","loc":14}},"nsMap":{},"nsPrev":{},"id":241,"ts":1714772899.552,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll mo","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move","loc":14}},"nsMap":{},"nsPrev":{},"id":242,"ts":1714772899.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move o","loc":14}},"nsMap":{},"nsPrev":{},"id":243,"ts":1714772899.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move o","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move of","loc":14}},"nsMap":{},"nsPrev":{},"id":244,"ts":1714772899.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move of","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off","loc":14}},"nsMap":{},"nsPrev":{},"id":245,"ts":1714772900.086,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off ","loc":14}},"nsMap":{},"nsPrev":{},"id":246,"ts":1714772901.635,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off o","loc":14}},"nsMap":{},"nsPrev":{},"id":247,"ts":1714772901.799,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off o","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of","loc":14}},"nsMap":{},"nsPrev":{},"id":248,"ts":1714772901.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of t","loc":14}},"nsMap":{},"nsPrev":{},"id":249,"ts":1714772901.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of t","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of th","loc":14}},"nsMap":{},"nsPrev":{},"id":250,"ts":1714772902.047,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of th","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them","loc":14}},"nsMap":{},"nsPrev":{},"id":251,"ts":1714772902.279,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them ","loc":14}},"nsMap":{},"nsPrev":{},"id":252,"ts":1714772902.78,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them q","loc":14}},"nsMap":{},"nsPrev":{},"id":253,"ts":1714772904.532,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them q","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them qui","loc":14}},"nsMap":{},"nsPrev":{},"id":254,"ts":1714772904.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them qui","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quick","loc":14}},"nsMap":{},"nsPrev":{},"id":255,"ts":1714772904.786,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quick","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly","loc":14}},"nsMap":{},"nsPrev":{},"id":256,"ts":1714772905.173,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n\n","loc":14}},"nsMap":{},"nsPrev":{},"id":257,"ts":1714772905.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n\n","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n/","loc":14}},"nsMap":{},"nsPrev":{},"id":258,"ts":1714772905.97,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n/","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// ","loc":14}},"nsMap":{},"nsPrev":{},"id":259,"ts":1714772906.101,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as","loc":14}},"nsMap":{},"nsPrev":{},"id":260,"ts":1714772906.323,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as ","loc":14}},"nsMap":{},"nsPrev":{},"id":261,"ts":1714772906.397,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we","loc":14}},"nsMap":{},"nsPrev":{},"id":262,"ts":1714772906.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we ","loc":14}},"nsMap":{},"nsPrev":{},"id":263,"ts":1714772906.659,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we ge","loc":14}},"nsMap":{},"nsPrev":{},"id":264,"ts":1714772906.912,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we ge","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get","loc":14}},"nsMap":{},"nsPrev":{},"id":265,"ts":1714772907.024,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get ","loc":14}},"nsMap":{},"nsPrev":{},"id":266,"ts":1714772907.085,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get in","loc":14}},"nsMap":{},"nsPrev":{},"id":267,"ts":1714772907.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get in","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get int","loc":14}},"nsMap":{},"nsPrev":{},"id":268,"ts":1714772907.315,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get int","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into","loc":14}},"nsMap":{},"nsPrev":{},"id":269,"ts":1714772907.399,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into ","loc":14}},"nsMap":{},"nsPrev":{},"id":270,"ts":1714772907.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into ","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into se","loc":14}},"nsMap":{},"nsPrev":{},"id":271,"ts":1714772907.722,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into se","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into sel","loc":14}},"nsMap":{},"nsPrev":{},"id":272,"ts":1714772907.778,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into sel","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self","loc":14}},"nsMap":{},"nsPrev":{},"id":273,"ts":1714772907.835,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-","loc":14}},"nsMap":{},"nsPrev":{},"id":274,"ts":1714772907.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-ho","loc":14}},"nsMap":{},"nsPrev":{},"id":275,"ts":1714772908.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-ho","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-host","loc":14}},"nsMap":{},"nsPrev":{},"id":276,"ts":1714772908.434,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-host","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosti","loc":14}},"nsMap":{},"nsPrev":{},"id":277,"ts":1714772908.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosti","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hostin","loc":14}},"nsMap":{},"nsPrev":{},"id":278,"ts":1714772908.615,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hostin","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting","loc":14}},"nsMap":{},"nsPrev":{},"id":279,"ts":1714772908.657,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting l","loc":14}},"nsMap":{},"nsPrev":{},"id":280,"ts":1714772908.836,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting l","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting lan","loc":14}},"nsMap":{},"nsPrev":{},"id":281,"ts":1714772909.082,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting lan","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":282,"ts":1714772909.25,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":";type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":283,"ts":1714772920.003,"libraryRoot":""},{"id":284,"meta":{},"metaPrev":{},"revert":283,"prev":{"14":{"type":"raw-code","lang":"javascript","raw":";type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1714772921.101,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"idx":14,"type":"end"}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string.\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":285,"ts":1714772923.023,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":286,"ts":1714772923.171,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"22dcf8b2-852c-4062-a235-3150b52701e9"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":"22dcf8b2-852c-4062-a235-3150b52701e9"}]}],"prev":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. The \"structured\" part refers to the fact that the editor's \"source of truth\" representation of your source code is not a long sequence of utf-8 characters, but rather \"structured data\". For many structured editors, the structure of the data is the Abstract Syntax Tree (AST) of the given programming language. Typical programming languages have node types for expressions (variables, numbers, strings, function application, lambdas, array & object literals, infix boolean and prefix unary operators), statements (control structures such as ","styles":{}},{"type":"text","text":"if","styles":{"code":true}},{"type":"text","text":", ","styles":{}},{"type":"text","text":"for","styles":{"code":true}},{"type":"text","text":", and ","styles":{}},{"type":"text","text":"while","styles":{"code":true}},{"type":"text","text":", function and class declaration), and, types (type variables, type application).","styles":{}}],"children":[]},{"id":"4db72981-1cc1-4f35-8e3c-fb37cccbf403","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This has the downside of being quite complicated; both on the implementation side (ensuring that rendering, formatting, and editing each node type works as intended is a huge job) but more importantly there's a lot of mental overhead for the user, because key strokes might do different things depending on what kind of Node your cursor is in, so there's a ton to keep track of.","styles":{}}],"children":[]},{"id":"8e3f048c-0af6-4d0f-a7ed-0ffd4bf406a3","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"In an attempt to avoid these downsides, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions. In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of text characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some notable features of this structured editor:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\". Deleting a close-paren deletes the whole group.","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\". Adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. error underlines & hover information are trivially preserved.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is currently inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced in the CST. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with: the \"Concrete Syntax Tree\". The \"evaluator\" for this page is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]},{"id":"e8c14d10-4142-4e52-9720-460043746437","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the TypeScript type of a CST node (abbreviated to include only the variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"rich-text","contents":[{"id":"22dcf8b2-852c-4062-a235-3150b52701e9","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This tutorial takes place in a structured editor, which has some important differences from a standard text editor. The \"structured\" part refers to the fact that the editor's \"source of truth\" representation of your source code is not a long sequence of utf-8 characters, but rather \"structured data\". For many structured editors, the structure of the data is the Abstract Syntax Tree (AST) of the given programming language. Typical programming languages have node types for expressions (variables, numbers, strings, function application, lambdas, array & object literals, infix boolean and prefix unary operators), statements (control structures such as ","styles":{}},{"type":"text","text":"if","styles":{"code":true}},{"type":"text","text":", ","styles":{}},{"type":"text","text":"for","styles":{"code":true}},{"type":"text","text":", and ","styles":{}},{"type":"text","text":"while","styles":{"code":true}},{"type":"text","text":", function and class declaration), and, types (type variables, type application).","styles":{}}],"children":[]},{"id":"4db72981-1cc1-4f35-8e3c-fb37cccbf403","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This has the downside of being quite complicated; both on the implementation side (ensuring that rendering, formatting, and editing each node type works as intended is a huge job) but more importantly: there's a lot of mental overhead for the user, because key strokes might do different things depending on what kind of Node your cursor is in, so you have to be aware of what kind of node (out of dozens of types) you are currently editing.","styles":{}}],"children":[]},{"id":"8e3f048c-0af6-4d0f-a7ed-0ffd4bf406a3","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"In an attempt to avoid these downsides, this editor works on what I call the \"Concrete Syntax Tree\"; essentially lisp s-expressions (identifiers, strings, lists, and arrays). In my opinion, this strikes a nice balance between the benefits you get from moving beyond \"a jumble of text characters in a file\" while still keeping the representation simple enough that it doesn't get in the way of the editing experience.","styles":{}}],"children":[]},{"id":"65570ae8-7604-4f74-b8b4-72d7a8252b0a","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some notable features of this structured editor:","styles":{}}],"children":[]},{"id":"e4570bf6-ecae-4391-b7a9-00c786111bfb","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"it's impossible to have \"unbalanced parenthesis\" or a \"missing close-quote\". Deleting a close-paren deletes the whole group.","styles":{}}],"children":[]},{"id":"17e00aa5-b109-42b6-8f05-3c8d582c273a","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"code formatting is automatic (a la prettier)","styles":{}}],"children":[]},{"id":"cd8bc2b2-a1ba-4143-b4e6-91420240f913","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"AST locations are much more precise than \"line & column\". Adding code before or after a given identifier doesn't cause the editor to \"lose track of it\"; e.g. error underlines & hover information are trivially preserved.","styles":{}}],"children":[]},{"id":"eda7b944-66bf-43a0-9cdb-dbdf2a837871","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"we can attach ","styles":{}},{"type":"text","text":"meta-data","styles":{"bold":true}},{"type":"text","text":" to individual AST nodes; for example marking a node that we would like to be \"traced\" during the next execution.","styles":{}}],"children":[]},{"id":"237ad83e-a83c-4e77-83ca-f8e4f14abf5e","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"rendering gets more interesting! This rich text block you're reading is technically a comment (as far as the compiler is concerned). Later on you'll see the \"fixture test render plugin\", which takes a toplevel expression of a certain form and renders a nice table of inputs & outputs, highlighting any tests that are failing.","styles":{}}],"children":[]},{"id":"ebeb2d70-82c5-44f1-974a-68050321cba1","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"navigation has lots of nice affordances; e.g. typing ","styles":{}},{"type":"text","text":")","styles":{"code":true}},{"type":"text","text":" will take you to the end of whatever s-expression your cursor is currently inside of.","styles":{}}],"children":[]},{"id":"f4ebf65a-abd0-4ab4-9374-9cc7f84320ca","type":"bulletListItem","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"crucially, I've put a lot of effort into making the typing experience as un-surprising as possible. If you're looking at some code, typing in each of the characters of the plain-text representation in order results in that code getting reproduced in the CST. (If you're tried any other structured editors before, you'll know that this is rarely the case!)","styles":{}}],"children":[]},{"id":"478e2a34-cfda-49a3-ae1e-fe3c822725b2","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Let's familiarize ourselves with the kinds of syntax we'll be working with: the \"Concrete Syntax Tree\". The \"evaluator\" for this page is set to ","styles":{}},{"type":"text","text":"REPR","styles":{"code":true}},{"type":"text","text":", which simply outputs the JSON representation of the CST for a given toplevel term.","styles":{}}],"children":[]},{"id":"e8c14d10-4142-4e52-9720-460043746437","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the TypeScript type of a CST node (abbreviated to include only the variants that our parser will be concerned with).","styles":{}}],"children":[]}],"loc":2}},"nsMap":{},"nsPrev":{},"id":287,"ts":1714772963.592,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n    \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":288,"ts":1714773065.557,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n    \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n   \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":289,"ts":1714773066.057,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n   \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n  \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":290,"ts":1714773066.326,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n  \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":291,"ts":1714773066.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":292,"ts":1714773067.063,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n|\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":293,"ts":1714773067.306,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n|\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":294,"ts":1714773067.421,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":295,"ts":1714773067.544,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {t\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":296,"ts":1714773067.803,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {t\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {typ\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":297,"ts":1714773067.933,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {typ\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":298,"ts":1714773067.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type:\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":299,"ts":1714773068.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type:\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":300,"ts":1714773068.331,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: '\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":301,"ts":1714773068.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: '\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'sp\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":302,"ts":1714773068.637,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'sp\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spre\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":303,"ts":1714773068.834,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spre\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'sprea\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":304,"ts":1714773068.932,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'sprea\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":305,"ts":1714773068.983,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread'\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":306,"ts":1714773069.039,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread'\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":307,"ts":1714773069.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', c\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":308,"ts":1714773069.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', c\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', con\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":309,"ts":1714773070.101,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', con\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', cont\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":310,"ts":1714773070.134,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', cont\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', conte\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":311,"ts":1714773070.223,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', conte\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', conten\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":312,"ts":1714773070.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', conten\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":313,"ts":1714773070.437,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents:\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":314,"ts":1714773070.75,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents:\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":315,"ts":1714773070.846,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: N\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":316,"ts":1714773071.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: N\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: No\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":317,"ts":1714773071.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: No\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":318,"ts":1714773071.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node,\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":319,"ts":1714773071.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node,\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, l\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":320,"ts":1714773071.566,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, l\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":321,"ts":1714773071.78,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc:\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":322,"ts":1714773071.99,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc:\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":323,"ts":1714773072.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: \n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: nu\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":324,"ts":1714773072.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: nu\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: num\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":325,"ts":1714773072.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: num\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: numb\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":326,"ts":1714773072.509,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: numb\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: number\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":327,"ts":1714773072.622,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: number\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":328,"ts":1714773072.894,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"child","at":0},{"idx":22,"type":"attribute","at":1},{"idx":23,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"inside"}]}],"prev":{"18":{"type":"array","values":[],"loc":18},"21":null,"22":null,"23":null},"meta":{},"metaPrev":{},"map":{"18":{"type":"array","values":[22],"loc":18},"21":{"type":"blank","loc":21},"22":{"type":"recordAccess","target":21,"items":[23],"loc":22},"23":{"type":"accessText","text":"","loc":23}},"nsMap":{},"nsPrev":{},"id":329,"ts":1714773081.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"child","at":0},{"idx":24,"type":"spread-contents"},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"child","at":0},{"idx":22,"type":"attribute","at":1},{"idx":23,"type":"subtext","at":0}]}],"prev":{"18":{"type":"array","values":[22],"loc":18},"22":{"type":"recordAccess","target":21,"items":[23],"loc":22},"23":{"type":"accessText","text":"","loc":23},"24":null},"meta":{},"metaPrev":{},"map":{"18":{"type":"array","values":[24],"loc":18},"22":null,"23":null,"24":{"type":"spread","contents":21,"loc":24}},"nsMap":{},"nsPrev":{},"id":330,"ts":1714773081.994,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"child","at":0},{"idx":24,"type":"spread-contents"},{"idx":21,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":5,"idx":0},{"type":"ns-top","idx":5},{"idx":4,"type":"child","at":3},{"idx":18,"type":"child","at":0},{"idx":24,"type":"spread-contents"},{"idx":21,"type":"start"}]}],"prev":{"21":{"type":"blank","loc":21}},"meta":{},"metaPrev":{},"map":{"21":{"type":"identifier","text":"b","loc":21}},"nsMap":{},"nsPrev":{},"id":331,"ts":1714773082.222,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n    \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":332,"ts":1714773100.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n    \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n   \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":333,"ts":1714773100.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n   \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n  \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":334,"ts":1714773100.999,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n  \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":335,"ts":1714773101.201,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":336,"ts":1714773101.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n/\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":337,"ts":1714773101.613,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n/\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n//\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":338,"ts":1714773101.802,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n//\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":339,"ts":1714773101.924,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":340,"ts":1714773103.532,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I'\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":341,"ts":1714773103.832,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I'\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":342,"ts":1714773103.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":343,"ts":1714773104.103,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've m\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":344,"ts":1714773104.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've m\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've ma\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":345,"ts":1714773104.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've ma\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":346,"ts":1714773104.537,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made t\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":347,"ts":1714773104.711,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made t\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made th\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":348,"ts":1714773104.868,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made th\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":349,"ts":1714773104.961,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the p\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":350,"ts":1714773105.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the p\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the pr\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":351,"ts":1714773105.555,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the pr\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the pro\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":352,"ts":1714773105.67,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the pro\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the prob\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":353,"ts":1714773105.757,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the prob\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the proba\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":354,"ts":1714773105.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the proba\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probabl\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":355,"ts":1714773106.051,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probabl\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":356,"ts":1714773106.136,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":357,"ts":1714773106.837,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-co\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":358,"ts":1714773107.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-co\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-con\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":359,"ts":1714773107.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-con\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-contr\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":360,"ts":1714773107.511,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-contr\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-contro\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":361,"ts":1714773107.56,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-contro\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controver\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":362,"ts":1714773107.907,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controver\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controvers\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":363,"ts":1714773108.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controvers\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversio\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":364,"ts":1714773108.266,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversio\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversion\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":365,"ts":1714773108.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversion\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversio\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":366,"ts":1714773108.713,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversio\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":367,"ts":1714773108.864,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":368,"ts":1714773109.088,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":369,"ts":1714773109.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial de\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":370,"ts":1714773111.212,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial de\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial dec\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":371,"ts":1714773111.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial dec\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial deci\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":372,"ts":1714773111.754,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial deci\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decis\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":373,"ts":1714773111.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decis\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":374,"ts":1714773112.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":375,"ts":1714773113.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision o\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":376,"ts":1714773113.216,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision o\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":377,"ts":1714773113.478,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":378,"ts":1714773113.617,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of u\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":379,"ts":1714773122.147,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of u\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of usi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":380,"ts":1714773122.323,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of usi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of usin\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":381,"ts":1714773122.406,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of usin\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":382,"ts":1714773122.574,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using on\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":383,"ts":1714773123.29,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using on\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":384,"ts":1714773123.556,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":385,"ts":1714773123.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":386,"ts":1714773123.873,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a tw\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":387,"ts":1714773124.627,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a tw\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":388,"ts":1714773124.67,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":389,"ts":1714773124.877,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-d\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":390,"ts":1714773125.167,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-d\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-do\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":391,"ts":1714773125.269,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-do\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":392,"ts":1714773125.365,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":393,"ts":1714773125.464,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot e\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":394,"ts":1714773125.649,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot e\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot el\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":395,"ts":1714773125.759,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot el\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ell\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":396,"ts":1714773126.281,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ell\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot elli\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":397,"ts":1714773126.419,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot elli\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellip\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":398,"ts":1714773126.636,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellip\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellips\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":399,"ts":1714773126.856,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellips\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":400,"ts":1714773126.963,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":401,"ts":1714773127.49,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":402,"ts":1714773129.91,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n/\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":403,"ts":1714773130.11,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n/\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n//\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":404,"ts":1714773130.257,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n//\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":405,"ts":1714773130.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// T\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":406,"ts":1714773131.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// T\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// Thi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":407,"ts":1714773131.832,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// Thi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":408,"ts":1714773131.868,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":409,"ts":1714773131.964,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This al\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":410,"ts":1714773132.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This al\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This all\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":411,"ts":1714773132.354,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This all\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":412,"ts":1714773132.541,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allow\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":413,"ts":1714773132.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allow\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":414,"ts":1714773133.057,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":415,"ts":1714773133.167,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows f\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":416,"ts":1714773134.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows f\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows fo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":417,"ts":1714773134.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows fo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":418,"ts":1714773134.613,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":419,"ts":1714773134.701,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":420,"ts":1714773134.824,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":421,"ts":1714773134.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a mo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":422,"ts":1714773135.199,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a mo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a mor\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":423,"ts":1714773135.221,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a mor\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":424,"ts":1714773135.302,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":425,"ts":1714773135.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fl\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":426,"ts":1714773135.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fl\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more flu\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":427,"ts":1714773135.759,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more flu\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more flui\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":428,"ts":1714773136.285,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more flui\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":429,"ts":1714773136.645,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":430,"ts":1714773136.706,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid e\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":431,"ts":1714773136.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid e\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid ed\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":432,"ts":1714773137.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid ed\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid edi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":433,"ts":1714773137.191,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid edi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid edit\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":434,"ts":1714773137.324,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid edit\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editin\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":435,"ts":1714773137.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editin\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":436,"ts":1714773137.511,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":437,"ts":1714773137.643,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing e\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":438,"ts":1714773137.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing e\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing ex\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":439,"ts":1714773138.114,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing ex\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing exp\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":440,"ts":1714773138.257,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing exp\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing exper\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":441,"ts":1714773138.394,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing exper\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":442,"ts":1714773138.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experie\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":443,"ts":1714773138.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experie\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experienc\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":444,"ts":1714773138.715,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experienc\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":445,"ts":1714773138.796,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience i\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":446,"ts":1714773138.927,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience i\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":447,"ts":1714773139.011,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":448,"ts":1714773139.032,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in m\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":449,"ts":1714773139.22,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in m\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":450,"ts":1714773139.354,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":451,"ts":1714773139.447,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my o\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":452,"ts":1714773139.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my o\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my op\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":453,"ts":1714773139.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my op\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":454,"ts":1714773140.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opini\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":455,"ts":1714773140.372,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opini\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":456,"ts":1714773140.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":457,"ts":1714773146.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":458,"ts":1714773146.99,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (o\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":459,"ts":1714773147.921,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (o\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (oth\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":460,"ts":1714773148.044,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (oth\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (other\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":461,"ts":1714773148.236,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (other\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherw\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":462,"ts":1714773148.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherw\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":463,"ts":1714773148.527,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwi\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":464,"ts":1714773148.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise,\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":465,"ts":1714773148.709,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise,\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":466,"ts":1714773149.068,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, tw\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":467,"ts":1714773152.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, tw\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":468,"ts":1714773152.143,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":469,"ts":1714773152.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two d\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":470,"ts":1714773152.586,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two d\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two do\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":471,"ts":1714773152.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two do\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":472,"ts":1714773152.795,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots w\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":473,"ts":1714773153.328,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots w\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots wo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":474,"ts":1714773153.406,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots wo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots wou\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":475,"ts":1714773153.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots wou\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots woul\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":476,"ts":1714773153.714,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots woul\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":477,"ts":1714773154.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":478,"ts":1714773154.123,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would b\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":479,"ts":1714773154.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would b\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would be\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":480,"ts":1714773154.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would be\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would be \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":481,"ts":1714773154.469,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots would be \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots wo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":482,"ts":1714773156.008,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots wo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots w\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":483,"ts":1714773156.254,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots w\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":484,"ts":1714773156.395,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":485,"ts":1714773156.571,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":486,"ts":1714773157.041,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n/\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":487,"ts":1714773157.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n/\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n//\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":488,"ts":1714773157.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n//\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":489,"ts":1714773157.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// wo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":490,"ts":1714773157.785,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// wo\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// wou\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":491,"ts":1714773157.84,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// wou\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":492,"ts":1714773158.016,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":493,"ts":1714773158.069,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would j\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":494,"ts":1714773158.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would j\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would jus\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":495,"ts":1714773158.378,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would jus\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":496,"ts":1714773158.455,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":497,"ts":1714773158.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just b\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":498,"ts":1714773158.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just b\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":499,"ts":1714773158.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be in\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":500,"ts":1714773160.089,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be in\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be inv\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":501,"ts":1714773160.187,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be inv\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be inva\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":502,"ts":1714773160.347,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be inva\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invali\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":503,"ts":1714773160.432,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invali\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":504,"ts":1714773160.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":505,"ts":1714773160.572,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid sy\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":506,"ts":1714773160.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid sy\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syn\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":507,"ts":1714773161.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syn\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid synt\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":508,"ts":1714773161.191,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid synt\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid synta\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":509,"ts":1714773161.343,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid synta\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":510,"ts":1714773161.571,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":511,"ts":1714773165.977,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(?\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":512,"ts":1714773166.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(?\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(?)\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":513,"ts":1714773166.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(?)\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(?\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":514,"ts":1714773168.739,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(?\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":515,"ts":1714773168.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax(\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":516,"ts":1714773168.979,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax,\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":517,"ts":1714773169.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax,\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":518,"ts":1714773169.67,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, a\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":519,"ts":1714773169.879,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, a\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, an\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":520,"ts":1714773169.952,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, an\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":521,"ts":1714773170.06,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and w\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":522,"ts":1714773170.304,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and w\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":523,"ts":1714773170.414,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":524,"ts":1714773170.578,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wa\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":525,"ts":1714773170.871,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wa\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who want\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":526,"ts":1714773171.081,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who want\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":527,"ts":1714773171.183,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":528,"ts":1714773171.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants \n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants t\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":529,"ts":1714773171.334,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants t\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants ta\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":530,"ts":1714773171.587,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants ta\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants t\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":531,"ts":1714773171.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants t\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants tha\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":532,"ts":1714773172.134,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants tha\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":533,"ts":1714773172.17,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that)\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":534,"ts":1714773172.43,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that)\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":535,"ts":1714773178.634,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":536,"ts":1714773184.9,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this  is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":537,"ts":1714773188.329,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this  is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this h is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":538,"ts":1714773188.455,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this h is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this her is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":539,"ts":1714773188.525,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this her is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":540,"ts":1714773188.67,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here  is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":541,"ts":1714773188.72,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here  is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here no is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":542,"ts":1714773188.932,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here no is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here node is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":543,"ts":1714773188.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here node is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this h is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":544,"ts":1714773193.161,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this h is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this  is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":545,"ts":1714773193.374,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this  is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":546,"ts":1714773193.616,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":547,"ts":1714773195.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":548,"ts":1714773195.419,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":549,"ts":1714773195.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n|\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":550,"ts":1714773195.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n|\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":551,"ts":1714773196.09,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":552,"ts":1714773196.234,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {t\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":553,"ts":1714773196.987,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {t\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {ty\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":554,"ts":1714773197.12,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {ty\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {typ\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":555,"ts":1714773197.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {typ\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":556,"ts":1714773197.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":557,"ts":1714773197.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: '\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":558,"ts":1714773197.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: '\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'ra\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":559,"ts":1714773197.96,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'ra\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":560,"ts":1714773198.062,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":561,"ts":1714773198.155,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-c\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":562,"ts":1714773198.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-c\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-cod\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":563,"ts":1714773198.461,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-cod\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-code\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":564,"ts":1714773198.992,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| {type: 'raw-code\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":565,"ts":1714773200.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n| \n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n|\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":566,"ts":1714773200.42,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n|\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":567,"ts":1714773200.559,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":568,"ts":1714773200.908,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"javascript source\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"r\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":569,"ts":1714773205.106,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"r\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":570,"ts":1714773205.244,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw \" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":571,"ts":1714773205.32,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw \" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw c\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":572,"ts":1714773205.498,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw c\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw cod\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":573,"ts":1714773205.611,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw cod\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw code\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":574,"ts":1714773205.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw code\" type node, which is, sadly, just a big ol' text string;\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw code\" type node, which is, sadly, just a big ol' text string\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":575,"ts":1714773210.392,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw code\" type node, which is, sadly, just a big ol' text string\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":576,"ts":1714773210.614,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this  is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":577,"ts":1714773225.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this  is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this h is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":578,"ts":1714773225.979,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this h is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this her is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":579,"ts":1714773226.057,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this her is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":580,"ts":1714773226.169,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"type":"rich-text","idx":19,"sel":"e36ae16e-cd08-42be-821b-f5068cee7a9d"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"type":"rich-text","idx":19,"sel":"e36ae16e-cd08-42be-821b-f5068cee7a9d"}]}],"prev":{"19":{"type":"rich-text","contents":[{"id":"e36ae16e-cd08-42be-821b-f5068cee7a9d","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"And here's some code. Feel free to play around with it; everything on this page is editable.","styles":{}}],"children":[]}],"loc":19}},"meta":{},"metaPrev":{},"map":{"19":{"type":"rich-text","contents":[{"id":"e36ae16e-cd08-42be-821b-f5068cee7a9d","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"And here's some code! Feel free to play around with it; everything on this page is editable.","styles":{}}],"children":[]}],"loc":19}},"nsMap":{},"nsPrev":{},"id":581,"ts":1714773239.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis .\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":582,"ts":1714773340.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis .\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis f.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":583,"ts":1714773340.656,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis f.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis fo.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":584,"ts":1714773340.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis fo.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":585,"ts":1714773340.835,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":586,"ts":1714773341.351,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n/.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":587,"ts":1714773341.685,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n/.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// .\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":588,"ts":1714773341.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// .\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// s.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":589,"ts":1714773342.09,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// s.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spr.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":590,"ts":1714773342.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spr.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spre.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":591,"ts":1714773342.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spre.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spread.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":592,"ts":1714773342.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spread.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":593,"ts":1714773342.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads.\n// This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads.\n/ This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":594,"ts":1714773344.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads.\n/ This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads.\n This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":595,"ts":1714773344.674,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads.\n This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":596,"ts":1714773344.971,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise, two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":597,"ts":1714773349.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\ntwo dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":598,"ts":1714773349.809,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\ntwo dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n/two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":599,"ts":1714773350.144,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n/two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n//two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":600,"ts":1714773350.298,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n//two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":601,"ts":1714773350.45,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\n// would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\n//would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":602,"ts":1714773350.975,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\n//would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\n/would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":603,"ts":1714773351.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\n/would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\nwould just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":604,"ts":1714773351.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots\nwould just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dotswould just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":605,"ts":1714773351.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dotswould just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":606,"ts":1714773351.901,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"idx":14,"type":"end"}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that).\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":607,"ts":1714773360.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). T\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":608,"ts":1714773361.471,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). T\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). Th\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":609,"ts":1714773361.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). Th\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":610,"ts":1714773361.847,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":611,"ts":1714773361.926,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The si\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":612,"ts":1714773362.185,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The si\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The sin\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":613,"ts":1714773362.273,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The sin\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The sing\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":614,"ts":1714773362.704,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The sing\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The singl\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":615,"ts":1714773362.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The singl\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":616,"ts":1714773362.977,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":617,"ts":1714773363.069,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single d\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":618,"ts":1714773363.597,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single d\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single do\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":619,"ts":1714773363.68,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single do\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":620,"ts":1714773363.785,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":621,"ts":1714773363.891,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot i\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":622,"ts":1714773364.041,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot i\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":623,"ts":1714773364.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":624,"ts":1714773364.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n/\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":625,"ts":1714773364.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n/\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n//\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":626,"ts":1714773364.735,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n//\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":627,"ts":1714773364.833,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// re\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":628,"ts":1714773364.97,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// re\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// res\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":629,"ts":1714773365.021,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// res\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// rese\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":630,"ts":1714773365.192,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// rese\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// resev\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":631,"ts":1714773365.481,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// resev\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// rese\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":632,"ts":1714773365.975,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// rese\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserv\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":633,"ts":1714773366.077,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserv\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserve\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":634,"ts":1714773366.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserve\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserver\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":635,"ts":1714773366.282,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserver\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserve\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":636,"ts":1714773366.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserve\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":637,"ts":1714773366.832,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":638,"ts":1714773367.308,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved f\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":639,"ts":1714773367.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved f\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":640,"ts":1714773367.574,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":641,"ts":1714773367.718,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for b\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":642,"ts":1714773379.781,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for b\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":643,"ts":1714773379.923,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":644,"ts":1714773380.668,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-a\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":645,"ts":1714773381.124,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-a\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-ac\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":646,"ts":1714773381.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-ac\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-a\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":647,"ts":1714773382.411,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-a\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-at\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":648,"ts":1714773382.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-at\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attr\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":649,"ts":1714773382.644,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attr\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attri\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":650,"ts":1714773382.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attri\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attrib\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":651,"ts":1714773382.922,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attrib\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribu\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":652,"ts":1714773383.025,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribu\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":653,"ts":1714773383.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":654,"ts":1714773383.329,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute sy\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":655,"ts":1714773383.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute sy\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute synt\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":656,"ts":1714773384.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute synt\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute synta\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":657,"ts":1714773384.362,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute synta\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":658,"ts":1714773384.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax,\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":659,"ts":1714773385.15,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax,\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":660,"ts":1714773385.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, on\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":661,"ts":1714773385.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, on\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, onc\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":662,"ts":1714773385.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, onc\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":663,"ts":1714773385.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":664,"ts":1714773385.787,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once ou\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":665,"ts":1714773385.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once ou\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":666,"ts":1714773386.114,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":667,"ts":1714773386.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our l\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":668,"ts":1714773386.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our l\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our la\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":669,"ts":1714773386.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our la\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our lan\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":670,"ts":1714773387.137,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our lan\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our lang\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":671,"ts":1714773387.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our lang\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our langua\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":672,"ts":1714773387.321,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our langua\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":673,"ts":1714773387.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":674,"ts":1714773387.754,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language s\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":675,"ts":1714773387.968,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language s\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language su\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":676,"ts":1714773388.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language su\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language sup\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":677,"ts":1714773388.274,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language sup\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language suppo\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":678,"ts":1714773388.443,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language suppo\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language suppor\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":679,"ts":1714773388.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language suppor\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language support\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":680,"ts":1714773388.558,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language support\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":681,"ts":1714773388.76,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports re\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":682,"ts":1714773389.082,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports re\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports rec\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":683,"ts":1714773389.284,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports rec\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports recor\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":684,"ts":1714773389.411,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports recor\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":685,"ts":1714773389.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":686,"ts":1714773389.7,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":687,"ts":1714773389.861,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":688,"ts":1714773389.984,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of so\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":689,"ts":1714773390.127,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of so\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of som\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":690,"ts":1714773390.22,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of som\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":691,"ts":1714773390.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":692,"ts":1714773390.364,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some \n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some s\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":693,"ts":1714773390.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some s\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some so\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":694,"ts":1714773390.623,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some so\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some sort\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":695,"ts":1714773390.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"prev":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some sort\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"meta":{},"metaPrev":{},"map":{"14":{"type":"raw-code","lang":"javascript","raw":"type Node =\n| {type: 'identifier', text: string, loc: number} // abc, 123, a-b%c@, >=, >>=\n| {type: 'list', values: Node[], loc: number}\n| {type: 'array', values: Node[], loc: number}\n| {type: 'string', first: {type: 'stringText', text: string, loc: number},\n    templates: {expr: Node, suffix: {type: 'stringText', text: string, loc: number}},\n    loc: number}\n// I've made the probably-controversial decision of using only a two-dot ellipsis for\n// spreads. This allows for a more fluid editing experience in my opinion (otherwise,\n// two dots would just be invalid syntax, and who wants that). The single dot is\n// reserved for bare-attribute syntax, once our language supports records of some sort.\n| {type: 'spread', contents: Node, loc: number}\n\n// this here is a \"raw code\" type node, which is, sadly, just a big ol' text string,\n// no structured editor goodness here. Fortunately we'll move off of them quickly\n// as we get into self-hosting land.","loc":14}},"nsMap":{},"nsPrev":{},"id":696,"ts":1714773391.149,"libraryRoot":""}],"clipboard":[],"hover":[],"regs":{},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":15,"idx":0},{"type":"ns-top","idx":15},{"type":"rich-text","idx":14,"sel":null}]}],"cards":[{"path":[],"top":0}],"nsMap":{"0":{"id":0,"top":-1,"children":[1,3,15,20,5],"type":"normal"},"1":{"id":1,"top":0,"children":[],"type":"normal","display":{"id":"none","options":null}},"3":{"type":"normal","top":2,"children":[],"id":3,"display":{"id":"none","options":null},"collapsed":false},"5":{"type":"normal","top":4,"children":[],"id":5,"display":{"id":"pre","options":null},"collapsed":"pinned"},"15":{"type":"normal","top":14,"children":[],"id":15,"display":{"id":"none","options":null}},"20":{"type":"normal","top":19,"children":[],"id":20,"display":{"id":"none","options":null}}},"highlight":[],"evaluator":":repr:"}