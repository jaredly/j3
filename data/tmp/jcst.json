{"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labels.","styles":{}}],"children":[]}],"loc":0},"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.loc}\n  }\n}","loc":2},"21":{"loc":21,"type":"rich-text","contents":[{"id":"8e76a41f-02ae-4fa5-beb2-1c769056e297","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":2},"content":[{"type":"text","text":"Prelude","styles":{}}],"children":[]},{"id":"eee0519b-267f-4dba-b79e-d5c8d1cac4ac","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Some basic handy functions","styles":{}}],"children":[]}]},"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}\nconst unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}\nconst pair = (a, b) => ({type: ',', 0: a, 1: b})\n","loc":23},"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2]}`\n    }\n};\n","loc":37},"46":{"type":"list","values":[50,51,52],"loc":46},"50":{"type":"identifier","text":",","loc":50},"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToString(fromNode(v))","loc":51},"52":{"type":"array","values":[56,61,74,86],"loc":52},"53":{"type":"list","values":[54,55],"loc":53},"54":{"type":"identifier","text":"@","loc":54},"55":{"type":"identifier","text":"10","loc":55},"56":{"type":"list","values":[57,53,200],"loc":56},"57":{"type":"identifier","text":",","loc":57},"58":{"type":"blank","loc":58},"59":{"type":"blank","loc":59},"61":{"type":"list","values":[62,63,201],"loc":61},"62":{"type":"identifier","text":",","loc":62},"63":{"type":"list","values":[67,68],"loc":63},"64":{"type":"blank","loc":64},"67":{"type":"identifier","text":"@","loc":67},"68":{"type":"array","values":[69,70,71,72],"loc":68},"69":{"type":"identifier","text":"1","loc":69},"70":{"type":"comment","text":"ya","loc":70},"71":{"type":"identifier","text":"2","loc":71},"72":{"type":"blank","loc":72},"74":{"type":"list","values":[75,76,202],"loc":74},"75":{"type":"identifier","text":",","loc":75},"76":{"type":"list","values":[78,79],"loc":76},"77":{"type":"blank","loc":77},"78":{"type":"identifier","text":"@","loc":78},"79":{"type":"string","first":80,"templates":[{"expr":81,"suffix":82}],"loc":79},"80":{"type":"stringText","loc":80,"text":"hi "},"81":{"type":"identifier","text":"1","loc":81},"82":{"type":"stringText","text":" 12","loc":82},"86":{"type":"list","values":[87,88,209],"loc":86},"87":{"type":"identifier","text":",","loc":87},"88":{"type":"record","values":[92,93,208],"loc":88},"89":{"type":"blank","loc":89},"92":{"type":"identifier","text":"hi","loc":92},"93":{"type":"identifier","text":"10","loc":93},"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: node.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97},"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fns', fromNode, toNode})","loc":99},"101":{"type":"blank","loc":101},"102":{"type":"list","values":[104,105,106],"loc":102},"104":{"type":"identifier","text":",","loc":104},"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNode(toNode(fromNode(v))))","loc":105},"106":{"type":"array","values":[107,114,127],"loc":106},"107":{"type":"list","values":[108,109,125],"loc":107},"108":{"type":"identifier","text":",","loc":108},"109":{"type":"list","values":[110,111],"loc":109},"110":{"type":"identifier","text":"@","loc":110},"111":{"type":"identifier","text":"10","loc":111},"112":{"type":"blank","loc":112},"113":{"type":"blank","loc":113},"114":{"type":"list","values":[115,116,126],"loc":114},"115":{"type":"identifier","text":",","loc":115},"116":{"type":"list","values":[118,119],"loc":116},"117":{"type":"blank","loc":117},"118":{"type":"identifier","text":"@","loc":118},"119":{"type":"array","values":[120,121],"loc":119},"120":{"type":"identifier","text":"1","loc":120},"121":{"type":"list","values":[122,123],"loc":121},"122":{"type":"identifier","text":"2","loc":122},"123":{"type":"identifier","text":"3","loc":123},"124":{"type":"blank","loc":124},"125":{"type":"raw-code","lang":"javascript","loc":125,"raw":"true"},"126":{"type":"raw-code","lang":"javascript","loc":126,"raw":"true"},"127":{"type":"list","values":[128,129,140],"loc":127},"128":{"type":"identifier","text":",","loc":128},"129":{"type":"list","values":[131,132],"loc":129},"130":{"type":"blank","loc":130},"131":{"type":"identifier","text":"@","loc":131},"132":{"type":"record","values":[133,134,141,138,146],"loc":132},"133":{"type":"identifier","text":"a","loc":133},"134":{"type":"identifier","text":"b","loc":134},"135":{"type":"identifier","text":"two","loc":135},"138":{"type":"spread","contents":135,"loc":138},"140":{"type":"raw-code","lang":"javascript","loc":140,"raw":"true"},"141":{"type":"string","first":142,"templates":[],"loc":141},"142":{"type":"stringText","loc":142,"text":"two"},"143":{"type":"blank","loc":143},"146":{"type":"spread","contents":143,"loc":146},"148":{"type":"recordAccess","target":147,"items":[149],"loc":148},"149":{"type":"accessText","text":"","loc":149},"151":{"type":"blank","loc":151},"152":{"type":"blank","loc":152},"154":{"type":"blank","loc":154},"155":{"type":"blank","loc":155},"156":{"loc":156,"type":"list","values":[159,160,213,161,167,173,181]},"159":{"loc":159,"type":"identifier","text":"deftype"},"160":{"loc":160,"type":"identifier","text":"cst"},"161":{"loc":161,"type":"list","values":[162,163,166]},"162":{"loc":162,"type":"identifier","text":"cst/list"},"163":{"loc":163,"type":"list","values":[164,165]},"164":{"loc":164,"type":"identifier","text":"list"},"165":{"loc":165,"type":"identifier","text":"cst"},"166":{"loc":166,"type":"identifier","text":"int"},"167":{"loc":167,"type":"list","values":[168,169,172]},"168":{"loc":168,"type":"identifier","text":"cst/array"},"169":{"loc":169,"type":"list","values":[170,171]},"170":{"loc":170,"type":"identifier","text":"list"},"171":{"loc":171,"type":"identifier","text":"cst"},"172":{"loc":172,"type":"identifier","text":"int"},"173":{"loc":173,"type":"list","values":[174,175,176]},"174":{"loc":174,"type":"identifier","text":"cst/spread"},"175":{"loc":175,"type":"identifier","text":"cst"},"176":{"loc":176,"type":"identifier","text":"int"},"181":{"loc":181,"type":"list","values":[182,183,184,191]},"182":{"loc":182,"type":"identifier","text":"cst/string"},"183":{"loc":183,"type":"identifier","text":"string"},"184":{"loc":184,"type":"list","values":[185,186]},"185":{"loc":185,"type":"identifier","text":"list"},"186":{"loc":186,"type":"list","values":[187,188,189,190]},"187":{"loc":187,"type":"identifier","text":","},"188":{"loc":188,"type":"identifier","text":"cst"},"189":{"loc":189,"type":"identifier","text":"string"},"190":{"loc":190,"type":"identifier","text":"int"},"191":{"loc":191,"type":"identifier","text":"int"},"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be producing:","styles":{}}],"children":[]}],"loc":192},"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the parser.","styles":{}}],"children":[]}],"loc":194},"196":{"type":"blank","loc":196},"197":{"type":"blank","loc":197},"198":{"type":"blank","loc":198},"199":{"type":"blank","loc":199},"200":{"type":"raw-code","lang":"javascript","loc":200,"raw":"\"10:55\""},"201":{"type":"raw-code","lang":"javascript","loc":201,"raw":"\"[1:69 2:71]:68\""},"202":{"type":"raw-code","lang":"javascript","loc":202,"raw":"'\"hi ${1:81} 12:82\":79'"},"204":{"type":"blank","loc":204},"205":{"type":"identifier","text":"a","loc":205},"208":{"type":"spread","contents":205,"loc":208},"209":{"type":"raw-code","lang":"javascript","loc":209,"raw":"\"{hi:92 10:93 ..a:205:208}:88\""},"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are working.","styles":{}}],"children":[]}],"loc":210},"212":{"type":"blank","loc":212},"213":{"loc":213,"type":"list","values":[214,215,216]},"214":{"loc":214,"type":"identifier","text":"cst/id"},"215":{"loc":215,"type":"identifier","text":"string"},"216":{"loc":216,"type":"identifier","text":"int"},"-1":{"type":"list","values":[0],"loc":-1}},"root":-1,"meta":{},"history":[{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array'\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1878,"ts":1714665586.325,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array'\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1879,"ts":1714665586.473,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', v\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1880,"ts":1714665586.669,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', v\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', val\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1881,"ts":1714665586.797,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', val\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', valu\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1882,"ts":1714665586.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', valu\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1883,"ts":1714665587.021,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1884,"ts":1714665587.274,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1885,"ts":1714665587.405,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1886,"ts":1714665587.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1887,"ts":1714665587.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.ma\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1888,"ts":1714665587.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.ma\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1889,"ts":1714665588.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1890,"ts":1714665588.256,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(v\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1891,"ts":1714665588.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(v\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(val\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1892,"ts":1714665588.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(val\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valu\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1893,"ts":1714665588.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valu\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(value\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1894,"ts":1714665588.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(value\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueT\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1895,"ts":1714665588.947,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueT\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueTo\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1896,"ts":1714665589.058,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueTo\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToN\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1897,"ts":1714665589.235,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToN\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNod\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1898,"ts":1714665589.493,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNod\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1899,"ts":1714665589.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode)\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1900,"ts":1714665589.778,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode)\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode),\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1901,"ts":1714665590.499,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode),\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1902,"ts":1714665590.596,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), l\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1903,"ts":1714665590.837,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), l\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1904,"ts":1714665590.99,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1905,"ts":1714665591.22,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1906,"ts":1714665591.27,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1907,"ts":1714665591.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1908,"ts":1714665591.49,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1)\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1909,"ts":1714665591.667,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1)\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1910,"ts":1714665592.423,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1911,"ts":1714665592.619,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n      \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1912,"ts":1714665593.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n      \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1913,"ts":1714665593.669,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1914,"ts":1714665594.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n  \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1915,"ts":1714665594.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n  \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1916,"ts":1714665594.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1917,"ts":1714665599.037,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    l\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1918,"ts":1714665599.562,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    l\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1919,"ts":1714665599.663,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1920,"ts":1714665599.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let a\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1921,"ts":1714665599.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let a\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let arg\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1922,"ts":1714665600.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let arg\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1923,"ts":1714665600.503,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1924,"ts":1714665600.753,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args =\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1925,"ts":1714665600.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args =\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1926,"ts":1714665600.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = []\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1927,"ts":1714665601.131,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = []\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1928,"ts":1714665601.429,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1929,"ts":1714665601.612,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    f\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1930,"ts":1714665602.423,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    f\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    fo\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1931,"ts":1714665602.483,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    fo\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1932,"ts":1714665602.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1933,"ts":1714665602.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (le\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1934,"ts":1714665602.891,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (le\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1935,"ts":1714665602.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1936,"ts":1714665603.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1937,"ts":1714665603.107,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1938,"ts":1714665603.38,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=l\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1939,"ts":1714665603.619,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=l\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1940,"ts":1714665603.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1941,"ts":1714665604.245,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0;\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1942,"ts":1714665604.488,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0;\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1943,"ts":1714665604.784,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1944,"ts":1714665604.961,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1945,"ts":1714665605.121,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1946,"ts":1714665605.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1947,"ts":1714665605.323,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1948,"ts":1714665605.597,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v;\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1949,"ts":1714665605.829,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v;\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1950,"ts":1714665605.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1951,"ts":1714665606.078,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i+\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1952,"ts":1714665606.382,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i+\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1953,"ts":1714665606.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++)\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1954,"ts":1714665606.74,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++)\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1955,"ts":1714665606.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1956,"ts":1714665606.993,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1957,"ts":1714665607.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      a\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1958,"ts":1714665607.926,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      a\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1959,"ts":1714665608.107,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1960,"ts":1714665608.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.pu\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1961,"ts":1714665608.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.pu\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.pus\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1962,"ts":1714665608.615,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.pus\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1963,"ts":1714665608.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1964,"ts":1714665608.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1965,"ts":1714665608.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1966,"ts":1714665609.144,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1967,"ts":1714665609.39,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1968,"ts":1714665609.542,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i])\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1969,"ts":1714665609.752,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i])\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1970,"ts":1714665610.038,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n      \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1971,"ts":1714665610.445,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n      \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1972,"ts":1714665610.701,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1973,"ts":1714665612.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    re\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1974,"ts":1714665614.46,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    re\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    ret\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1975,"ts":1714665614.651,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    ret\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    retu\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1976,"ts":1714665614.711,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    retu\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1977,"ts":1714665614.8,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1978,"ts":1714665614.939,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1979,"ts":1714665615.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {t\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1980,"ts":1714665615.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {t\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {typ\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1981,"ts":1714665615.295,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {typ\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1982,"ts":1714665615.355,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type:\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1983,"ts":1714665615.571,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type:\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1984,"ts":1714665615.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: '\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1985,"ts":1714665615.753,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: '\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'li\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1986,"ts":1714665616.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'li\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1987,"ts":1714665616.254,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list'\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1988,"ts":1714665616.324,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list'\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list',\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1989,"ts":1714665616.679,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list',\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1990,"ts":1714665617.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', v\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1991,"ts":1714665617.728,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', v\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', val\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1992,"ts":1714665617.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', val\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', valu\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1993,"ts":1714665617.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', valu\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1994,"ts":1714665618.108,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values:\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1995,"ts":1714665619.309,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', value: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values:\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values:\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1996,"ts":1714665621.226,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values:\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1997,"ts":1714665622.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1998,"ts":1714665624.184,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":1999,"ts":1714665625.229,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{t\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2000,"ts":1714665625.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{t\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{typ\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2001,"ts":1714665625.564,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{typ\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2002,"ts":1714665625.627,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type:\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2003,"ts":1714665625.817,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type:\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2004,"ts":1714665625.912,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2005,"ts":1714665626.181,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"ide\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2006,"ts":1714665626.327,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"ide\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"iden\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2007,"ts":1714665626.381,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"iden\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"ide\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2008,"ts":1714665626.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"ide\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"id\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2009,"ts":1714665626.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"id\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2010,"ts":1714665627.003,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2011,"ts":1714665627.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \"\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2012,"ts":1714665627.285,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: '\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2013,"ts":1714665627.465,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: '\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'i\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2014,"ts":1714665627.795,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'i\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'ide\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2015,"ts":1714665628.01,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'ide\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'iden\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2016,"ts":1714665628.068,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'iden\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'ident\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2017,"ts":1714665628.222,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'ident\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identi\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2018,"ts":1714665628.327,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identi\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identif\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2019,"ts":1714665628.42,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identif\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifi\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2020,"ts":1714665628.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifi\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2021,"ts":1714665628.619,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier'\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2022,"ts":1714665628.681,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier'\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier',\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2023,"ts":1714665628.864,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier',\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2024,"ts":1714665628.952,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', te\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2025,"ts":1714665629.671,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', te\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', tex\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2026,"ts":1714665629.889,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', tex\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2027,"ts":1714665630.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text:\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2028,"ts":1714665630.285,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text:\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2029,"ts":1714665630.399,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2030,"ts":1714665632.277,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2031,"ts":1714665632.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.t\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2032,"ts":1714665632.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.t\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.typ\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2033,"ts":1714665632.623,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.typ\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2034,"ts":1714665632.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type,\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2035,"ts":1714665633.486,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type,\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2036,"ts":1714665633.617,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, l\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2037,"ts":1714665633.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, l\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2038,"ts":1714665633.871,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc:\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2039,"ts":1714665634.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc:\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2040,"ts":1714665634.546,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2041,"ts":1714665634.732,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2042,"ts":1714665634.81,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2043,"ts":1714665635.639,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1},\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2044,"ts":1714665635.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1},\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2045,"ts":1714665635.944,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, .\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2046,"ts":1714665636.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, .\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ..\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2047,"ts":1714665636.199,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ..\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2048,"ts":1714665636.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...a\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2049,"ts":1714665636.836,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...a\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2050,"ts":1714665637.022,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2051,"ts":1714665637.207,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.m\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2052,"ts":1714665637.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.m\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.ma\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2053,"ts":1714665637.463,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.ma\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2054,"ts":1714665637.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2055,"ts":1714665637.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(v\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2056,"ts":1714665637.84,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(v\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(val\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2057,"ts":1714665637.981,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(val\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valu\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2058,"ts":1714665638.049,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valu\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(value\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2059,"ts":1714665638.077,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(value\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueT\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2060,"ts":1714665638.332,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueT\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueTo\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2061,"ts":1714665638.46,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueTo\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToN\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2062,"ts":1714665638.612,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToN\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNo\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2063,"ts":1714665638.692,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNo\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2064,"ts":1714665638.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2065,"ts":1714665639.091,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)]\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2066,"ts":1714665640.816,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)]\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)],\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2067,"ts":1714665641.082,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)],\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2068,"ts":1714665641.166,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], l\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2069,"ts":1714665641.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], l\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2070,"ts":1714665641.397,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc:\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2071,"ts":1714665641.632,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc:\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: \n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2072,"ts":1714665641.717,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: \n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2073,"ts":1714665641.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2074,"ts":1714665641.879,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2075,"ts":1714665642.125,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2076,"ts":1714665645.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  i\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2077,"ts":1714665645.86,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  i\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2078,"ts":1714665645.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2079,"ts":1714665646.061,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (t\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2080,"ts":1714665646.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (t\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typ\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2081,"ts":1714665646.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typ\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (type\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2082,"ts":1714665646.551,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (type\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeo\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2083,"ts":1714665646.904,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeo\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2084,"ts":1714665647.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2085,"ts":1714665647.163,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2086,"ts":1714665647.372,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2087,"ts":1714665647.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v =\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2088,"ts":1714665647.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v =\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v ==\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2089,"ts":1714665647.806,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v ==\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v ===\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2090,"ts":1714665647.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v ===\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2091,"ts":1714665648.026,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === '\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2092,"ts":1714665648.131,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === '\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'str\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2093,"ts":1714665648.244,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'str\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'stri\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2094,"ts":1714665648.332,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'stri\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'strin\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2095,"ts":1714665648.377,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'strin\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2096,"ts":1714665648.412,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string'\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2097,"ts":1714665648.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string'\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string')\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2098,"ts":1714665648.829,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string')\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2099,"ts":1714665648.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2100,"ts":1714665649.093,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2101,"ts":1714665649.351,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    re\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2102,"ts":1714665650.795,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    re\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    ret\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2103,"ts":1714665650.978,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    ret\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    retur\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2104,"ts":1714665651.053,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    retur\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2105,"ts":1714665651.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2106,"ts":1714665651.256,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2107,"ts":1714665651.409,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {t\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2108,"ts":1714665651.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {t\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {typ\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2109,"ts":1714665651.68,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {typ\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2110,"ts":1714665651.737,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2111,"ts":1714665651.928,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2112,"ts":1714665651.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: '\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2113,"ts":1714665652.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: '\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'str\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2114,"ts":1714665652.517,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'str\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'stri\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2115,"ts":1714665652.593,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'stri\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'strin\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2116,"ts":1714665652.639,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'strin\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2117,"ts":1714665652.661,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string',\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2118,"ts":1714665652.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string',\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2119,"ts":1714665653.054,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', fi\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2120,"ts":1714665653.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', fi\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', firs\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2121,"ts":1714665654.061,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', firs\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2122,"ts":1714665655.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2123,"ts":1714665655.577,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2124,"ts":1714665655.673,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2125,"ts":1714665656.216,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2126,"ts":1714665656.402,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{t\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2127,"ts":1714665656.641,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{t\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{typ\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2128,"ts":1714665656.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{typ\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{type\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2129,"ts":1714665656.792,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{type\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{type:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2130,"ts":1714665657.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{type:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{type: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2131,"ts":1714665657.183,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{type: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2132,"ts":1714665657.903,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [{\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2133,"ts":1714665658.1,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: [\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2134,"ts":1714665658.277,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2135,"ts":1714665658.57,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {t\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2136,"ts":1714665658.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {t\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {typ\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2137,"ts":1714665658.862,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {typ\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2138,"ts":1714665658.914,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2139,"ts":1714665659.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2140,"ts":1714665659.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: '\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2141,"ts":1714665659.29,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: '\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'str\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2142,"ts":1714665659.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'str\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stri\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2143,"ts":1714665659.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stri\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'strin\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2144,"ts":1714665659.533,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'strin\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'string\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2145,"ts":1714665659.561,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'string\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringT\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2146,"ts":1714665659.781,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringT\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringTe\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2147,"ts":1714665659.95,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringTe\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringTex\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2148,"ts":1714665660.324,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringTex\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2149,"ts":1714665660.474,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText'\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2150,"ts":1714665661.033,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText'\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText',\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2151,"ts":1714665661.186,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText',\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2152,"ts":1714665661.266,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', te\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2153,"ts":1714665661.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', te\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', tex\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2154,"ts":1714665662.254,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', tex\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2155,"ts":1714665662.447,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2156,"ts":1714665663.099,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2157,"ts":1714665663.147,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2158,"ts":1714665664.562,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v,\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2159,"ts":1714665664.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v,\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2160,"ts":1714665664.981,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, l\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2161,"ts":1714665665.081,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, l\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2162,"ts":1714665665.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2163,"ts":1714665665.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2164,"ts":1714665665.624,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2165,"ts":1714665665.753,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2166,"ts":1714665665.817,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2167,"ts":1714665666.641,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2168,"ts":1714665666.849,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, te\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2169,"ts":1714665667.347,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, te\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, tem\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2170,"ts":1714665668.078,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, tem\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templ\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2171,"ts":1714665668.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templ\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templa\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2172,"ts":1714665668.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templa\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, template\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2173,"ts":1714665668.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, template\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2174,"ts":1714665668.641,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2175,"ts":1714665668.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2176,"ts":1714665668.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: []\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2177,"ts":1714665669.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: []\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [],\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2178,"ts":1714665669.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [],\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2179,"ts":1714665669.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], l\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2180,"ts":1714665669.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], l\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2181,"ts":1714665669.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2182,"ts":1714665669.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2183,"ts":1714665669.979,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2184,"ts":1714665670.062,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2185,"ts":1714665670.157,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2186,"ts":1714665670.412,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n    \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2187,"ts":1714665672.026,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n    \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  |\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2188,"ts":1714665672.219,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  |\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2189,"ts":1714665672.856,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2190,"ts":1714665673.078,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2191,"ts":1714665674,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  i\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2192,"ts":1714665674.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  i\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2193,"ts":1714665674.251,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2194,"ts":1714665674.359,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (ty\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2195,"ts":1714665674.529,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (ty\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typ\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2196,"ts":1714665674.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typ\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (type\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2197,"ts":1714665674.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (type\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeo\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2198,"ts":1714665675.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeo\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2199,"ts":1714665675.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2200,"ts":1714665675.551,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v =\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2201,"ts":1714665675.711,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v =\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v ==\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2202,"ts":1714665675.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v ==\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v ===\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2203,"ts":1714665676.076,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v ===\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2204,"ts":1714665676.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === '\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2205,"ts":1714665676.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === '\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'nu\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2206,"ts":1714665677.124,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'nu\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'num\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2207,"ts":1714665677.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'num\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'numb\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2208,"ts":1714665677.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'numb\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2209,"ts":1714665677.524,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number'\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2210,"ts":1714665677.669,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number'\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number')\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2211,"ts":1714665677.848,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number')\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2212,"ts":1714665678.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2213,"ts":1714665678.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    r\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2214,"ts":1714665678.329,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    r\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    re\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2215,"ts":1714665678.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    re\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    retu\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2216,"ts":1714665678.614,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    retu\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2217,"ts":1714665678.795,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2218,"ts":1714665678.895,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2219,"ts":1714665679.031,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {t\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2220,"ts":1714665679.182,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {t\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {typ\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2221,"ts":1714665679.288,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {typ\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2222,"ts":1714665679.355,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2223,"ts":1714665679.548,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: '\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2224,"ts":1714665679.771,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: '\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'i\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2225,"ts":1714665679.999,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'i\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'ide\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2226,"ts":1714665680.143,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'ide\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'iden\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2227,"ts":1714665680.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'iden\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'ident\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2228,"ts":1714665680.374,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'ident\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identi\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2229,"ts":1714665680.511,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identi\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identif\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2230,"ts":1714665680.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identif\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifi\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2231,"ts":1714665680.717,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifi\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2232,"ts":1714665680.854,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier'\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2233,"ts":1714665680.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier'\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier',\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2234,"ts":1714665681.04,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier',\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2235,"ts":1714665681.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', te\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2236,"ts":1714665681.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', te\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', tex\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2237,"ts":1714665681.446,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', tex\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2238,"ts":1714665681.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text:\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2239,"ts":1714665681.803,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text:\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2240,"ts":1714665681.823,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2241,"ts":1714665682.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2242,"ts":1714665682.302,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v +\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2243,"ts":1714665682.398,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v +\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2244,"ts":1714665682.441,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2245,"ts":1714665682.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + ''\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2246,"ts":1714665682.748,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + ''\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2247,"ts":1714665682.912,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', l\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2248,"ts":1714665683.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', l\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2249,"ts":1714665684.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2250,"ts":1714665684.345,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2251,"ts":1714665684.525,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2252,"ts":1714665684.893,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n    \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2253,"ts":1714665686.266,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n    \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2254,"ts":1714665686.501,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2255,"ts":1714665697.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  i\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2256,"ts":1714665697.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  i\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2257,"ts":1714665698.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2258,"ts":1714665698.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2259,"ts":1714665699.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2260,"ts":1714665699.234,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2261,"ts":1714665699.338,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v =\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2262,"ts":1714665699.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v =\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v ==\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2263,"ts":1714665699.538,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v ==\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v ===\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2264,"ts":1714665699.728,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v ===\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2265,"ts":1714665700.367,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === tr\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2266,"ts":1714665700.479,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === tr\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === tru\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2267,"ts":1714665700.523,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === tru\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true\n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2268,"ts":1714665700.714,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true\n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2269,"ts":1714665700.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2270,"ts":1714665703.812,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' |) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2271,"ts":1714665703.908,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' |) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' ||) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2272,"ts":1714665704.081,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' ||) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2273,"ts":1714665704.197,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || t) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2274,"ts":1714665704.447,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || t) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2275,"ts":1714665704.55,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || type) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2276,"ts":1714665704.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || type) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2277,"ts":1714665704.75,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepof ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2278,"ts":1714665704.9,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepof ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepof) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2279,"ts":1714665705.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepof) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2280,"ts":1714665705.527,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typepo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typep) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2281,"ts":1714665705.66,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typep) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || type) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2282,"ts":1714665705.801,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || type) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2283,"ts":1714665706.053,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2284,"ts":1714665706.217,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2285,"ts":1714665706.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof =) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2286,"ts":1714665706.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof =) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2287,"ts":1714665706.673,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2288,"ts":1714665706.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2289,"ts":1714665706.885,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v =) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2290,"ts":1714665706.964,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v =) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v ==) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2291,"ts":1714665707.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v ==) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v ===) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2292,"ts":1714665707.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v ===) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2293,"ts":1714665707.319,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === ) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === ') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2294,"ts":1714665707.411,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === ') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'b) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2295,"ts":1714665707.507,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'b) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'bo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2296,"ts":1714665707.62,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'bo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2297,"ts":1714665707.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boo) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boole) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2298,"ts":1714665707.937,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boole) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolea) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2299,"ts":1714665708.02,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolea) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2300,"ts":1714665708.093,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean) {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2301,"ts":1714665708.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  if (v === true \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  re \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2302,"ts":1714665712.569,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  re \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  ret \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2303,"ts":1714665712.739,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  ret \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  retur \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2304,"ts":1714665712.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  retur \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return  \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2305,"ts":1714665712.997,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return  \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return nu \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2306,"ts":1714665713.152,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return nu \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return nul \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2307,"ts":1714665713.372,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return nul \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return null \n}\n","loc":101}},"nsMap":{},"nsPrev":{},"id":2308,"ts":1714665713.517,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"idx":99,"type":"end"}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, })","loc":99}},"nsMap":{},"nsPrev":{},"id":2309,"ts":1714665759.942,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, })","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, v})","loc":99}},"nsMap":{},"nsPrev":{},"id":2310,"ts":1714665760.161,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, v})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valu})","loc":99}},"nsMap":{},"nsPrev":{},"id":2311,"ts":1714665760.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valu})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, value})","loc":99}},"nsMap":{},"nsPrev":{},"id":2312,"ts":1714665760.543,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, value})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueT})","loc":99}},"nsMap":{},"nsPrev":{},"id":2313,"ts":1714665760.939,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueT})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueTo})","loc":99}},"nsMap":{},"nsPrev":{},"id":2314,"ts":1714665761.097,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueTo})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueToN})","loc":99}},"nsMap":{},"nsPrev":{},"id":2315,"ts":1714665761.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueToN})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueToNod})","loc":99}},"nsMap":{},"nsPrev":{},"id":2316,"ts":1714665761.448,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueToNod})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueToNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2317,"ts":1714665761.529,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,24,26,28,38,44],"collapsed":false}},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,24,26,28,38,44],"collapsed":true}},"id":2318,"ts":1714669403.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"idx":99,"type":"end"}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode, valueToString, valueToNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2319,"ts":1714670153.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"idx":101,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"idx":101,"type":"end"}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"valueToNode = (v) => {\n  if (typeof v === 'object' && v && 'type' in v) {\n    if (v.type === 'cons' || v.type === 'nil') {\n      const un = unwrapArray(v)\n      return {type: 'array', values: un.map(valueToNode), loc: -1}\n    }\n    let args = [];\n    for (let i=0; i in v; i++) {\n      args.push(v[i]);\n    }\n    return {type: 'list', values: [{type: 'identifier', text: v.type, loc: -1}, ...args.map(valueToNode)], loc: -1}\n  }\n  if (typeof v === 'string') {\n    return {type: 'string', first: {type: 'stringText', text: v, loc: -1}, templates: [], loc: -1}\n  }\n  if (typeof v === 'number' || typeof v === 'boolean') {\n    return {type: 'identifier', text: v + '', loc: -1}\n  }\n  return null \n}\n","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"blank","loc":101}},"nsMap":{"102":{"type":"normal","top":101,"children":[],"id":102}},"nsPrev":{"102":{"type":"normal","top":101,"children":[],"id":102}},"id":2320,"ts":1714670155.12,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":102,"idx":0},{"type":"ns-top","idx":102},{"idx":101,"type":"start"}]}],"prev":{"101":{"type":"blank","loc":101}},"meta":{},"metaPrev":{},"map":{"101":null},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,3,98,36,100],"type":"normal"},"102":null},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,3,98,36,102,100],"type":"normal"},"102":{"type":"normal","top":101,"children":[],"id":102}},"id":2321,"ts":1714670155.644,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"loc":37,"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapArray(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n"}},"meta":{},"metaPrev":{},"map":{"37":{"type":"blank","loc":37}},"nsMap":{"36":{"type":"normal","id":36,"top":37,"children":[]}},"nsPrev":{"36":{"type":"normal","id":36,"top":37,"children":[]}},"id":2322,"ts":1714670156.214,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"idx":97,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"blank","loc":37}},"meta":{},"metaPrev":{},"map":{"37":null},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,3,98,100],"type":"normal"},"36":null},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,3,98,36,100],"type":"normal"},"36":{"type":"normal","id":36,"top":37,"children":[]}},"id":2323,"ts":1714670156.759,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,24,26,28,38,44],"collapsed":true}},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,24,26,28,38,44],"collapsed":false}},"id":2324,"ts":1714670163.867,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"3":{"type":"normal","top":2,"children":[49,47],"id":3,"collapsed":false}},"nsPrev":{"3":{"type":"normal","top":2,"children":[49,47],"id":3,"collapsed":true}},"id":2325,"ts":1714670343.776,"libraryRoot":""},{"id":2326,"meta":{},"metaPrev":{},"revert":2325,"prev":{},"map":{},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"nsMap":{"3":{"type":"normal","top":2,"children":[49,47],"id":3,"collapsed":true}},"nsPrev":{"3":{"type":"normal","top":2,"children":[49,47],"id":3,"collapsed":false}},"ts":1714670351.138,"libraryRoot":""},{"id":2327,"meta":{},"metaPrev":{},"revert":2324,"prev":{},"map":{},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,24,26,28,38,44],"collapsed":false}},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,24,26,28,38,44],"collapsed":true}},"ts":1714670353.145,"libraryRoot":""},{"id":2328,"meta":{},"metaPrev":{},"revert":2323,"prev":{"37":null},"map":{"37":{"type":"blank","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"idx":97,"type":"end"}]}],"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,3,98,36,100],"type":"normal"},"36":{"type":"normal","id":36,"top":37,"children":[]}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,3,98,100],"type":"normal"},"36":null},"ts":1714670354.585,"libraryRoot":""},{"id":2329,"meta":{},"metaPrev":{},"revert":2322,"prev":{"37":{"type":"blank","loc":37}},"map":{"37":{"loc":37,"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapArray(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n"}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"nsMap":{"36":{"type":"normal","id":36,"top":37,"children":[]}},"nsPrev":{"36":{"type":"normal","id":36,"top":37,"children":[]}},"ts":1714670356.698,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"loc":23,"type":"raw-code","lang":"javascript","raw":"cons = (a, b) => ({type: 'cons', 0: a, 1: b})"}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"ccons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"nsMap":{},"nsPrev":{},"id":2330,"ts":1715005125.406,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"ccons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"concons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"nsMap":{},"nsPrev":{},"id":2331,"ts":1715005125.491,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"concons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"conscons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"nsMap":{},"nsPrev":{},"id":2332,"ts":1715005125.535,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"conscons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"constcons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"nsMap":{},"nsPrev":{},"id":2333,"ts":1715005125.611,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"constcons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"nsMap":{},"nsPrev":{},"id":2334,"ts":1715005125.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\n\n","loc":23}},"nsMap":{},"nsPrev":{},"id":2335,"ts":1715005127.516,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\n\n","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nco","loc":23}},"nsMap":{},"nsPrev":{},"id":2336,"ts":1715005127.879,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nco","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\ncon","loc":23}},"nsMap":{},"nsPrev":{},"id":2337,"ts":1715005127.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\ncon","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\ncons","loc":23}},"nsMap":{},"nsPrev":{},"id":2338,"ts":1715005127.98,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\ncons","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst","loc":23}},"nsMap":{},"nsPrev":{},"id":2339,"ts":1715005128.059,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst ","loc":23}},"nsMap":{},"nsPrev":{},"id":2340,"ts":1715005128.135,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst n","loc":23}},"nsMap":{},"nsPrev":{},"id":2341,"ts":1715005128.174,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst n","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil","loc":23}},"nsMap":{},"nsPrev":{},"id":2342,"ts":1715005128.275,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil ","loc":23}},"nsMap":{},"nsPrev":{},"id":2343,"ts":1715005128.443,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = ","loc":23}},"nsMap":{},"nsPrev":{},"id":2344,"ts":1715005128.54,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {","loc":23}},"nsMap":{},"nsPrev":{},"id":2345,"ts":1715005128.78,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {t","loc":23}},"nsMap":{},"nsPrev":{},"id":2346,"ts":1715005128.96,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {t","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type","loc":23}},"nsMap":{},"nsPrev":{},"id":2347,"ts":1715005129.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type:","loc":23}},"nsMap":{},"nsPrev":{},"id":2348,"ts":1715005129.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type:","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: ","loc":23}},"nsMap":{},"nsPrev":{},"id":2349,"ts":1715005129.36,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: '","loc":23}},"nsMap":{},"nsPrev":{},"id":2350,"ts":1715005129.412,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: '","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil","loc":23}},"nsMap":{},"nsPrev":{},"id":2351,"ts":1715005129.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'","loc":23}},"nsMap":{},"nsPrev":{},"id":2352,"ts":1715005129.96,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}","loc":23}},"nsMap":{},"nsPrev":{},"id":2353,"ts":1715005130.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":24,"idx":20},{"type":"ns-top","idx":24},{"idx":25,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":24,"idx":20},{"type":"ns-top","idx":24},{"idx":25,"type":"end"}]}],"prev":{"25":{"loc":25,"type":"raw-code","lang":"javascript","raw":"nil = {type: 'nil'}"}},"meta":{},"metaPrev":{},"map":{"25":{"type":"blank","loc":25}},"nsMap":{"24":{"type":"normal","id":24,"top":25,"children":[]}},"nsPrev":{"24":{"type":"normal","id":24,"top":25,"children":[]}},"id":2354,"ts":1715005135.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":24,"idx":20},{"type":"ns-top","idx":24},{"idx":25,"type":"start"}]}],"prev":{"25":{"type":"blank","loc":25}},"meta":{},"metaPrev":{},"map":{"25":null},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,26,28,38,44],"collapsed":false},"24":null},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,24,26,28,38,44],"collapsed":false},"24":{"type":"normal","id":24,"top":25,"children":[]}},"id":2355,"ts":1715005135.802,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":26,"idx":20},{"type":"ns-top","idx":26},{"type":"rich-text","idx":27,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":26,"idx":20},{"type":"ns-top","idx":26},{"type":"rich-text","idx":27,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":26,"idx":20},{"type":"ns-top","idx":26},{"idx":27,"type":"start"}]}],"prev":{"27":{"loc":27,"type":"raw-code","lang":"javascript","raw":"arr = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}"}},"meta":{},"metaPrev":{},"map":{"27":{"type":"raw-code","lang":"javascript","raw":"","loc":27}},"nsMap":{},"nsPrev":{},"id":2356,"ts":1715005141.433,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\n\n","loc":23}},"nsMap":{},"nsPrev":{},"id":2357,"ts":1715005142.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\n\n","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nc","loc":23}},"nsMap":{},"nsPrev":{},"id":2358,"ts":1715005142.724,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nc","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\ncon","loc":23}},"nsMap":{},"nsPrev":{},"id":2359,"ts":1715005142.809,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\ncon","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\ncons","loc":23}},"nsMap":{},"nsPrev":{},"id":2360,"ts":1715005142.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\ncons","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst","loc":23}},"nsMap":{},"nsPrev":{},"id":2361,"ts":1715005142.936,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst ","loc":23}},"nsMap":{},"nsPrev":{},"id":2362,"ts":1715005143.012,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst l","loc":23}},"nsMap":{},"nsPrev":{},"id":2363,"ts":1715005143.047,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst l","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst li","loc":23}},"nsMap":{},"nsPrev":{},"id":2364,"ts":1715005143.173,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst li","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst lis","loc":23}},"nsMap":{},"nsPrev":{},"id":2365,"ts":1715005143.212,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst lis","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list","loc":23}},"nsMap":{},"nsPrev":{},"id":2366,"ts":1715005143.315,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list ","loc":23}},"nsMap":{},"nsPrev":{},"id":2367,"ts":1715005143.38,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = ","loc":23}},"nsMap":{},"nsPrev":{},"id":2368,"ts":1715005143.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = arr = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":2369,"ts":1715005143.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = arr = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = ar = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":2370,"ts":1715005145.444,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = ar = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = a = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":2371,"ts":1715005145.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = a = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list =  = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":2372,"ts":1715005145.719,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list =  = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":2373,"ts":1715005145.863,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list  = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":2374,"ts":1715005146.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list  = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":2375,"ts":1715005146.706,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":26,"idx":20},{"type":"ns-top","idx":26},{"idx":27,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":26,"idx":20},{"type":"ns-top","idx":26},{"idx":27,"type":"end"}]}],"prev":{"27":{"type":"raw-code","lang":"javascript","raw":"","loc":27}},"meta":{},"metaPrev":{},"map":{"27":{"type":"blank","loc":27}},"nsMap":{"26":{"type":"normal","id":26,"top":27,"children":[]}},"nsPrev":{"26":{"type":"normal","id":26,"top":27,"children":[]}},"id":2376,"ts":1715005154.716,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":26,"idx":20},{"type":"ns-top","idx":26},{"idx":27,"type":"start"}]}],"prev":{"27":{"type":"blank","loc":27}},"meta":{},"metaPrev":{},"map":{"27":null},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38,44],"collapsed":false},"26":null},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,26,28,38,44],"collapsed":false},"26":{"type":"normal","id":26,"top":27,"children":[]}},"id":2377,"ts":1715005155.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"28":{"type":"normal","id":28,"top":29,"children":[30],"collapsed":false}},"nsPrev":{"28":{"type":"normal","id":28,"top":29,"children":[30],"collapsed":true}},"id":2378,"ts":1715027233.722,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"28":{"type":"normal","id":28,"top":29,"children":[30],"collapsed":true}},"nsPrev":{"28":{"type":"normal","id":28,"top":29,"children":[30],"collapsed":false}},"id":2379,"ts":1715027235.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => ({\n          type: ',,',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => ({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2380,"ts":1715027239.63,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"end"}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => ({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => p({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2381,"ts":1715027241.648,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => p({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pa({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2382,"ts":1715027241.758,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pa({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pai({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2383,"ts":1715027241.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pai({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2384,"ts":1715027241.922,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair({\n          type: ',',\n          0: fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n           fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2385,"ts":1715027245.131,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n           fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2386,"ts":1715027246.035,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1: item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1:item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2387,"ts":1715027247.647,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1:item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2388,"ts":1715027247.783,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          1item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2389,"ts":1715027247.924,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2390,"ts":1715027248.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          paitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2391,"ts":1715027248.225,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          paitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          paiitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2392,"ts":1715027248.297,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          paiitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pairitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2393,"ts":1715027248.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pairitem.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2394,"ts":1715027248.556,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text,\n          2: item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text,\nitem.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2395,"ts":1715027250.505,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text,\nitem.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text,item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2396,"ts":1715027250.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text,item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2397,"ts":1715027251.938,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        }))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        )))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2398,"ts":1715027253.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        )))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        ))))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2399,"ts":1715027254.163,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        ))))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        )))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2400,"ts":1715027254.846,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"3":{"type":"normal","top":2,"children":[49,47],"id":3,"collapsed":false}},"nsPrev":{"3":{"type":"normal","top":2,"children":[49,47],"id":3,"collapsed":true}},"id":2401,"ts":1715027259.899,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"end"}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n        )))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n)))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2402,"ts":1715027268.171,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,\n)))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,)))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2403,"ts":1715027268.297,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc,)))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2404,"ts":1715027269.678,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n          ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2405,"ts":1715027270.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n          ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2406,"ts":1715027270.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"28":{"type":"normal","id":28,"top":29,"children":[30],"collapsed":false}},"nsPrev":{"28":{"type":"normal","id":28,"top":29,"children":[30],"collapsed":true}},"id":2407,"ts":1715027281.57,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"loc":29,"type":"raw-code","lang":"javascript","raw":"unwrapArray = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]"}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapL = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2408,"ts":1715027285.192,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapL = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapLi = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2409,"ts":1715027285.393,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapLi = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2410,"ts":1715027285.517,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"end"}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapArray(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapArra(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2411,"ts":1715027286.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapArra(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapArr(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2412,"ts":1715027286.801,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapArr(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapAr(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2413,"ts":1715027286.92,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapAr(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapA(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2414,"ts":1715027287.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapA(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrap(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2415,"ts":1715027287.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrap(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapL(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2416,"ts":1715027287.37,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapL(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapLi(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2417,"ts":1715027287.56,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapLi(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2418,"ts":1715027287.659,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"idx":31,"type":"end"}]}],"prev":{"31":{"loc":31,"type":"raw-code","lang":"javascript","raw":"unwrapArray(arr([1,2,3]))"}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapArra(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2419,"ts":1715027289.301,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapArra(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapArr(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2420,"ts":1715027289.417,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapArr(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapAr(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2421,"ts":1715027289.529,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapAr(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapA(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2422,"ts":1715027289.652,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapA(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrap(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2423,"ts":1715027289.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrap(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapL(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2424,"ts":1715027290.3,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapL(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapLi(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2425,"ts":1715027290.488,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapLi(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(arr([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2426,"ts":1715027290.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(arr([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(li([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2427,"ts":1715027291.609,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(li([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(lis([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2428,"ts":1715027291.659,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"type":"rich-text","idx":31,"sel":null}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(lis([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(list([1,2,3]))","loc":31}},"nsMap":{},"nsPrev":{},"id":2429,"ts":1715027291.692,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"counwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2430,"ts":1715027298.153,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"counwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"conunwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2431,"ts":1715027298.213,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"conunwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"consunwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2432,"ts":1715027298.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"consunwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"constunwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2433,"ts":1715027298.343,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"constunwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2434,"ts":1715027298.409,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prev":{"39":{"loc":39,"type":"raw-code","lang":"javascript","raw":"pair = (a, b) => ({type: ',', 0: a, 1: b})"}},"meta":{},"metaPrev":{},"map":{"39":{"type":"raw-code","lang":"javascript","raw":"copair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"nsMap":{},"nsPrev":{},"id":2435,"ts":1715027300.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prev":{"39":{"type":"raw-code","lang":"javascript","raw":"copair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"meta":{},"metaPrev":{},"map":{"39":{"type":"raw-code","lang":"javascript","raw":"conpair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"nsMap":{},"nsPrev":{},"id":2436,"ts":1715027300.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prev":{"39":{"type":"raw-code","lang":"javascript","raw":"conpair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"meta":{},"metaPrev":{},"map":{"39":{"type":"raw-code","lang":"javascript","raw":"constpair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"nsMap":{},"nsPrev":{},"id":2437,"ts":1715027300.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prev":{"39":{"type":"raw-code","lang":"javascript","raw":"constpair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"meta":{},"metaPrev":{},"map":{"39":{"type":"raw-code","lang":"javascript","raw":"const pair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"nsMap":{},"nsPrev":{},"id":2438,"ts":1715027300.68,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prev":{"45":{"loc":45,"type":"raw-code","lang":"javascript","raw":"makePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}"}},"meta":{},"metaPrev":{},"map":{"45":{"type":"raw-code","lang":"javascript","raw":"comakePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"nsMap":{},"nsPrev":{},"id":2439,"ts":1715027301.857,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prev":{"45":{"type":"raw-code","lang":"javascript","raw":"comakePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"meta":{},"metaPrev":{},"map":{"45":{"type":"raw-code","lang":"javascript","raw":"conmakePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"nsMap":{},"nsPrev":{},"id":2440,"ts":1715027301.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prev":{"45":{"type":"raw-code","lang":"javascript","raw":"conmakePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"meta":{},"metaPrev":{},"map":{"45":{"type":"raw-code","lang":"javascript","raw":"constmakePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"nsMap":{},"nsPrev":{},"id":2441,"ts":1715027302.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"type":"rich-text","idx":45,"sel":null}]}],"prev":{"45":{"type":"raw-code","lang":"javascript","raw":"constmakePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"meta":{},"metaPrev":{},"map":{"45":{"type":"raw-code","lang":"javascript","raw":"const makePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"nsMap":{},"nsPrev":{},"id":2442,"ts":1715027302.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"cfromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2443,"ts":1715027304.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"cfromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"confromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2444,"ts":1715027304.712,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"confromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"consfromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2445,"ts":1715027304.763,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"consfromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"constfromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2446,"ts":1715027304.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"constfromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2447,"ts":1715027304.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"idx":51,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"idx":51,"type":"start"}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"idx":51,"type":"end"}]}],"prev":{"51":{"type":"identifier","text":"test","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"blank","loc":51}},"nsMap":{},"nsPrev":{},"id":2448,"ts":1715027309.697,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"idx":51,"type":"end"}]}],"prev":{"51":{"type":"blank","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"// some code","loc":51}},"nsMap":{},"nsPrev":{},"id":2449,"ts":1715027311.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"// some code","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => valueToString(fromNode(v))// some code","loc":51}},"nsMap":{},"nsPrev":{},"id":2450,"ts":1715027311.849,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => valueToString(fromNode(v))// some code","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => valueToString(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":2451,"ts":1715027313.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: arr(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: li(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2452,"ts":1715027318.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: li(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2453,"ts":1715027319.126,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":77,"type":"text","at":0},{"idx":85,"type":"subtext","at":23}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":77,"type":"text","at":0},{"idx":85,"type":"subtext","at":24}]}],"prev":{"85":{"type":"stringText","loc":85,"text":"(cst/string \\\"hi \\\" [(,, (cst/identifier \\\"1\\\" 81) \\\" 12\\\" 82)] 79)"}},"meta":{},"metaPrev":{},"map":{"85":{"type":"stringText","loc":85,"text":"(cst/string \\\"hi \\\" [(, (cst/identifier \\\"1\\\" 81) \\\" 12\\\" 82)] 79)"}},"nsMap":{},"nsPrev":{},"id":2454,"ts":1715027323.878,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":77,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":77,"type":"end"}]}],"prev":{"74":{"type":"list","values":[75,76,77],"loc":74},"77":{"type":"string","first":85,"templates":[],"loc":77},"85":{"type":"stringText","loc":85,"text":"(cst/string \\\"hi \\\" [(, (cst/identifier \\\"1\\\" 81) \\\" 12\\\" 82)] 79)"}},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,77],"loc":74},"77":{"type":"blank","loc":77},"85":null},"nsMap":{},"nsPrev":{},"id":2455,"ts":1715027332.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":77,"type":"subtext","at":0}]}],"prev":{"74":{"type":"list","values":[75,76,77],"loc":74},"101":null},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,101],"loc":74},"101":{"type":"raw-code","lang":"javascript","loc":101,"raw":"'(cst/string \"hi \" [(, (cst/identifier \"1\" 81) (, \" 12\" 82))] 79)'"}},"nsMap":{},"nsPrev":{},"id":2456,"ts":1715027334.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"end"}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: arr(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: li(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2457,"ts":1715027338.913,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: li(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: lis(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2458,"ts":1715027338.994,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: lis(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2459,"ts":1715027339.073,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"idx":97,"type":"start"}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapArray(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapArray(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapL(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapArray(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2460,"ts":1715098525.786,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapL(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapArray(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapLis(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapArray(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2461,"ts":1715098525.966,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapLis(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapArray(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapArray(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2462,"ts":1715098526.057,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"idx":97,"type":"end"}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapArray(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapL(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2463,"ts":1715098528.553,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapL(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapLi(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2464,"ts":1715098528.745,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapLi(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2465,"ts":1715098528.852,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"idx":99,"type":"end"}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({fromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({tyfromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2466,"ts":1715098540.04,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({tyfromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({typfromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2467,"ts":1715098540.103,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({typfromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({typefromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2468,"ts":1715098540.162,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({typefromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({type:fromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2469,"ts":1715098540.357,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({type:fromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: fromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2470,"ts":1715098540.44,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: fromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2471,"ts":1715098540.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fnfromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2472,"ts":1715098540.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fnfromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fns'fromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2473,"ts":1715098540.864,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fns'fromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fns',fromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2474,"ts":1715098540.94,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"type":"rich-text","idx":99,"sel":null}]}],"prev":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fns',fromNode, toNode})","loc":99}},"meta":{},"metaPrev":{},"map":{"99":{"type":"raw-code","lang":"javascript","raw":"({type: 'fns', fromNode, toNode})","loc":99}},"nsMap":{},"nsPrev":{},"id":2475,"ts":1715098541.131,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"loc":37,"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapArray(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n"}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapL(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":2476,"ts":1715098551.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapL(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapLi(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":2477,"ts":1715098551.947,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapLi(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":2478,"ts":1715098552.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":1},{"idx":63,"type":"child","at":1},{"idx":68,"type":"child","at":0},{"idx":69,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":1},{"idx":63,"type":"child","at":1},{"idx":68,"type":"child","at":0},{"idx":69,"type":"subtext","at":1}]}],"prev":{"69":{"type":"identifier","text":"1","loc":69}},"meta":{},"metaPrev":{},"map":{"69":{"type":"identifier","text":"11","loc":69}},"nsMap":{},"nsPrev":{},"id":2479,"ts":1715098559.405,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":1},{"idx":63,"type":"child","at":1},{"idx":68,"type":"child","at":0},{"idx":69,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":1},{"idx":63,"type":"child","at":1},{"idx":68,"type":"child","at":0},{"idx":69,"type":"subtext","at":2}]}],"prev":{"69":{"type":"identifier","text":"11","loc":69}},"meta":{},"metaPrev":{},"map":{"69":{"type":"identifier","text":"1","loc":69}},"nsMap":{},"nsPrev":{},"id":2480,"ts":1715098560.075,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":49,"idx":3},{"type":"ns-top","idx":49},{"idx":48,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":49,"idx":3},{"type":"ns-top","idx":49},{"idx":48,"type":"end"}]}],"prev":{"48":{"type":"raw-code","lang":"javascript","raw":"test = v => valueToString(fromNode(v))","loc":48}},"meta":{},"metaPrev":{},"map":{"48":{"type":"blank","loc":48}},"nsMap":{"49":{"type":"normal","top":48,"children":[],"id":49}},"nsPrev":{"49":{"type":"normal","top":48,"children":[],"id":49}},"id":2481,"ts":1715098572.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":49,"idx":3},{"type":"ns-top","idx":49},{"idx":48,"type":"start"}]}],"prev":{"48":{"type":"blank","loc":48}},"meta":{},"metaPrev":{},"map":{"48":null},"nsMap":{"3":{"type":"normal","top":2,"children":[47],"id":3,"collapsed":false},"49":null},"nsPrev":{"3":{"type":"normal","top":2,"children":[49,47],"id":3,"collapsed":false},"49":{"type":"normal","top":48,"children":[],"id":49}},"id":2482,"ts":1715098572.644,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"idx":97,"type":"start"}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"cotoNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2483,"ts":1715098579.647,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"cotoNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"contoNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2484,"ts":1715098579.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"contoNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"consttoNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2485,"ts":1715098579.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"consttoNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2486,"ts":1715098579.923,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"covalueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":2487,"ts":1715098581.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"covalueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"convalueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":2488,"ts":1715098581.745,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"convalueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"constvalueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":2489,"ts":1715098581.871,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"constvalueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":2490,"ts":1715098581.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"idx":31,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"idx":31,"type":"end"}]}],"prev":{"31":{"type":"raw-code","lang":"javascript","raw":"unwrapList(list([1,2,3]))","loc":31}},"meta":{},"metaPrev":{},"map":{"31":{"type":"blank","loc":31}},"nsMap":{"30":{"type":"normal","id":30,"top":31,"children":[]}},"nsPrev":{"30":{"type":"normal","id":30,"top":31,"children":[]}},"id":2491,"ts":1715098593.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns","child":30,"idx":28},{"type":"ns-top","idx":30},{"idx":31,"type":"start"}]}],"prev":{"31":{"type":"blank","loc":31}},"meta":{},"metaPrev":{},"map":{"31":null},"nsMap":{"28":{"type":"normal","id":28,"top":29,"children":[],"collapsed":false},"30":null},"nsPrev":{"28":{"type":"normal","id":28,"top":29,"children":[30],"collapsed":false},"30":{"type":"normal","id":30,"top":31,"children":[]}},"id":2492,"ts":1715098593.39,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"end"}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2493,"ts":1715098602.437,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"nsMap":{},"nsPrev":{},"id":2494,"ts":1715098602.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"end"}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  ","loc":29}},"nsMap":{},"nsPrev":{},"id":2495,"ts":1715098604.046,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  ","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  }","loc":29}},"nsMap":{},"nsPrev":{},"id":2496,"ts":1715098604.642,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  }","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  ","loc":29}},"nsMap":{},"nsPrev":{},"id":2497,"ts":1715098605.449,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  ","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n","loc":29}},"nsMap":{},"nsPrev":{},"id":2498,"ts":1715098605.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]}\n","loc":29}},"nsMap":{},"nsPrev":{},"id":2499,"ts":1715098605.908,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]}\n","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n","loc":29}},"nsMap":{},"nsPrev":{},"id":2500,"ts":1715098606.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  \n","loc":29}},"nsMap":{},"nsPrev":{},"id":2501,"ts":1715098606.856,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n  \n","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n\n","loc":29}},"nsMap":{},"nsPrev":{},"id":2502,"ts":1715098607.106,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n\n","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2503,"ts":1715098607.614,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2504,"ts":1715098608.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  co\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2505,"ts":1715098609.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  co\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  con\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2506,"ts":1715098609.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  con\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  cons\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2507,"ts":1715098609.221,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  cons\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2508,"ts":1715098609.287,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2509,"ts":1715098609.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2510,"ts":1715098609.532,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2511,"ts":1715098609.907,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2512,"ts":1715098610.24,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res =\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2513,"ts":1715098610.533,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res =\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2514,"ts":1715098610.721,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = []\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2515,"ts":1715098610.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = []\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2516,"ts":1715098611.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2517,"ts":1715098611.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  whi\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2518,"ts":1715098611.972,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  whi\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  whil\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2519,"ts":1715098612.004,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  whil\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2520,"ts":1715098612.071,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2521,"ts":1715098612.137,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2522,"ts":1715098612.229,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2523,"ts":1715098612.424,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2524,"ts":1715098612.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2525,"ts":1715098612.663,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2526,"ts":1715098612.707,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2527,"ts":1715098614.75,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  while (v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  whi\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2528,"ts":1715098615.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  whi\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  wh\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2529,"ts":1715098615.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  wh\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  w\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2530,"ts":1715098615.823,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  w\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2531,"ts":1715098616.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  f\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2532,"ts":1715098622.796,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  f\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  fo\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2533,"ts":1715098622.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  fo\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2534,"ts":1715098622.973,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2535,"ts":1715098623.225,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (;\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2536,"ts":1715098623.509,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (;\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2537,"ts":1715098623.616,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2538,"ts":1715098625.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; va\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2539,"ts":1715098625.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; va\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2540,"ts":1715098625.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2541,"ts":1715098625.972,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2542,"ts":1715098626.071,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.t\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2543,"ts":1715098626.213,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.t\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.typ\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2544,"ts":1715098626.342,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.typ\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2545,"ts":1715098626.43,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2546,"ts":1715098626.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type =\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2547,"ts":1715098626.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type =\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type ==\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2548,"ts":1715098626.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type ==\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type ===\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2549,"ts":1715098626.866,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type ===\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2550,"ts":1715098626.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === '\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2551,"ts":1715098627.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === '\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'c\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2552,"ts":1715098627.205,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'c\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'con\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2553,"ts":1715098627.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'con\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2554,"ts":1715098627.43,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2555,"ts":1715098627.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons';\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2556,"ts":1715098628.083,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons';\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2557,"ts":1715098628.241,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2558,"ts":1715098630.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2559,"ts":1715098630.763,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2560,"ts":1715098630.851,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; valu \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2561,"ts":1715098631.097,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; valu \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2562,"ts":1715098631.348,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2563,"ts":1715098631.629,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2564,"ts":1715098631.721,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value =\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2565,"ts":1715098631.817,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value =\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2566,"ts":1715098631.9,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2567,"ts":1715098632.067,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2568,"ts":1715098632.221,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2569,"ts":1715098632.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2570,"ts":1715098632.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2571,"ts":1715098632.827,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2572,"ts":1715098633.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2573,"ts":1715098633.13,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1])\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2574,"ts":1715098634.457,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1])\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2575,"ts":1715098634.63,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2576,"ts":1715098634.757,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2577,"ts":1715098636.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2578,"ts":1715098637.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2579,"ts":1715098637.189,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.pu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2580,"ts":1715098637.404,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.pu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.pus\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2581,"ts":1715098637.535,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.pus\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2582,"ts":1715098637.612,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2583,"ts":1715098637.817,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2584,"ts":1715098638.856,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(v\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2585,"ts":1715098639.01,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(val\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2586,"ts":1715098639.066,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(valu\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2587,"ts":1715098639.106,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2588,"ts":1715098639.306,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2589,"ts":1715098639.491,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0])\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2590,"ts":1715098639.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0])\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2591,"ts":1715098640.25,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n    \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2592,"ts":1715098640.467,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n    \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2593,"ts":1715098640.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  \n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2594,"ts":1715098640.863,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  value.type === 'nil' ? [] : [value[0], ...unwrapList(value[1])]\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  re\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2595,"ts":1715098644.73,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  re\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  ret\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2596,"ts":1715098644.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  ret\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  retur\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2597,"ts":1715098644.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  retur\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2598,"ts":1715098645.065,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return \n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2599,"ts":1715098645.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return \n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2600,"ts":1715098645.321,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":29}},"nsMap":{},"nsPrev":{},"id":2601,"ts":1715098645.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cs/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2602,"ts":1715098663.685,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cs/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2603,"ts":1715098663.856,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/identifier', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/iden', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2604,"ts":1715098665.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/iden', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/ide', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2605,"ts":1715098665.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/ide', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2606,"ts":1715098665.499,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"idx":2,"type":"start"}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'c/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":2607,"ts":1715098668.302,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":14}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":15}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/identifier \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/identifie \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2608,"ts":1715098671.302,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":13}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":14}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/identifie \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/identifi \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2609,"ts":1715098671.551,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":12}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":13}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/identifi \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/identif \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2610,"ts":1715098671.584,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":11}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":12}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/identif \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/identi \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2611,"ts":1715098671.619,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":10}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":11}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/identi \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/ident \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2612,"ts":1715098671.653,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":9}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":10}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/ident \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/iden \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2613,"ts":1715098671.839,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":8}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":9}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/iden \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/ide \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2614,"ts":1715098671.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":7}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":8}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/ide \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/id \\\"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2615,"ts":1715098672.13,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":26}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":27}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identifier \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identifie \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2616,"ts":1715098673.22,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":25}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":26}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identifie \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identifi \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2617,"ts":1715098673.474,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":24}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":25}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identifi \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identif \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2618,"ts":1715098673.507,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":23}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":24}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identif \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identi \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2619,"ts":1715098673.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":22}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":23}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/identi \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/ident \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2620,"ts":1715098673.571,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":21}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":22}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/ident \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/iden \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2621,"ts":1715098673.606,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":20}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":21}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/iden \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/ide \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2622,"ts":1715098673.639,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":19}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":20}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/ide \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2623,"ts":1715098673.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":44}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":45}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identifier \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identifie \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2624,"ts":1715098674.897,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":43}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":44}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identifie \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identifi \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2625,"ts":1715098675.149,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":42}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":43}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identifi \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identif \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2626,"ts":1715098675.181,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":41}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":42}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identif \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identi \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2627,"ts":1715098675.215,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":40}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":41}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/identi \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/ident \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2628,"ts":1715098675.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":39}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":40}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/ident \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/iden \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2629,"ts":1715098675.282,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":38}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":39}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/iden \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/ide \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2630,"ts":1715098675.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":37}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":38}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/ide \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/id \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2631,"ts":1715098675.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","loc":101,"raw":"'(cst/string \"hi \" [(, (cst/identifier \"1\" 81) (, \" 12\" 82))] 79)'"}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"'(cst/string \"hi \" [(, (cst/ide \"1\" 81) (, \" 12\" 82))] 79)'","loc":101}},"nsMap":{},"nsPrev":{},"id":2632,"ts":1715098677.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"type":"rich-text","idx":101,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"type":"rich-text","idx":101,"sel":null}]}],"prev":{"101":{"type":"raw-code","lang":"javascript","raw":"'(cst/string \"hi \" [(, (cst/ide \"1\" 81) (, \" 12\" 82))] 79)'","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"raw-code","lang":"javascript","raw":"'(cst/string \"hi \" [(, (cst/id \"1\" 81) (, \" 12\" 82))] 79)'","loc":101}},"nsMap":{},"nsPrev":{},"id":2633,"ts":1715098677.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":27}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":28}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identifier \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identifie \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2634,"ts":1715098679.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":26}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":27}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identifie \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identifi \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2635,"ts":1715098679.432,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":25}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":26}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identifi \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identif \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2636,"ts":1715098679.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":24}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":25}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identif \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identi \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2637,"ts":1715098679.499,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":23}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":24}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/identi \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/ident \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2638,"ts":1715098679.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":22}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":23}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/ident \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/iden \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2639,"ts":1715098679.564,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":21}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":22}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/iden \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/ide \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2640,"ts":1715098679.597,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":20}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":21}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/ide \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2641,"ts":1715098679.63,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":46}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":47}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identifier \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identifie \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2642,"ts":1715098680.76,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":45}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":46}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identifie \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identifi \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2643,"ts":1715098681.011,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":44}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":45}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identifi \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identif \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2644,"ts":1715098681.047,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":43}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":44}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identif \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identi \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2645,"ts":1715098681.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":42}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":43}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/identi \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/ident \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2646,"ts":1715098681.113,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":41}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":42}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/ident \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/iden \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2647,"ts":1715098681.15,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":40}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":41}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/iden \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/ide \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2648,"ts":1715098681.181,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":39}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":40}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/ide \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/id \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2649,"ts":1715098681.378,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/identifier':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/ide':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2650,"ts":1715098699.497,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/ide':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2651,"ts":1715098699.685,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"idx":97,"type":"end"}]}],"prev":{"102":null},"meta":{},"metaPrev":{},"map":{"102":{"type":"blank","loc":102}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,3,98,103,36,100],"type":"normal"},"103":{"type":"normal","top":102,"children":[],"id":103}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,3,98,36,100],"type":"normal"},"103":null},"id":2652,"ts":1715098706.27,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"start"}]}],"prev":{"102":{"type":"blank","loc":102}},"meta":{},"metaPrev":{},"map":{"102":{"type":"list","values":[],"loc":102}},"nsMap":{},"nsPrev":{},"id":2653,"ts":1715098707.124,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":0},{"idx":104,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"inside"}]}],"prev":{"102":{"type":"list","values":[],"loc":102},"104":null},"meta":{},"metaPrev":{},"map":{"102":{"type":"list","values":[104],"loc":102},"104":{"type":"identifier","text":",","loc":104}},"nsMap":{},"nsPrev":{},"id":2654,"ts":1715098707.326,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"idx":105,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":0},{"idx":104,"type":"subtext","at":1}]}],"prev":{"102":{"type":"list","values":[104],"loc":102},"105":null},"meta":{},"metaPrev":{},"map":{"102":{"type":"list","values":[104,105],"loc":102},"105":{"type":"blank","loc":105}},"nsMap":{},"nsPrev":{},"id":2655,"ts":1715098707.406,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"idx":105,"type":"start"}]}],"prev":{"105":{"type":"blank","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"// some code","loc":105}},"nsMap":{},"nsPrev":{},"id":2656,"ts":1715098712.254,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"// some code","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v","loc":105}},"nsMap":{},"nsPrev":{},"id":2657,"ts":1715098713.399,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v ","loc":105}},"nsMap":{},"nsPrev":{},"id":2658,"ts":1715098713.569,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v ","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v =","loc":105}},"nsMap":{},"nsPrev":{},"id":2659,"ts":1715098713.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v =","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v =>","loc":105}},"nsMap":{},"nsPrev":{},"id":2660,"ts":1715098713.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v =>","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => ","loc":105}},"nsMap":{},"nsPrev":{},"id":2661,"ts":1715098714.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => ","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => v","loc":105}},"nsMap":{},"nsPrev":{},"id":2662,"ts":1715098714.586,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => v","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => va","loc":105}},"nsMap":{},"nsPrev":{},"id":2663,"ts":1715098714.749,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => va","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => valu","loc":105}},"nsMap":{},"nsPrev":{},"id":2664,"ts":1715098714.849,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => valu","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => value","loc":105}},"nsMap":{},"nsPrev":{},"id":2665,"ts":1715098714.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => value","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => v","loc":105}},"nsMap":{},"nsPrev":{},"id":2666,"ts":1715098717.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => v","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => ","loc":105}},"nsMap":{},"nsPrev":{},"id":2667,"ts":1715098717.774,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => ","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => t","loc":105}},"nsMap":{},"nsPrev":{},"id":2668,"ts":1715098721.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => t","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => to","loc":105}},"nsMap":{},"nsPrev":{},"id":2669,"ts":1715098722.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => to","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toN","loc":105}},"nsMap":{},"nsPrev":{},"id":2670,"ts":1715098722.267,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toN","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNo","loc":105}},"nsMap":{},"nsPrev":{},"id":2671,"ts":1715098722.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNo","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode","loc":105}},"nsMap":{},"nsPrev":{},"id":2672,"ts":1715098722.566,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(","loc":105}},"nsMap":{},"nsPrev":{},"id":2673,"ts":1715098722.734,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fr","loc":105}},"nsMap":{},"nsPrev":{},"id":2674,"ts":1715098723.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fr","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(from","loc":105}},"nsMap":{},"nsPrev":{},"id":2675,"ts":1715098723.296,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(from","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromN","loc":105}},"nsMap":{},"nsPrev":{},"id":2676,"ts":1715098723.508,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromN","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNo","loc":105}},"nsMap":{},"nsPrev":{},"id":2677,"ts":1715098723.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNo","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNod","loc":105}},"nsMap":{},"nsPrev":{},"id":2678,"ts":1715098723.833,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNod","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNod(","loc":105}},"nsMap":{},"nsPrev":{},"id":2679,"ts":1715098724.012,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNod(","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNod","loc":105}},"nsMap":{},"nsPrev":{},"id":2680,"ts":1715098724.249,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNod","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode","loc":105}},"nsMap":{},"nsPrev":{},"id":2681,"ts":1715098724.329,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(","loc":105}},"nsMap":{},"nsPrev":{},"id":2682,"ts":1715098724.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(v","loc":105}},"nsMap":{},"nsPrev":{},"id":2683,"ts":1715098724.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(v","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(v)","loc":105}},"nsMap":{},"nsPrev":{},"id":2684,"ts":1715098724.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(v)","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2685,"ts":1715098725.129,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"idx":105,"type":"end"}]}],"prev":{"102":{"type":"list","values":[104,105],"loc":102},"106":null},"meta":{},"metaPrev":{},"map":{"102":{"type":"list","values":[104,105,106],"loc":102},"106":{"type":"blank","loc":106}},"nsMap":{},"nsPrev":{},"id":2686,"ts":1715098729.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"start"}]}],"prev":{"106":{"type":"blank","loc":106}},"meta":{},"metaPrev":{},"map":{"106":{"type":"array","values":[],"loc":106}},"nsMap":{},"nsPrev":{},"id":2687,"ts":1715098729.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"inside"}]}],"prev":{"106":{"type":"array","values":[],"loc":106},"107":null},"meta":{},"metaPrev":{},"map":{"106":{"type":"array","values":[107],"loc":106},"107":{"type":"list","values":[],"loc":107}},"nsMap":{},"nsPrev":{},"id":2688,"ts":1715098729.62,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":0},{"idx":108,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"inside"}]}],"prev":{"107":{"type":"list","values":[],"loc":107},"108":null},"meta":{},"metaPrev":{},"map":{"107":{"type":"list","values":[108],"loc":107},"108":{"type":"identifier","text":",","loc":108}},"nsMap":{},"nsPrev":{},"id":2689,"ts":1715098729.81,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":0},{"idx":108,"type":"subtext","at":1}]}],"prev":{"107":{"type":"list","values":[108],"loc":107},"109":null},"meta":{},"metaPrev":{},"map":{"107":{"type":"list","values":[108,109],"loc":107},"109":{"type":"blank","loc":109}},"nsMap":{},"nsPrev":{},"id":2690,"ts":1715098729.88,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"start"}]}],"prev":{"109":{"type":"blank","loc":109}},"meta":{},"metaPrev":{},"map":{"109":{"type":"list","values":[],"loc":109}},"nsMap":{},"nsPrev":{},"id":2691,"ts":1715098730.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"child","at":0},{"idx":110,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"inside"}]}],"prev":{"109":{"type":"list","values":[],"loc":109},"110":null},"meta":{},"metaPrev":{},"map":{"109":{"type":"list","values":[110],"loc":109},"110":{"type":"identifier","text":"@","loc":110}},"nsMap":{},"nsPrev":{},"id":2692,"ts":1715098730.217,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"child","at":1},{"idx":111,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"child","at":0},{"idx":110,"type":"subtext","at":1}]}],"prev":{"109":{"type":"list","values":[110],"loc":109},"111":null},"meta":{},"metaPrev":{},"map":{"109":{"type":"list","values":[110,111],"loc":109},"111":{"type":"blank","loc":111}},"nsMap":{},"nsPrev":{},"id":2693,"ts":1715098730.911,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"child","at":1},{"idx":111,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"child","at":1},{"idx":111,"type":"start"}]}],"prev":{"111":{"type":"blank","loc":111}},"meta":{},"metaPrev":{},"map":{"111":{"type":"identifier","text":"1","loc":111}},"nsMap":{},"nsPrev":{},"id":2694,"ts":1715098731.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"child","at":1},{"idx":111,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"child","at":1},{"idx":111,"type":"subtext","at":1}]}],"prev":{"111":{"type":"identifier","text":"1","loc":111}},"meta":{},"metaPrev":{},"map":{"111":{"type":"identifier","text":"10","loc":111}},"nsMap":{},"nsPrev":{},"id":2695,"ts":1715098731.648,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":2},{"idx":112,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":0},{"idx":107,"type":"child","at":1},{"idx":109,"type":"end"}]}],"prev":{"107":{"type":"list","values":[108,109],"loc":107},"112":null},"meta":{},"metaPrev":{},"map":{"107":{"type":"list","values":[108,109,112],"loc":107},"112":{"type":"blank","loc":112}},"nsMap":{},"nsPrev":{},"id":2696,"ts":1715098732.745,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"103":{"type":"normal","top":102,"children":[],"id":103,"plugin":{"id":"fixture","options":null}}},"nsPrev":{"103":{"type":"normal","top":102,"children":[],"id":103}},"id":2697,"ts":1715098735.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = jcst => {\n  switch (jcst.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = no => {\n  switch (jcst.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2698,"ts":1715098759.414,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = no => {\n  switch (jcst.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (jcst.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2699,"ts":1715098759.576,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"idx":97,"type":"start"}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (jcst.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (no.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2700,"ts":1715098760.937,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (no.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (nod.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2701,"ts":1715098760.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (nod.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2702,"ts":1715098761.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: jcst.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: no.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2703,"ts":1715098766.29,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: no.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: nod.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2704,"ts":1715098766.327,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":98},{"type":"rich-text","idx":97,"sel":null}]}],"prev":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: nod.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"meta":{},"metaPrev":{},"map":{"97":{"type":"raw-code","lang":"javascript","raw":"const toNode = node => {\n  switch (node.type) {\n    case 'cst/id':\n      return {type: 'identifier', text: node[0], loc: node[1]}\n    case 'cst/spread':\n      return {type: 'spread', contents: toNode(node[0]), loc: node[1]}\n    case 'cst/empty-spread':\n      return {type: 'spread', contents: {type: 'blank', loc: node[0]}, loc: node[0]}\n    case 'cst/array':\n    case 'cst/list':\n    case 'cst/record':\n      return {type: node.type.slice(4), values: unwrapList(node[0]).map(toNode), loc: node[1]}\n    case 'cst/string':\n      return {type: 'string', first: {type: 'stringText', text: node[0], loc: node[2]},\n        templates: unwrapList(node[1]).map(({0: expr, 1: text, 2: loc}) => ({\n          expr: toNode(expr),\n          suffix: {text, loc},\n          loc,\n        })),\n        loc: node[2]\n      }\n  }\n}","loc":97}},"nsMap":{},"nsPrev":{},"id":2705,"ts":1715098766.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":0,"idx":106},{"idx":107,"type":"child","at":2},{"idx":113,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":0,"idx":106},{"idx":107,"type":"child","at":2},{"idx":112,"type":"subtext","at":0}]}],"prev":{"107":{"type":"list","values":[108,109,112],"loc":107},"113":null},"meta":{},"metaPrev":{},"map":{"107":{"type":"list","values":[108,109,113],"loc":107},"113":{"type":"raw-code","lang":"javascript","loc":113,"raw":"{\"type\":\"identifier\",\"text\":\"10\",\"loc\":111}"}},"nsMap":{},"nsPrev":{},"id":2706,"ts":1715098777.431,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":0,"idx":106},{"idx":107,"type":"child","at":2},{"idx":113,"type":"end"}]}],"prev":{"106":{"type":"array","values":[107],"loc":106},"114":null,"115":null,"116":null,"117":null},"meta":{},"metaPrev":{},"map":{"106":{"type":"array","values":[107,114],"loc":106},"114":{"type":"list","values":[115,116,117],"loc":114},"115":{"type":"identifier","text":",","loc":115},"116":{"type":"blank","loc":116},"117":{"type":"blank","loc":117}},"nsMap":{},"nsPrev":{},"id":2707,"ts":1715098779.414,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"start"}]}],"prev":{"116":{"type":"blank","loc":116}},"meta":{},"metaPrev":{},"map":{"116":{"type":"identifier","text":"@","loc":116}},"nsMap":{},"nsPrev":{},"id":2708,"ts":1715098779.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"subtext","at":1}]}],"prev":{"116":{"type":"identifier","text":"@","loc":116}},"meta":{},"metaPrev":{},"map":{"116":{"type":"blank","loc":116}},"nsMap":{},"nsPrev":{},"id":2709,"ts":1715098780.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"subtext","at":0}]}],"prev":{"116":{"type":"blank","loc":116}},"meta":{},"metaPrev":{},"map":{"116":{"type":"list","values":[],"loc":116}},"nsMap":{},"nsPrev":{},"id":2710,"ts":1715098780.388,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":0},{"idx":118,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"inside"}]}],"prev":{"116":{"type":"list","values":[],"loc":116},"118":null},"meta":{},"metaPrev":{},"map":{"116":{"type":"list","values":[118],"loc":116},"118":{"type":"identifier","text":"@","loc":118}},"nsMap":{},"nsPrev":{},"id":2711,"ts":1715098780.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":0},{"idx":118,"type":"subtext","at":1}]}],"prev":{"116":{"type":"list","values":[118],"loc":116},"119":null},"meta":{},"metaPrev":{},"map":{"116":{"type":"list","values":[118,119],"loc":116},"119":{"type":"blank","loc":119}},"nsMap":{},"nsPrev":{},"id":2712,"ts":1715098780.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"start"}]}],"prev":{"119":{"type":"blank","loc":119}},"meta":{},"metaPrev":{},"map":{"119":{"type":"array","values":[],"loc":119}},"nsMap":{},"nsPrev":{},"id":2713,"ts":1715098781.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":0},{"idx":120,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"inside"}]}],"prev":{"119":{"type":"array","values":[],"loc":119},"120":null},"meta":{},"metaPrev":{},"map":{"119":{"type":"array","values":[120],"loc":119},"120":{"type":"identifier","text":"1","loc":120}},"nsMap":{},"nsPrev":{},"id":2714,"ts":1715098781.398,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":0},{"idx":120,"type":"subtext","at":1}]}],"prev":{"119":{"type":"array","values":[120],"loc":119},"121":null},"meta":{},"metaPrev":{},"map":{"119":{"type":"array","values":[120,121],"loc":119},"121":{"type":"blank","loc":121}},"nsMap":{},"nsPrev":{},"id":2715,"ts":1715098782.867,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"start"}]}],"prev":{"121":{"type":"blank","loc":121}},"meta":{},"metaPrev":{},"map":{"121":{"type":"list","values":[],"loc":121}},"nsMap":{},"nsPrev":{},"id":2716,"ts":1715098784.005,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"child","at":0},{"idx":122,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"inside"}]}],"prev":{"121":{"type":"list","values":[],"loc":121},"122":null},"meta":{},"metaPrev":{},"map":{"121":{"type":"list","values":[122],"loc":121},"122":{"type":"identifier","text":"2","loc":122}},"nsMap":{},"nsPrev":{},"id":2717,"ts":1715098784.28,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"child","at":1},{"idx":123,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"child","at":0},{"idx":122,"type":"subtext","at":1}]}],"prev":{"121":{"type":"list","values":[122],"loc":121},"123":null},"meta":{},"metaPrev":{},"map":{"121":{"type":"list","values":[122,123],"loc":121},"123":{"type":"blank","loc":123}},"nsMap":{},"nsPrev":{},"id":2718,"ts":1715098784.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"child","at":1},{"idx":123,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":1},{"idx":114,"type":"child","at":1},{"idx":116,"type":"child","at":1},{"idx":119,"type":"child","at":1},{"idx":121,"type":"child","at":1},{"idx":123,"type":"start"}]}],"prev":{"123":{"type":"blank","loc":123}},"meta":{},"metaPrev":{},"map":{"123":{"type":"identifier","text":"3","loc":123}},"nsMap":{},"nsPrev":{},"id":2719,"ts":1715098784.644,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":1,"idx":106},{"idx":114,"type":"child","at":2},{"idx":124,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":1,"idx":106},{"idx":114,"type":"child","at":2},{"idx":117,"type":"subtext","at":0}]}],"prev":{"114":{"type":"list","values":[115,116,117],"loc":114},"124":null},"meta":{},"metaPrev":{},"map":{"114":{"type":"list","values":[115,116,124],"loc":114},"124":{"type":"raw-code","lang":"javascript","loc":124,"raw":"{\"type\":\"array\",\"values\":[{\"type\":\"identifier\",\"text\":\"1\",\"loc\":120},{\"type\":\"list\",\"values\":[{\"type\":\"identifier\",\"text\":\"2\",\"loc\":122},{\"type\":\"identifier\",\"text\":\"3\",\"loc\":123}],\"loc\":121}],\"loc\":119}"}},"nsMap":{},"nsPrev":{},"id":2720,"ts":1715098787.147,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => toNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => eqtoNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2721,"ts":1715098803.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => eqtoNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equtoNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2722,"ts":1715098803.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equtoNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equaltoNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2723,"ts":1715098803.578,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equaltoNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(toNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2724,"ts":1715098803.829,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(toNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(,toNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2725,"ts":1715098804.355,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(,toNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(toNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2726,"ts":1715098804.583,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(toNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(v,toNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2727,"ts":1715098804.727,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(v,toNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(v, toNode(fromNode(v))","loc":105}},"nsMap":{},"nsPrev":{},"id":2728,"ts":1715098804.869,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(v, toNode(fromNode(v))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(v, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2729,"ts":1715098806.463,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":0,"idx":106},{"idx":107,"type":"child","at":2},{"idx":113,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":0,"idx":106},{"idx":107,"type":"child","at":2},{"idx":113,"type":"end"}]}],"prev":{"107":{"type":"list","values":[108,109,113],"loc":107},"113":{"type":"raw-code","lang":"javascript","loc":113,"raw":"{\"type\":\"identifier\",\"text\":\"10\",\"loc\":111}"}},"meta":{},"metaPrev":{},"map":{"107":{"type":"list","values":[108,109,113],"loc":107},"113":{"type":"blank","loc":113}},"nsMap":{},"nsPrev":{},"id":2730,"ts":1715098808.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":0,"idx":106},{"idx":107,"type":"child","at":2},{"idx":125,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":0,"idx":106},{"idx":107,"type":"child","at":2},{"idx":113,"type":"subtext","at":0}]}],"prev":{"107":{"type":"list","values":[108,109,113],"loc":107},"125":null},"meta":{},"metaPrev":{},"map":{"107":{"type":"list","values":[108,109,125],"loc":107},"125":{"type":"raw-code","lang":"javascript","loc":125,"raw":"true"}},"nsMap":{},"nsPrev":{},"id":2731,"ts":1715098848.134,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":1,"idx":106},{"idx":114,"type":"child","at":2},{"idx":124,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":1,"idx":106},{"idx":114,"type":"child","at":2},{"idx":124,"type":"end"}]}],"prev":{"114":{"type":"list","values":[115,116,124],"loc":114},"124":{"type":"raw-code","lang":"javascript","loc":124,"raw":"{\"type\":\"array\",\"values\":[{\"type\":\"identifier\",\"text\":\"1\",\"loc\":120},{\"type\":\"list\",\"values\":[{\"type\":\"identifier\",\"text\":\"2\",\"loc\":122},{\"type\":\"identifier\",\"text\":\"3\",\"loc\":123}],\"loc\":121}],\"loc\":119}"}},"meta":{},"metaPrev":{},"map":{"114":{"type":"list","values":[115,116,124],"loc":114},"124":{"type":"blank","loc":124}},"nsMap":{},"nsPrev":{},"id":2732,"ts":1715098850.143,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":1,"idx":106},{"idx":114,"type":"child","at":2},{"idx":126,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":1,"idx":106},{"idx":114,"type":"child","at":2},{"idx":124,"type":"start"}]}],"prev":{"114":{"type":"list","values":[115,116,124],"loc":114},"126":null},"meta":{},"metaPrev":{},"map":{"114":{"type":"list","values":[115,116,126],"loc":114},"126":{"type":"raw-code","lang":"javascript","loc":126,"raw":"true"}},"nsMap":{},"nsPrev":{},"id":2733,"ts":1715098851.592,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":1,"idx":106},{"idx":114,"type":"child","at":2},{"idx":126,"type":"end"}]}],"prev":{"106":{"type":"array","values":[107,114],"loc":106},"127":null,"128":null,"129":null,"130":null},"meta":{},"metaPrev":{},"map":{"106":{"type":"array","values":[107,114,127],"loc":106},"127":{"type":"list","values":[128,129,130],"loc":127},"128":{"type":"identifier","text":",","loc":128},"129":{"type":"blank","loc":129},"130":{"type":"blank","loc":130}},"nsMap":{},"nsPrev":{},"id":2734,"ts":1715098852.123,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"start"}]}],"prev":{"129":{"type":"blank","loc":129}},"meta":{},"metaPrev":{},"map":{"129":{"type":"list","values":[],"loc":129}},"nsMap":{},"nsPrev":{},"id":2735,"ts":1715098858.293,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":0},{"idx":131,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"inside"}]}],"prev":{"129":{"type":"list","values":[],"loc":129},"131":null},"meta":{},"metaPrev":{},"map":{"129":{"type":"list","values":[131],"loc":129},"131":{"type":"identifier","text":"@","loc":131}},"nsMap":{},"nsPrev":{},"id":2736,"ts":1715098858.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":0},{"idx":131,"type":"subtext","at":1}]}],"prev":{"129":{"type":"list","values":[131],"loc":129},"132":null},"meta":{},"metaPrev":{},"map":{"129":{"type":"list","values":[131,132],"loc":129},"132":{"type":"blank","loc":132}},"nsMap":{},"nsPrev":{},"id":2737,"ts":1715098858.782,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"start"}]}],"prev":{"132":{"type":"blank","loc":132}},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[],"loc":132}},"nsMap":{},"nsPrev":{},"id":2738,"ts":1715098860.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":0},{"idx":133,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"inside"}]}],"prev":{"132":{"type":"record","values":[],"loc":132},"133":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133],"loc":132},"133":{"type":"identifier","text":"a","loc":133}},"nsMap":{},"nsPrev":{},"id":2739,"ts":1715098861.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":1},{"idx":134,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":0},{"idx":133,"type":"subtext","at":1}]}],"prev":{"132":{"type":"record","values":[133],"loc":132},"134":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134],"loc":132},"134":{"type":"blank","loc":134}},"nsMap":{},"nsPrev":{},"id":2740,"ts":1715098861.896,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":1},{"idx":134,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":1},{"idx":134,"type":"start"}]}],"prev":{"134":{"type":"blank","loc":134}},"meta":{},"metaPrev":{},"map":{"134":{"type":"identifier","text":"b","loc":134}},"nsMap":{},"nsPrev":{},"id":2741,"ts":1715098862.281,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":135,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":1},{"idx":134,"type":"subtext","at":1}]}],"prev":{"132":{"type":"record","values":[133,134],"loc":132},"135":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,135],"loc":132},"135":{"type":"blank","loc":135}},"nsMap":{},"nsPrev":{},"id":2742,"ts":1715098862.432,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":136,"type":"attribute","at":1},{"idx":137,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":135,"type":"start"}]}],"prev":{"132":{"type":"record","values":[133,134,135],"loc":132},"136":null,"137":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,136],"loc":132},"136":{"type":"recordAccess","target":135,"items":[137],"loc":136},"137":{"type":"accessText","text":"","loc":137}},"nsMap":{},"nsPrev":{},"id":2743,"ts":1715098862.583,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":136,"type":"attribute","at":1},{"idx":137,"type":"subtext","at":0}]}],"prev":{"132":{"type":"record","values":[133,134,136],"loc":132},"136":{"type":"recordAccess","target":135,"items":[137],"loc":136},"137":{"type":"accessText","text":"","loc":137},"138":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,138],"loc":132},"136":null,"137":null,"138":{"type":"spread","contents":135,"loc":138}},"nsMap":{},"nsPrev":{},"id":2744,"ts":1715098862.696,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"start"}]}],"prev":{"135":{"type":"blank","loc":135}},"meta":{},"metaPrev":{},"map":{"135":{"type":"identifier","text":"t","loc":135}},"nsMap":{},"nsPrev":{},"id":2745,"ts":1715098865.214,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":1}]}],"prev":{"135":{"type":"identifier","text":"t","loc":135}},"meta":{},"metaPrev":{},"map":{"135":{"type":"identifier","text":"tw","loc":135}},"nsMap":{},"nsPrev":{},"id":2746,"ts":1715098865.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":2}]}],"prev":{"135":{"type":"identifier","text":"tw","loc":135}},"meta":{},"metaPrev":{},"map":{"135":{"type":"identifier","text":"two","loc":135}},"nsMap":{},"nsPrev":{},"id":2747,"ts":1715098865.383,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":3},{"idx":139,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":3}]}],"prev":{"132":{"type":"record","values":[133,134,138],"loc":132},"139":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,138,139],"loc":132},"139":{"type":"blank","loc":139}},"nsMap":{},"nsPrev":{},"id":2748,"ts":1715098868.698,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"idx":106,"type":"child","at":2},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":3},{"idx":139,"type":"start"}]}],"prev":{"132":{"type":"record","values":[133,134,138,139],"loc":132},"139":{"type":"blank","loc":139}},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,138],"loc":132},"139":null},"nsMap":{},"nsPrev":{},"id":2749,"ts":1715098874.374,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":2},{"idx":140,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":2},{"idx":130,"type":"subtext","at":0}]}],"prev":{"127":{"type":"list","values":[128,129,130],"loc":127},"140":null},"meta":{},"metaPrev":{},"map":{"127":{"type":"list","values":[128,129,140],"loc":127},"140":{"type":"raw-code","lang":"javascript","loc":140,"raw":"true"}},"nsMap":{},"nsPrev":{},"id":2750,"ts":1715098886.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":1},{"idx":134,"type":"subtext","at":1}]}],"prev":{"132":{"type":"record","values":[133,134,138],"loc":132},"141":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138],"loc":132},"141":{"type":"blank","loc":141}},"nsMap":{},"nsPrev":{},"id":2751,"ts":1715098896.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"text","at":0},{"idx":142,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"start"}]}],"prev":{"141":{"type":"blank","loc":141},"142":null},"meta":{},"metaPrev":{},"map":{"141":{"type":"string","first":142,"templates":[],"loc":141},"142":{"type":"stringText","loc":142,"text":""}},"nsMap":{},"nsPrev":{},"id":2752,"ts":1715098897.085,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"text","at":0},{"idx":142,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"text","at":0},{"idx":142,"type":"subtext","at":0}]}],"prev":{"142":{"type":"stringText","loc":142,"text":""}},"meta":{},"metaPrev":{},"map":{"142":{"type":"stringText","loc":142,"text":"t"}},"nsMap":{},"nsPrev":{},"id":2753,"ts":1715098897.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"text","at":0},{"idx":142,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"text","at":0},{"idx":142,"type":"subtext","at":1}]}],"prev":{"142":{"type":"stringText","loc":142,"text":"t"}},"meta":{},"metaPrev":{},"map":{"142":{"type":"stringText","loc":142,"text":"tw"}},"nsMap":{},"nsPrev":{},"id":2754,"ts":1715098897.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"text","at":0},{"idx":142,"type":"subtext","at":3}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":2},{"idx":141,"type":"text","at":0},{"idx":142,"type":"subtext","at":2}]}],"prev":{"142":{"type":"stringText","loc":142,"text":"tw"}},"meta":{},"metaPrev":{},"map":{"142":{"type":"stringText","loc":142,"text":"two"}},"nsMap":{},"nsPrev":{},"id":2755,"ts":1715098897.693,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(v, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(frov, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2756,"ts":1715098908.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(frov, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromv, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2757,"ts":1715098908.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromv, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNv, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2758,"ts":1715098908.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNv, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNodv, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2759,"ts":1715098909.037,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNodv, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNodev, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2760,"ts":1715098909.13,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNodev, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2761,"ts":1715098909.269,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v,) toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2762,"ts":1715098909.812,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v,) toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v, toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2763,"ts":1715098910.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v, toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2764,"ts":1715098910.81,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v) toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2765,"ts":1715098911.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v) toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2766,"ts":1715098911.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), frotoNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2767,"ts":1715098911.86,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), frotoNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromtoNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2768,"ts":1715098911.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromtoNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNtoNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2769,"ts":1715098912.073,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNtoNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNotoNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2770,"ts":1715098912.221,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNotoNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNodetoNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2771,"ts":1715098912.293,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNodetoNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNode(toNode(fromNode(v)))","loc":105}},"nsMap":{},"nsPrev":{},"id":2772,"ts":1715098912.434,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":1},{"type":"rich-text","idx":105,"sel":null}]}],"prev":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNode(toNode(fromNode(v)))","loc":105}},"meta":{},"metaPrev":{},"map":{"105":{"type":"raw-code","lang":"javascript","raw":"v => equal(fromNode(v), fromNode(toNode(fromNode(v))))","loc":105}},"nsMap":{},"nsPrev":{},"id":2773,"ts":1715098914.02,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":4},{"idx":143,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":3},{"idx":138,"type":"spread-contents"},{"idx":135,"type":"subtext","at":3}]}],"prev":{"132":{"type":"record","values":[133,134,141,138],"loc":132},"143":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138,143],"loc":132},"143":{"type":"blank","loc":143}},"nsMap":{},"nsPrev":{},"id":2774,"ts":1715098916.637,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":4},{"idx":144,"type":"attribute","at":1},{"idx":145,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":4},{"idx":143,"type":"start"}]}],"prev":{"132":{"type":"record","values":[133,134,141,138,143],"loc":132},"144":null,"145":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138,144],"loc":132},"144":{"type":"recordAccess","target":143,"items":[145],"loc":144},"145":{"type":"accessText","text":"","loc":145}},"nsMap":{},"nsPrev":{},"id":2775,"ts":1715098917.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":4},{"idx":146,"type":"spread-contents"},{"idx":143,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":4},{"idx":144,"type":"attribute","at":1},{"idx":145,"type":"subtext","at":0}]}],"prev":{"132":{"type":"record","values":[133,134,141,138,144],"loc":132},"144":{"type":"recordAccess","target":143,"items":[145],"loc":144},"145":{"type":"accessText","text":"","loc":145},"146":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138,146],"loc":132},"144":null,"145":null,"146":{"type":"spread","contents":143,"loc":146}},"nsMap":{},"nsPrev":{},"id":2776,"ts":1715098917.231,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":5},{"idx":147,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":4},{"idx":146,"type":"spread-contents"},{"idx":143,"type":"start"}]}],"prev":{"132":{"type":"record","values":[133,134,141,138,146],"loc":132},"147":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138,146,147],"loc":132},"147":{"type":"blank","loc":147}},"nsMap":{},"nsPrev":{},"id":2777,"ts":1715098918.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":5},{"idx":148,"type":"attribute","at":1},{"idx":149,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":5},{"idx":147,"type":"start"}]}],"prev":{"132":{"type":"record","values":[133,134,141,138,146,147],"loc":132},"148":null,"149":null},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138,146,148],"loc":132},"148":{"type":"recordAccess","target":147,"items":[149],"loc":148},"149":{"type":"accessText","text":"","loc":149}},"nsMap":{},"nsPrev":{},"id":2778,"ts":1715098918.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":5},{"idx":147,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":5},{"idx":148,"type":"attribute","at":1},{"idx":149,"type":"subtext","at":0}]}],"prev":{"132":{"type":"record","values":[133,134,141,138,146,148],"loc":132}},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138,146,147],"loc":132}},"nsMap":{},"nsPrev":{},"id":2779,"ts":1715098919.407,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":4},{"idx":146,"type":"spread-contents"},{"idx":143,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"child","at":2},{"type":"child","at":2,"idx":106},{"idx":127,"type":"child","at":1},{"idx":129,"type":"child","at":1},{"idx":132,"type":"child","at":5},{"idx":147,"type":"end"}]}],"prev":{"132":{"type":"record","values":[133,134,141,138,146,147],"loc":132},"147":{"type":"blank","loc":147}},"meta":{},"metaPrev":{},"map":{"132":{"type":"record","values":[133,134,141,138,146],"loc":132},"147":null},"nsMap":{},"nsPrev":{},"id":2780,"ts":1715098919.676,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","idx":98},{"type":"ns-top","idx":103},{"type":"start","idx":102}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":103,"idx":0},{"type":"ns-top","idx":103},{"idx":102,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,3,98,36,100],"type":"normal"},"98":{"type":"normal","top":97,"children":[103],"id":98}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,3,98,103,36,100],"type":"normal"},"98":{"type":"normal","top":97,"children":[],"id":98}},"id":2781,"ts":1715098926.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":8}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":9}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/id \\\"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/id \"10\\\" 55)"}},"nsMap":{},"nsPrev":{},"id":2782,"ts":1715098935.17,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":11}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":12}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/id \"10\\\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/id \"10\" 55)"}},"nsMap":{},"nsPrev":{},"id":2783,"ts":1715098935.87,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":20}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":21}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \\\"1\\\" 69) (cst/id \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\\\" 69) (cst/id \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2784,"ts":1715098936.797,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":22}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":23}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\\\" 69) (cst/id \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\" 69) (cst/id \\\"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2785,"ts":1715098937.45,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":36}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":37}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\" 69) (cst/id \\\"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\" 69) (cst/id \"2\\\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2786,"ts":1715098938.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":38}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"text","at":0},{"idx":73,"type":"subtext","at":39}]}],"prev":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\" 69) (cst/id \"2\\\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\" 69) (cst/id \"2\" 71)] 68)"}},"nsMap":{},"nsPrev":{},"id":2787,"ts":1715098939.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":21}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":22}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \\\"hi\\\" 92) (cst/id \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\\\" 92) (cst/id \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2788,"ts":1715098941.168,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":24}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":25}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\\\" 92) (cst/id \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\" 92) (cst/id \\\"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2789,"ts":1715098941.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":38}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":39}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\" 92) (cst/id \\\"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\" 92) (cst/id \"10\\\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2790,"ts":1715098943.134,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":41}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"text","at":0},{"idx":94,"type":"subtext","at":42}]}],"prev":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\" 92) (cst/id \"10\\\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\" 92) (cst/id \"10\" 93)] 88)"}},"nsMap":{},"nsPrev":{},"id":2791,"ts":1715098943.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"end"}]}],"prev":{"74":{"type":"list","values":[75,76,101],"loc":74},"101":{"type":"raw-code","lang":"javascript","raw":"'(cst/string \"hi \" [(, (cst/id \"1\" 81) (, \" 12\" 82))] 79)'","loc":101}},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,101],"loc":74},"101":{"type":"blank","loc":101}},"nsMap":{},"nsPrev":{},"id":2792,"ts":1715098962.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"inside"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"start"}]}],"prev":{"101":{"type":"blank","loc":101}},"meta":{},"metaPrev":{},"map":{"101":{"type":"record","values":[],"loc":101}},"nsMap":{},"nsPrev":{},"id":2793,"ts":1715098962.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"inside"}]}],"prev":{"74":{"type":"list","values":[75,76,101],"loc":74},"101":{"type":"record","values":[],"loc":101}},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,101],"loc":74},"101":{"type":"blank","loc":101}},"nsMap":{},"nsPrev":{},"id":2794,"ts":1715098962.853,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"text","at":0},{"idx":150,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"start"}]}],"prev":{"101":{"type":"blank","loc":101},"150":null},"meta":{},"metaPrev":{},"map":{"101":{"type":"string","first":150,"templates":[],"loc":101},"150":{"type":"stringText","loc":150,"text":""}},"nsMap":{},"nsPrev":{},"id":2795,"ts":1715098963.081,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"end"}]}],"prev":{"74":{"type":"list","values":[75,76,101],"loc":74},"101":{"type":"string","first":150,"templates":[],"loc":101},"150":{"type":"stringText","loc":150,"text":""}},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,101],"loc":74},"101":{"type":"blank","loc":101},"150":null},"nsMap":{},"nsPrev":{},"id":2796,"ts":1715098967.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":151,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":101,"type":"subtext","at":0}]}],"prev":{"74":{"type":"list","values":[75,76,101],"loc":74},"151":null},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,151],"loc":74},"151":{"type":"raw-code","lang":"javascript","loc":151,"raw":"'(cst/string \"hi \" [(, (cst/id \"1\" 81) (, \" 12\" 82))] 79)'"}},"nsMap":{},"nsPrev":{},"id":2797,"ts":1715098969.007,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"end"}]}],"prev":{"86":{"type":"list","values":[87,88,89],"loc":86},"89":{"type":"string","first":94,"templates":[],"loc":89},"94":{"type":"stringText","loc":94,"text":"(cst/record [(cst/id \"hi\" 92) (cst/id \"10\" 93)] 88)"}},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,89],"loc":86},"89":{"type":"blank","loc":89},"94":null},"nsMap":{},"nsPrev":{},"id":2798,"ts":1715098973.074,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":152,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":89,"type":"subtext","at":0}]}],"prev":{"86":{"type":"list","values":[87,88,89],"loc":86},"152":null},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,152],"loc":86},"152":{"type":"raw-code","lang":"javascript","loc":152,"raw":"'(cst/record [(cst/id \"hi\" 92) (cst/id \"10\" 93)] 88)'"}},"nsMap":{},"nsPrev":{},"id":2799,"ts":1715098976.195,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"end"}]}],"prev":{"61":{"type":"list","values":[62,63,64],"loc":61},"64":{"type":"string","first":73,"templates":[],"loc":64},"73":{"type":"stringText","loc":73,"text":"(cst/array [(cst/id \"1\" 69) (cst/id \"2\" 71)] 68)"}},"meta":{},"metaPrev":{},"map":{"61":{"type":"list","values":[62,63,64],"loc":61},"64":{"type":"blank","loc":64},"73":null},"nsMap":{},"nsPrev":{},"id":2800,"ts":1715098977.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":15}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":16}]}],"prev":{"60":{"type":"stringText","loc":60,"text":"(cst/id \"10\" 55)"}},"meta":{},"metaPrev":{},"map":{"60":{"type":"stringText","loc":60,"text":"(cst/id \"10\" 55"}},"nsMap":{},"nsPrev":{},"id":2801,"ts":1715098977.952,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":3},{"idx":153,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":15}]}],"prev":{"56":{"type":"list","values":[57,53,59],"loc":56},"153":null},"meta":{},"metaPrev":{},"map":{"56":{"type":"list","values":[57,53,59,153],"loc":56},"153":{"type":"raw-code","lang":"javascript","loc":153,"raw":"'(cst/id \"10\" 55)'"}},"nsMap":{},"nsPrev":{},"id":2802,"ts":1715098978.68,"libraryRoot":""},{"id":925,"meta":{},"metaPrev":{},"revert":2802,"prev":{"56":{"type":"list","values":[57,53,59,153],"loc":56},"153":{"type":"raw-code","lang":"javascript","loc":153,"raw":"'(cst/id \"10\" 55)'"}},"map":{"56":{"type":"list","values":[57,53,59],"loc":56},"153":null},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"text","at":0},{"idx":60,"type":"subtext","at":15}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":3},{"idx":153,"type":"end"}]}],"nsMap":{},"nsPrev":{},"ts":1715098979.921,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"end"}]}],"prev":{"56":{"type":"list","values":[57,53,59],"loc":56},"59":{"type":"string","first":60,"templates":[],"loc":59},"60":{"type":"stringText","loc":60,"text":"(cst/id \"10\" 55"}},"meta":{},"metaPrev":{},"map":{"56":{"type":"list","values":[57,53,59],"loc":56},"59":{"type":"blank","loc":59},"60":null},"nsMap":{},"nsPrev":{},"id":926,"ts":1715098980.936,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":154,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":59,"type":"subtext","at":0}]}],"prev":{"56":{"type":"list","values":[57,53,59],"loc":56},"154":null},"meta":{},"metaPrev":{},"map":{"56":{"type":"list","values":[57,53,154],"loc":56},"154":{"type":"raw-code","lang":"javascript","loc":154,"raw":"'(cst/id \"10\" 55)'"}},"nsMap":{},"nsPrev":{},"id":927,"ts":1715098982.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":155,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":64,"type":"subtext","at":0}]}],"prev":{"61":{"type":"list","values":[62,63,64],"loc":61},"155":null},"meta":{},"metaPrev":{},"map":{"61":{"type":"list","values":[62,63,155],"loc":61},"155":{"type":"raw-code","lang":"javascript","loc":155,"raw":"'(cst/array [(cst/id \"1\" 69) (cst/id \"2\" 71)] 68)'"}},"nsMap":{},"nsPrev":{},"id":928,"ts":1715098983.197,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"22":{"type":"normal","id":22,"top":23,"children":[],"collapsed":"pinned"}},"nsPrev":{"22":{"type":"normal","id":22,"top":23,"children":[]}},"id":929,"ts":1715101739.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"22":{"type":"normal","id":22,"top":23,"children":[],"collapsed":false}},"nsPrev":{"22":{"type":"normal","id":22,"top":23,"children":[],"collapsed":"pinned"}},"id":930,"ts":1715101742.574,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n      \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":931,"ts":1715102385.955,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n      \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":932,"ts":1715102386.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    ca\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":933,"ts":1715102386.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    ca\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    cas\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":934,"ts":1715102386.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    cas\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":935,"ts":1715102386.771,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case '\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":936,"ts":1715102386.85,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case '\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'ra\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":937,"ts":1715102387.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'ra\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":938,"ts":1715102387.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":939,"ts":1715102387.24,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-co\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":940,"ts":1715102387.459,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-co\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-cod\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":941,"ts":1715102387.604,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-cod\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":942,"ts":1715102387.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code'\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":943,"ts":1715102387.828,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code'\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":944,"ts":1715102388.063,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n    \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":945,"ts":1715102388.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n    \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":946,"ts":1715102388.677,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      re\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":947,"ts":1715102389.097,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      re\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      retu\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":948,"ts":1715102389.27,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      retu\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":949,"ts":1715102389.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":950,"ts":1715102389.54,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":951,"ts":1715102389.633,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {t\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":952,"ts":1715102389.782,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {t\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {typ\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":953,"ts":1715102389.883,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {typ\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":954,"ts":1715102389.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type:\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":955,"ts":1715102390.139,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type:\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":956,"ts":1715102390.19,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: '\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":957,"ts":1715102390.391,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: '\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'c\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":958,"ts":1715102390.508,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'c\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":959,"ts":1715102390.692,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":960,"ts":1715102390.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/st\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":961,"ts":1715102391.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/st\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/str\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":962,"ts":1715102391.183,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/str\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/stri\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":963,"ts":1715102391.217,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/stri\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":964,"ts":1715102391.27,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string'\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":965,"ts":1715102391.495,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string'\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string',\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":966,"ts":1715102391.59,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string',\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":967,"ts":1715102391.671,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":968,"ts":1715102391.753,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":969,"ts":1715102391.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: no\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":970,"ts":1715102392.941,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: no\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: nod\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":971,"ts":1715102392.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: nod\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":972,"ts":1715102393.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":973,"ts":1715102393.101,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.ra\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":974,"ts":1715102393.261,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.ra\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":975,"ts":1715102393.357,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":976,"ts":1715102393.575,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":977,"ts":1715102393.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":978,"ts":1715102394.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":979,"ts":1715102394.942,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":980,"ts":1715102395.62,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":981,"ts":1715102395.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2:\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":982,"ts":1715102395.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2:\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: \n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":983,"ts":1715102396.032,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: \n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: no\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":984,"ts":1715102396.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: no\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: nod\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":985,"ts":1715102396.189,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: nod\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":986,"ts":1715102396.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":987,"ts":1715102396.33,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.l\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":988,"ts":1715102396.541,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.l\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.loc\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":989,"ts":1715102396.698,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns-top","idx":3},{"type":"rich-text","idx":2,"sel":null}]}],"prev":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.loc\n  }\n}","loc":2}},"meta":{},"metaPrev":{},"map":{"2":{"type":"raw-code","lang":"javascript","raw":"const fromNode = node => {\n  switch (node.type) {\n    case 'comment':\n    case 'comment-node':\n    case 'rich-text':\n      return\n    case 'identifier':\n      return {type: 'cst/id', 0: node.text, 1: node.loc}\n    case 'spread':\n      const inner = fromNode(node.contents)\n      return inner\n      ? {type: 'cst/spread', 0: inner, 1: node.loc}\n      : {type: 'cst/empty-spread', 0: node.loc}\n    case 'array':\n    case 'record':\n    case 'list':\n      return {type: 'cst/' + node.type, 0: list(node.values.map(fromNode).filter(Boolean)), 1: node.loc}\n    case 'string':\n      return {type: 'cst/string', 0: node.first.text, 1: list(\n        node.templates.map(item => pair(\n          fromNode(item.expr) ?? {type: 'cst/string', 0: '', 1: nil},\n          pair(item.suffix.text, item.suffix.loc)\n        ))\n      ), 2: node.loc}\n    case 'raw-code':\n      return {type: 'cst/string', 0: node.raw, 1: nil, 2: node.loc}\n  }\n}","loc":2}},"nsMap":{},"nsPrev":{},"id":990,"ts":1715102396.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our languages that don't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our languags that don't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":991,"ts":1715102486.284,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our languags that don't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our languag that don't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":992,"ts":1715102487.057,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our languag that don't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that don't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":993,"ts":1715102487.148,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that don't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that d have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":994,"ts":1715102488.279,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that d have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that do have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":995,"ts":1715102488.334,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that do have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doe have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":996,"ts":1715102488.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doe have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that does have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":997,"ts":1715102488.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that does have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doesn have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":998,"ts":1715102488.582,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doesn have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doesn' have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":999,"ts":1715102488.746,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doesn' have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1000,"ts":1715102488.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into s-expr-y values to work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1001,"ts":1715102494.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1002,"ts":1715102496.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to t work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1003,"ts":1715102496.727,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to t work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to th work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1004,"ts":1715102496.758,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to th work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to tha work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1005,"ts":1715102496.89,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to tha work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1006,"ts":1715102496.946,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1007,"ts":1715102497.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that a work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1008,"ts":1715102497.162,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that a work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that ar work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1009,"ts":1715102497.246,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that ar work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1010,"ts":1715102497.297,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1011,"ts":1715102497.422,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are c work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1012,"ts":1715102499.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are c work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are co work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1013,"ts":1715102499.095,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are co work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are com work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1014,"ts":1715102499.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are com work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are comp work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1015,"ts":1715102499.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are comp work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compa work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1016,"ts":1715102499.289,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compa work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compat work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1017,"ts":1715102499.376,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compat work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compati work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1018,"ts":1715102499.496,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compati work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatib work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1019,"ts":1715102499.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatib work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatibl work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1020,"ts":1715102499.666,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatibl work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1021,"ts":1715102499.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1022,"ts":1715102499.835,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible w work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1023,"ts":1715102499.921,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible w work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible wi work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1024,"ts":1715102499.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible wi work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible wit work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1025,"ts":1715102500.045,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible wit work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1026,"ts":1715102500.094,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1027,"ts":1715102500.204,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with o work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1028,"ts":1715102500.275,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with o work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with ou work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1029,"ts":1715102500.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with ou work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1030,"ts":1715102500.398,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1031,"ts":1715102500.483,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our r work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1032,"ts":1715102501.596,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our r work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our ru work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1033,"ts":1715102501.647,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our ru work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our run work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1034,"ts":1715102501.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our run work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runt work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1035,"ts":1715102501.753,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runt work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runti work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1036,"ts":1715102501.851,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runti work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtim work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1037,"ts":1715102501.9,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtim work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1038,"ts":1715102501.951,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1039,"ts":1715102502.034,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime e work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1040,"ts":1715102502.193,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime e work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime en work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1041,"ts":1715102502.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime en work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime enc work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1042,"ts":1715102502.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime enc work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime enco work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1043,"ts":1715102502.938,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime enco work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encod work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1044,"ts":1715102503.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encod work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encodi work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1045,"ts":1715102503.137,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encodi work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encodin work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1046,"ts":1715102503.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encodin work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1047,"ts":1715102503.253,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1048,"ts":1715102503.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding,  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1049,"ts":1715102503.607,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding,  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, w work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1050,"ts":1715102503.971,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, w work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, wh work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1051,"ts":1715102504.06,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, wh work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, whe work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1052,"ts":1715102504.155,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, whe work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, wher work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1053,"ts":1715102504.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, wher work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1054,"ts":1715102504.336,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1055,"ts":1715102504.425,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where o work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1056,"ts":1715102505.526,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where o work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where ob work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1057,"ts":1715102505.599,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where ob work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where obj work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1058,"ts":1715102505.694,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where obj work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where obje work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1059,"ts":1715102505.774,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where obje work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where objec work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1060,"ts":1715102505.796,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where objec work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1061,"ts":1715102505.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object' work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1062,"ts":1715102507.133,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object' work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1063,"ts":1715102507.216,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1064,"ts":1715102507.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's a work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1065,"ts":1715102507.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's a work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1066,"ts":1715102508.244,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1067,"ts":1715102508.359,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object's work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object' work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1068,"ts":1715102508.513,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object' work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1069,"ts":1715102508.668,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where object work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where d work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1070,"ts":1715102511.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where d work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where da work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1071,"ts":1715102511.2,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where da work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where dat work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1072,"ts":1715102511.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where dat work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where dat  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1073,"ts":1715102511.516,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where dat  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where dat work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1074,"ts":1715102511.854,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where dat work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1075,"ts":1715102511.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1076,"ts":1715102512.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data o work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1077,"ts":1715102512.136,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data o work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data ob work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1078,"ts":1715102512.223,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data ob work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data obj work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1079,"ts":1715102512.339,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data obj work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data obje work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1080,"ts":1715102512.382,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data obje work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data objec work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1081,"ts":1715102512.467,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data objec work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1082,"ts":1715102512.58,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1083,"ts":1715102514.239,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object a work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1084,"ts":1715102514.345,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object a work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object at work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1085,"ts":1715102514.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object at work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object att work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1086,"ts":1715102514.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object att work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attr work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1087,"ts":1715102514.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attr work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attri work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1088,"ts":1715102515.146,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attri work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attrib work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1089,"ts":1715102515.212,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attrib work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attribu work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1090,"ts":1715102515.315,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attribu work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attribut work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1091,"ts":1715102515.368,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attribut work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attribute work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1092,"ts":1715102515.448,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attribute work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1093,"ts":1715102515.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1094,"ts":1715102515.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes h work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1095,"ts":1715102515.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes h work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes ha work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1096,"ts":1715102515.868,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes ha work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes hav work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1097,"ts":1715102516.02,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes hav work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1098,"ts":1715102516.542,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1099,"ts":1715102516.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have i work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1100,"ts":1715102516.685,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have i work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have in work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1101,"ts":1715102516.735,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have in work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have ind work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1102,"ts":1715102517.045,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have ind work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indi work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1103,"ts":1715102517.116,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indi work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indic work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1104,"ts":1715102517.212,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indic work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indice work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1105,"ts":1715102517.272,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indice work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1106,"ts":1715102517.328,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1107,"ts":1715102517.44,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices,  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1108,"ts":1715102517.535,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices,  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, n work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1109,"ts":1715102517.643,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, n work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, no work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1110,"ts":1715102517.697,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, no work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1111,"ts":1715102517.735,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1112,"ts":1715102517.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not  work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not l work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1113,"ts":1715102518.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not l work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not la work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1114,"ts":1715102518.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not la work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not lab work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1115,"ts":1715102518.621,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not lab work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labe work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1116,"ts":1715102518.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labe work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not label work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1117,"ts":1715102518.764,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not label work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labels work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1118,"ts":1715102518.871,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labels work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labels. work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1119,"ts":1715102519.053,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":1,"idx":0},{"type":"ns-top","idx":1},{"type":"rich-text","idx":0,"sel":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc"}]}],"prev":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labels. work with our language that doesn't have records.","styles":{}}],"children":[]}],"loc":0}},"meta":{},"metaPrev":{},"map":{"0":{"type":"rich-text","contents":[{"id":"8a844ec9-a82f-4484-8b6b-2dc06380bfcc","type":"heading","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left","level":1},"content":[{"type":"text","text":"JCST","styles":{}}],"children":[]},{"id":"201138c3-9a8b-4a5c-9961-6e154b36ecbb","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Converting the concrete syntax tree into values to that are compatible with our runtime encoding, where data object attributes have indices, not labels.","styles":{}}],"children":[]}],"loc":0}},"nsMap":{},"nsPrev":{},"id":1120,"ts":1715102519.682,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38,44],"collapsed":true}},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38,44],"collapsed":false}},"id":1121,"ts":1715102526.663,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38,44],"collapsed":false}},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38,44],"collapsed":true}},"id":1122,"ts":1715102573.121,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"idx":45,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"idx":45,"type":"end"}]}],"prev":{"45":{"type":"raw-code","lang":"javascript","raw":"const makePairs = array => {\n  const res = [];\n  for (let i=0; i<array.length; i+=2) {\n    res.push([array[i], array[i + 1]]);\n  }\n  return res\n}","loc":45}},"meta":{},"metaPrev":{},"map":{"45":{"type":"blank","loc":45}},"nsMap":{"44":{"type":"normal","id":44,"top":45,"children":[]}},"nsPrev":{"44":{"type":"normal","id":44,"top":45,"children":[]}},"id":1123,"ts":1715102582.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"idx":39,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":44,"idx":20},{"type":"ns-top","idx":44},{"idx":45,"type":"start"}]}],"prev":{"45":{"type":"blank","loc":45}},"meta":{},"metaPrev":{},"map":{"45":null},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38],"collapsed":false},"44":null},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38,44],"collapsed":false},"44":{"type":"normal","id":44,"top":45,"children":[]}},"id":1124,"ts":1715102582.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"type":"rich-text","idx":29,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"raw-code","lang":"javascript","raw":"","loc":29}},"nsMap":{},"nsPrev":{},"id":1125,"ts":1715102589.932,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n} ","loc":23}},"nsMap":{},"nsPrev":{},"id":1126,"ts":1715102590.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n} ","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n} const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":1127,"ts":1715102590.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n} const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":1128,"ts":1715102592.538,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}const unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}\nconst unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":23}},"nsMap":{},"nsPrev":{},"id":1129,"ts":1715102592.71,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"end"}]}],"prev":{"29":{"type":"raw-code","lang":"javascript","raw":"","loc":29}},"meta":{},"metaPrev":{},"map":{"29":{"type":"blank","loc":29}},"nsMap":{"28":{"type":"normal","id":28,"top":29,"children":[],"collapsed":false}},"nsPrev":{"28":{"type":"normal","id":28,"top":29,"children":[],"collapsed":false}},"id":1130,"ts":1715102593.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":28,"idx":20},{"type":"ns-top","idx":28},{"idx":29,"type":"start"}]}],"prev":{"29":{"type":"blank","loc":29}},"meta":{},"metaPrev":{},"map":{"29":null},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22,38],"collapsed":false},"28":null},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,28,38],"collapsed":false},"28":{"type":"normal","id":28,"top":29,"children":[],"collapsed":false}},"id":1131,"ts":1715102594.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"type":"rich-text","idx":39,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"idx":39,"type":"start"}]}],"prev":{"39":{"type":"raw-code","lang":"javascript","raw":"const pair = (a, b) => ({type: ',', 0: a, 1: b})","loc":39}},"meta":{},"metaPrev":{},"map":{"39":{"type":"raw-code","lang":"javascript","raw":"","loc":39}},"nsMap":{},"nsPrev":{},"id":1132,"ts":1715102599.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}\nconst unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}\nconst unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}\n\n","loc":23}},"nsMap":{},"nsPrev":{},"id":1133,"ts":1715102600.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"type":"rich-text","idx":23,"sel":null}]}],"prev":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}\nconst unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}\n\n","loc":23}},"meta":{},"metaPrev":{},"map":{"23":{"type":"raw-code","lang":"javascript","raw":"const cons = (a, b) => ({type: 'cons', 0: a, 1: b})\nconst nil = {type: 'nil'}\nconst list = (values) => {\n  let v = nil\n  for (let i=values.length-1;i>=0;i--) {\n    v = cons(values[i], v)\n  }\n  return v\n}\nconst unwrapList = value => {\n  const res = [];\n  for (; value.type === 'cons'; value = value[1]) {\n    res.push(value[0]);\n  }\n  return res;\n}\nconst pair = (a, b) => ({type: ',', 0: a, 1: b})\n","loc":23}},"nsMap":{},"nsPrev":{},"id":1134,"ts":1715102600.197,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"idx":39,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"idx":39,"type":"end"}]}],"prev":{"39":{"type":"raw-code","lang":"javascript","raw":"","loc":39}},"meta":{},"metaPrev":{},"map":{"39":{"type":"blank","loc":39}},"nsMap":{"38":{"type":"normal","id":38,"top":39,"children":[]}},"nsPrev":{"38":{"type":"normal","id":38,"top":39,"children":[]}},"id":1135,"ts":1715102601.4,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":22,"idx":20},{"type":"ns-top","idx":22},{"idx":23,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns","child":38,"idx":20},{"type":"ns-top","idx":38},{"idx":39,"type":"start"}]}],"prev":{"39":{"type":"blank","loc":39}},"meta":{},"metaPrev":{},"map":{"39":null},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22],"collapsed":false},"38":null},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22,38],"collapsed":false},"38":{"type":"normal","id":38,"top":39,"children":[]}},"id":1136,"ts":1715102601.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"20":{"type":"normal","id":20,"top":21,"children":[22],"collapsed":true}},"nsPrev":{"20":{"type":"normal","id":20,"top":21,"children":[22],"collapsed":false}},"id":1137,"ts":1715102609.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":157,"idx":0},{"type":"ns-top","idx":157},{"idx":156,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":20,"idx":0},{"type":"ns-top","idx":20},{"idx":21,"type":"end"}]}],"prev":{"156":null},"meta":{},"metaPrev":{},"map":{"156":{"type":"blank","loc":156}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,157,3,98,36,100],"type":"normal"},"157":{"type":"normal","top":156,"children":[],"id":157}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,3,98,36,100],"type":"normal"},"157":null},"id":1138,"ts":1715102652.86,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":157,"idx":0},{"idx":157,"type":"ns-top"},{"type":"start","idx":156}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":157,"idx":0},{"type":"ns-top","idx":157},{"idx":156,"type":"start"}]}],"prev":{"156":{"type":"blank","loc":156},"159":null,"160":null,"161":null,"162":null,"163":null,"164":null,"165":null,"166":null,"167":null,"168":null,"169":null,"170":null,"171":null,"172":null,"173":null,"174":null,"175":null,"176":null,"177":null,"178":null,"179":null,"180":null,"181":null,"182":null,"183":null,"184":null,"185":null,"186":null,"187":null,"188":null,"189":null,"190":null,"191":null},"meta":{},"metaPrev":{},"map":{"156":{"loc":156,"type":"list","values":[159,160,161,167,173,177,181]},"159":{"loc":159,"type":"identifier","text":"deftype"},"160":{"loc":160,"type":"identifier","text":"cst"},"161":{"loc":161,"type":"list","values":[162,163,166]},"162":{"loc":162,"type":"identifier","text":"cst/list"},"163":{"loc":163,"type":"list","values":[164,165]},"164":{"loc":164,"type":"identifier","text":"list"},"165":{"loc":165,"type":"identifier","text":"cst"},"166":{"loc":166,"type":"identifier","text":"int"},"167":{"loc":167,"type":"list","values":[168,169,172]},"168":{"loc":168,"type":"identifier","text":"cst/array"},"169":{"loc":169,"type":"list","values":[170,171]},"170":{"loc":170,"type":"identifier","text":"list"},"171":{"loc":171,"type":"identifier","text":"cst"},"172":{"loc":172,"type":"identifier","text":"int"},"173":{"loc":173,"type":"list","values":[174,175,176]},"174":{"loc":174,"type":"identifier","text":"cst/spread"},"175":{"loc":175,"type":"identifier","text":"cst"},"176":{"loc":176,"type":"identifier","text":"int"},"177":{"loc":177,"type":"list","values":[178,179,180]},"178":{"loc":178,"type":"identifier","text":"cst/id"},"179":{"loc":179,"type":"identifier","text":"string"},"180":{"loc":180,"type":"identifier","text":"int"},"181":{"loc":181,"type":"list","values":[182,183,184,191]},"182":{"loc":182,"type":"identifier","text":"cst/string"},"183":{"loc":183,"type":"identifier","text":"string"},"184":{"loc":184,"type":"list","values":[185,186]},"185":{"loc":185,"type":"identifier","text":"list"},"186":{"loc":186,"type":"list","values":[187,188,189,190]},"187":{"loc":187,"type":"identifier","text":","},"188":{"loc":188,"type":"identifier","text":"cst"},"189":{"loc":189,"type":"identifier","text":"string"},"190":{"loc":190,"type":"identifier","text":"int"},"191":{"loc":191,"type":"identifier","text":"int"}},"nsMap":{},"nsPrev":{},"id":1139,"ts":1715102653.607,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":157},{"type":"start","idx":156}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":157,"idx":0},{"idx":157,"type":"ns-top"},{"type":"start","idx":156}]}],"prev":{"192":null},"meta":{},"metaPrev":{},"map":{"192":{"type":"blank","loc":192}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,193,157,3,98,36,100],"type":"normal"},"193":{"type":"normal","top":192,"id":193,"children":[]}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,157,3,98,36,100],"type":"normal"},"193":null},"id":1140,"ts":1715102654.846,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"idx":192,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"idx":192,"type":"subtext","at":0}]}],"prev":{"192":{"type":"blank","loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"identifier","text":"'","loc":192}},"nsMap":{},"nsPrev":{},"id":1141,"ts":1715102656.406,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"idx":192,"type":"rich-text","sel":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"idx":192,"type":"subtext","at":1}]}],"prev":{"192":{"type":"identifier","text":"'","loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":null,"loc":192}},"nsMap":{},"nsPrev":{},"id":1142,"ts":1715102656.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":null,"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"H","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1143,"ts":1715102657.38,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"H","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"He","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1144,"ts":1715102657.522,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"He","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Her","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1145,"ts":1715102657.562,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Her","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1146,"ts":1715102657.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here'","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1147,"ts":1715102657.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here'","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1148,"ts":1715102657.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1149,"ts":1715102657.97,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's t","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1150,"ts":1715102658.077,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's t","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's th","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1151,"ts":1715102658.192,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's th","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1152,"ts":1715102658.228,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1153,"ts":1715102658.321,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the t","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1154,"ts":1715102661.278,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the t","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the ty","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1155,"ts":1715102661.397,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the ty","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the typ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1156,"ts":1715102661.46,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the typ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1157,"ts":1715102661.491,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1158,"ts":1715102661.607,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type w","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1159,"ts":1715102661.776,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type w","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1160,"ts":1715102661.813,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we'","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1161,"ts":1715102661.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we'","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we'r","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1162,"ts":1715102662.059,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we'r","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1163,"ts":1715102662.108,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1164,"ts":1715102662.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're t","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1165,"ts":1715102662.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're t","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're ta","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1166,"ts":1715102662.81,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're ta","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're tar","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1167,"ts":1715102662.963,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're tar","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1168,"ts":1715102662.991,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targe","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1169,"ts":1715102663.039,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targe","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're target","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1170,"ts":1715102663.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're target","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetr","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1171,"ts":1715102663.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetr","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're target","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1172,"ts":1715102663.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're target","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targett","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1173,"ts":1715102663.96,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targett","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetti","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1174,"ts":1715102664.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetti","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targettin","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1175,"ts":1715102664.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targettin","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetting","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1176,"ts":1715102664.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetting","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetting:","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1177,"ts":1715102665.47,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","idx":193},{"type":"ns-top","idx":157},{"type":"start","idx":156}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":157,"idx":0},{"type":"ns-top","idx":157},{"idx":156,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,36,100],"type":"normal"},"193":{"type":"normal","top":192,"id":193,"children":[157]}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,193,157,3,98,36,100],"type":"normal"},"193":{"type":"normal","top":192,"id":193,"children":[]}},"id":1178,"ts":1715102668.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're targetting:","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're g","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1179,"ts":1715102672.896,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're g","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're go","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1180,"ts":1715102672.917,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're go","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're goi","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1181,"ts":1715102672.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're goi","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're goin","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1182,"ts":1715102673.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're goin","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1183,"ts":1715102673.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1184,"ts":1715102673.328,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going t","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1185,"ts":1715102673.38,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going t","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1186,"ts":1715102673.445,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1187,"ts":1715102673.517,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to b","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1188,"ts":1715102673.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to b","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1189,"ts":1715102673.668,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1190,"ts":1715102673.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be p","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1191,"ts":1715102673.855,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be p","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be pr","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1192,"ts":1715102673.972,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be pr","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be pro","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1193,"ts":1715102674.049,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be pro","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be prod","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1194,"ts":1715102674.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be prod","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be produ","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1195,"ts":1715102674.264,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be produ","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be produc","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1196,"ts":1715102674.393,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be produc","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be produci","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1197,"ts":1715102674.453,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be produci","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be producin","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1198,"ts":1715102674.501,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be producin","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be producing","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1199,"ts":1715102674.574,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":193},{"type":"rich-text","idx":192,"sel":"b1d3af82-6a87-4fad-a858-1529555d8622"}]}],"prev":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be producing","styles":{}}],"children":[]}],"loc":192}},"meta":{},"metaPrev":{},"map":{"192":{"type":"rich-text","contents":[{"id":"b1d3af82-6a87-4fad-a858-1529555d8622","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Here's the type we're going to be producing:","styles":{}}],"children":[]}],"loc":192}},"nsMap":{},"nsPrev":{},"id":1200,"ts":1715102674.787,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"idx":194,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"194":null},"meta":{},"metaPrev":{},"map":{"194":{"type":"blank","loc":194}},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,36,195,100],"type":"normal"},"195":{"type":"normal","top":194,"children":[],"id":195}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,36,100],"type":"normal"},"195":null},"id":1201,"ts":1715102706.772,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"idx":194,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"idx":194,"type":"start"}]}],"prev":{"194":{"type":"blank","loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"identifier","text":"'","loc":194}},"nsMap":{},"nsPrev":{},"id":1202,"ts":1715102707.346,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"idx":194,"type":"rich-text","sel":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"idx":194,"type":"subtext","at":1}]}],"prev":{"194":{"type":"identifier","text":"'","loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":null,"loc":194}},"nsMap":{},"nsPrev":{},"id":1203,"ts":1715102707.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":null,"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"T","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1204,"ts":1715102708.35,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"T","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Th","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1205,"ts":1715102708.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Th","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Thi","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1206,"ts":1715102708.468,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Thi","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1207,"ts":1715102708.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1208,"ts":1715102708.642,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This i","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1209,"ts":1715102708.731,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This i","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1210,"ts":1715102708.816,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1211,"ts":1715102708.884,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is h","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1212,"ts":1715102709.018,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is h","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is ho","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1213,"ts":1715102709.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is ho","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1214,"ts":1715102709.085,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1215,"ts":1715102709.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how w","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1216,"ts":1715102709.326,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how w","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1217,"ts":1715102709.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1218,"ts":1715102709.46,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we r","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1219,"ts":1715102709.896,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we r","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we re","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1220,"ts":1715102709.92,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we re","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we reg","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1221,"ts":1715102710.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we reg","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we regi","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1222,"ts":1715102710.283,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we regi","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we regis","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1223,"ts":1715102710.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we regis","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we regist","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1224,"ts":1715102710.437,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we regist","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we registe","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1225,"ts":1715102710.597,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we registe","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1226,"ts":1715102710.656,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1227,"ts":1715102710.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register w","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1228,"ts":1715102710.852,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register w","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register wi","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1229,"ts":1715102710.879,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register wi","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register wit","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1230,"ts":1715102710.978,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register wit","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1231,"ts":1715102711.018,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1232,"ts":1715102711.102,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with t","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1233,"ts":1715102711.191,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with t","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with th","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1234,"ts":1715102711.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with th","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1235,"ts":1715102711.32,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1236,"ts":1715102711.434,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the s","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1237,"ts":1715102711.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the s","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the st","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1238,"ts":1715102711.613,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the st","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the str","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1239,"ts":1715102711.645,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the str","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the stru","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1240,"ts":1715102711.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the stru","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the struc","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1241,"ts":1715102711.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the struc","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the struct","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1242,"ts":1715102711.977,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the struct","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structu","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1243,"ts":1715102712.092,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structu","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structur","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1244,"ts":1715102712.146,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structur","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structure","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1245,"ts":1715102712.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structure","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1246,"ts":1715102712.345,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1247,"ts":1715102712.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured e","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1248,"ts":1715102712.52,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured e","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ei","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1249,"ts":1715102712.653,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ei","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eid","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1250,"ts":1715102712.672,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eid","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eido","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1251,"ts":1715102712.944,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eido","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eidot","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1252,"ts":1715102713.041,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eidot","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eido","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1253,"ts":1715102713.252,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eido","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eid","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1254,"ts":1715102713.39,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured eid","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ei","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1255,"ts":1715102713.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ei","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured e","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1256,"ts":1715102713.743,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured e","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ed","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1257,"ts":1715102713.897,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured ed","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured edi","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1258,"ts":1715102713.966,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured edi","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured edit","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1259,"ts":1715102714.058,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured edit","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured edito","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1260,"ts":1715102714.142,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured edito","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1261,"ts":1715102714.215,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1262,"ts":1715102714.354,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor t","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1263,"ts":1715102714.859,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor t","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor th","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1264,"ts":1715102714.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor th","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor tha","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1265,"ts":1715102714.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor tha","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1266,"ts":1715102715.05,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1267,"ts":1715102715.156,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that t","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1268,"ts":1715102715.799,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that t","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that th","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1269,"ts":1715102715.86,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that th","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1270,"ts":1715102715.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1271,"ts":1715102715.999,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the C","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1272,"ts":1715102716.696,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the C","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CS","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1273,"ts":1715102716.815,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CS","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1274,"ts":1715102716.986,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1275,"ts":1715102717.039,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST N","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1276,"ts":1715102717.181,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST N","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST No","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1277,"ts":1715102717.416,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST No","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST N","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1278,"ts":1715102717.706,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST N","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1279,"ts":1715102717.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST n","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1280,"ts":1715102717.997,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST n","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST no","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1281,"ts":1715102718.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST no","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nod","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1282,"ts":1715102718.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nod","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST node","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1283,"ts":1715102718.18,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST node","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1284,"ts":1715102718.224,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1285,"ts":1715102718.373,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes s","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1286,"ts":1715102718.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes s","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes sh","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1287,"ts":1715102718.53,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes sh","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes sho","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1288,"ts":1715102718.611,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes sho","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes shou","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1289,"ts":1715102718.677,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes shou","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes shoul","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1290,"ts":1715102718.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes shoul","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1291,"ts":1715102718.819,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1292,"ts":1715102718.929,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should g","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1293,"ts":1715102722.44,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should g","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should go","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1294,"ts":1715102722.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should go","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should go ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1295,"ts":1715102722.695,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should go ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should go","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1296,"ts":1715102723.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should go","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should g","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1297,"ts":1715102723.29,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should g","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1298,"ts":1715102723.393,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should b","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1299,"ts":1715102723.588,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should b","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1300,"ts":1715102723.649,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1301,"ts":1715102723.726,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be c","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1302,"ts":1715102723.978,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be c","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be co","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1303,"ts":1715102724.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be co","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be con","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1304,"ts":1715102724.105,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be con","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conv","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1305,"ts":1715102724.152,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conv","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conve","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1306,"ts":1715102724.218,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conve","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conver","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1307,"ts":1715102724.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conver","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be convere","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1308,"ts":1715102724.577,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be convere","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conver","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1309,"ts":1715102724.942,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be conver","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be convert","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1310,"ts":1715102724.987,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be convert","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converte","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1311,"ts":1715102725.037,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converte","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1312,"ts":1715102725.141,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1313,"ts":1715102725.278,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted b","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1314,"ts":1715102725.351,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted b","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted be","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1315,"ts":1715102725.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted be","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted bef","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1316,"ts":1715102725.573,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted bef","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted befo","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1317,"ts":1715102725.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted befo","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted befor","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1318,"ts":1715102725.735,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted befor","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1319,"ts":1715102725.991,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1320,"ts":1715102726.156,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before g","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1321,"ts":1715102726.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before g","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before ge","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1322,"ts":1715102726.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before ge","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before get","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1323,"ts":1715102727.119,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before get","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before gett","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1324,"ts":1715102727.416,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before gett","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getti","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1325,"ts":1715102727.534,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getti","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before gettin","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1326,"ts":1715102727.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before gettin","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1327,"ts":1715102727.635,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1328,"ts":1715102727.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting h","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1329,"ts":1715102727.791,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting h","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting ha","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1330,"ts":1715102727.864,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting ha","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting han","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1331,"ts":1715102727.952,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting han","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting hand","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1332,"ts":1715102728.021,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting hand","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting hande","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1333,"ts":1715102728.109,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting hande","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1334,"ts":1715102728.206,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1335,"ts":1715102728.361,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed o","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1336,"ts":1715102728.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed o","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed ov","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1337,"ts":1715102728.548,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed ov","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed ove","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1338,"ts":1715102728.591,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed ove","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1339,"ts":1715102728.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1340,"ts":1715102728.727,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over t","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1341,"ts":1715102728.786,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over t","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1342,"ts":1715102728.895,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1343,"ts":1715102728.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1344,"ts":1715102729.035,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot h","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1345,"ts":1715102729.096,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot h","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot he","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1346,"ts":1715102729.286,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot he","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot h","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1347,"ts":1715102729.466,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot h","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1348,"ts":1715102729.944,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1349,"ts":1715102730.067,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over tot","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1350,"ts":1715102730.198,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1351,"ts":1715102730.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to t","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1352,"ts":1715102730.367,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to t","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to th","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1353,"ts":1715102730.459,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to th","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1354,"ts":1715102730.555,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the ","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1355,"ts":1715102730.643,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the ","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the p","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1356,"ts":1715102730.698,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the p","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the pa","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1357,"ts":1715102730.756,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the pa","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the par","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1358,"ts":1715102730.885,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the par","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the pars","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1359,"ts":1715102730.965,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the pars","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the parse","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1360,"ts":1715102731.049,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the parse","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the parser","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1361,"ts":1715102731.072,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns-top","idx":195},{"type":"rich-text","idx":194,"sel":"6d121157-81c6-4763-8b5c-40ff517da11c"}]}],"prev":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the parser","styles":{}}],"children":[]}],"loc":194}},"meta":{},"metaPrev":{},"map":{"194":{"type":"rich-text","contents":[{"id":"6d121157-81c6-4763-8b5c-40ff517da11c","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"This is how we register with the structured editor that the CST nodes should be converted before getting handed over to the parser.","styles":{}}],"children":[]}],"loc":194}},"nsMap":{},"nsPrev":{},"id":1362,"ts":1715102731.206,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":195,"idx":0},{"type":"ns","idx":195},{"type":"ns-top","idx":100},{"type":"start","idx":99}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":100,"idx":0},{"type":"ns-top","idx":100},{"idx":99,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,36,195],"type":"normal"},"195":{"type":"normal","top":194,"children":[100],"id":195}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,36,195,100],"type":"normal"},"195":{"type":"normal","top":194,"children":[],"id":195}},"id":1363,"ts":1715102736.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const valueToString = (v) => {\n    if (Array.isArray(v)) {\n        return `[${v.map(valueToString).join(', ')}]`;\n    }\n\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const valueToString = (v) => {\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1364,"ts":1715102752.24,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns-top","idx":36},{"type":"start","idx":37}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,193,3,36,98,195],"type":"normal"}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,36,195],"type":"normal"}},"id":1365,"ts":1715102771.065,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns-top","idx":36},{"type":"start","idx":37}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,36,193,3,98,195],"type":"normal"}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,193,3,36,98,195],"type":"normal"}},"id":1366,"ts":1715102774.282,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const valueToString = (v) => {\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cToString = (v) => {\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1367,"ts":1715102792.506,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cToString = (v) => {\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1368,"ts":1715102792.673,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1369,"ts":1715102802.933,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1370,"ts":1715102803.199,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1371,"ts":1715102804.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1372,"ts":1715102805.111,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1373,"ts":1715102805.403,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    s\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1374,"ts":1715102806.434,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    s\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    sw\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1375,"ts":1715102806.602,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    sw\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    swi\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1376,"ts":1715102806.661,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    swi\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    swit\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1377,"ts":1715102806.741,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    swit\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switc\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1378,"ts":1715102806.97,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switc\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1379,"ts":1715102807.054,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1380,"ts":1715102807.184,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1381,"ts":1715102807.276,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1382,"ts":1715102807.938,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1383,"ts":1715102808.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst)\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1384,"ts":1715102808.642,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst)\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1385,"ts":1715102808.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1386,"ts":1715102809.191,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.t\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1387,"ts":1715102809.325,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.t\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.typ\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1388,"ts":1715102809.435,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.typ\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1389,"ts":1715102809.503,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type)\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1390,"ts":1715102809.727,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type)\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1391,"ts":1715102809.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1392,"ts":1715102809.923,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1393,"ts":1715102810.278,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      ca\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1394,"ts":1715102843.503,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      ca\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      cas\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1395,"ts":1715102843.592,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      cas\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1396,"ts":1715102843.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case '\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1397,"ts":1715102843.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case '\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1398,"ts":1715102844.498,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1399,"ts":1715102844.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1400,"ts":1715102844.781,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/i\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1401,"ts":1715102844.955,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/i\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1402,"ts":1715102845.056,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id'\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1403,"ts":1715102845.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id'\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id':\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1404,"ts":1715102846.765,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id':\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1405,"ts":1715102846.846,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': re\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1406,"ts":1715102853.836,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': re\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': ret\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1407,"ts":1715102854.048,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': ret\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': retu\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1408,"ts":1715102854.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': retu\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1409,"ts":1715102854.229,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1410,"ts":1715102854.293,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1411,"ts":1715102854.501,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1412,"ts":1715102854.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst.\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1413,"ts":1715102854.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst.\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1414,"ts":1715102856.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1415,"ts":1715102856.192,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1416,"ts":1715102856.386,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1417,"ts":1715102856.51,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1418,"ts":1715102856.982,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      ca\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1419,"ts":1715102857.208,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      ca\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      cas\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1420,"ts":1715102857.275,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      cas\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1421,"ts":1715102857.484,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case '\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1422,"ts":1715102857.563,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case '\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1423,"ts":1715102858.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1424,"ts":1715102858.679,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1425,"ts":1715102858.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/li\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1426,"ts":1715102859.314,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/li\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/lis\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1427,"ts":1715102859.354,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/lis\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1428,"ts":1715102859.413,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list'\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1429,"ts":1715102859.96,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list'\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list':\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1430,"ts":1715102860.137,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list':\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1431,"ts":1715102860.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': re\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1432,"ts":1715102860.521,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': re\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': ret\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1433,"ts":1715102860.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': ret\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': retu\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1434,"ts":1715102860.766,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': retu\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1435,"ts":1715102860.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1436,"ts":1715102860.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1437,"ts":1715102861.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1438,"ts":1715102861.482,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1439,"ts":1715102862.321,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1440,"ts":1715102863.565,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1441,"ts":1715102863.722,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${cs\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1442,"ts":1715102864.392,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${cs\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1443,"ts":1715102864.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1444,"ts":1715102864.665,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${un\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1445,"ts":1715102864.925,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${un\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unw\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1446,"ts":1715102864.953,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unw\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwr\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1447,"ts":1715102865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwr\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwra\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1448,"ts":1715102865.123,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwra\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrap\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1449,"ts":1715102865.199,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrap\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapA\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1450,"ts":1715102865.363,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapA\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapAr\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1451,"ts":1715102865.53,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapAr\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArr\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1452,"ts":1715102865.666,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArr\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1453,"ts":1715102865.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray*\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1454,"ts":1715102866.079,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray*\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1455,"ts":1715102866.708,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1456,"ts":1715102866.894,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1457,"ts":1715102867.155,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1458,"ts":1715102867.271,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1459,"ts":1715102867.34,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1460,"ts":1715102867.579,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0])\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1461,"ts":1715102867.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0])\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1462,"ts":1715102868.113,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).m\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1463,"ts":1715102868.312,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).m\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1464,"ts":1715102868.858,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1465,"ts":1715102869.071,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1466,"ts":1715102869.984,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1467,"ts":1715102870.165,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstT\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1468,"ts":1715102870.407,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstT\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstTo\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1469,"ts":1715102870.552,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstTo\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToS\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1470,"ts":1715102870.703,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToS\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToStr\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1471,"ts":1715102870.906,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToStr\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToStrin\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1472,"ts":1715102871.026,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToStrin\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1473,"ts":1715102871.377,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString)\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1474,"ts":1715102871.6,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString)\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1475,"ts":1715102871.817,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),j\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1476,"ts":1715102872.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),j\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),joi\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1477,"ts":1715102872.168,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),joi\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),join\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1478,"ts":1715102872.343,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),join\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),joi\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1479,"ts":1715102872.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),joi\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),jo\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1480,"ts":1715102872.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),jo\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),j\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1481,"ts":1715102872.81,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),j\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1482,"ts":1715102872.949,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString),\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString)\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1483,"ts":1715102873.084,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString)\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1484,"ts":1715102873.379,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).j\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1485,"ts":1715102873.591,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).j\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).joi\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1486,"ts":1715102873.753,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).joi\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1487,"ts":1715102874.36,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1488,"ts":1715102874.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(,\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1489,"ts":1715102874.98,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(,\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1490,"ts":1715102875.211,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join('\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1491,"ts":1715102875.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join('\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(',\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1492,"ts":1715102875.566,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(',\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1493,"ts":1715102875.676,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', '\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1494,"ts":1715102876.447,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', '\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1495,"ts":1715102876.687,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')]\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1496,"ts":1715102877.671,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')]\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1497,"ts":1715102878.231,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1498,"ts":1715102878.421,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1499,"ts":1715102878.607,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1500,"ts":1715102879.087,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1501,"ts":1715102884.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1502,"ts":1715102884.327,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/a': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1503,"ts":1715102886.11,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/a': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/ar': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1504,"ts":1715102886.256,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/ar': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/arr': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1505,"ts":1715102886.395,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/arr': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1506,"ts":1715102886.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/re': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1507,"ts":1715102887.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/re': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/rec': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1508,"ts":1715102887.847,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/rec': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/reco': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1509,"ts":1715102888.035,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/reco': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/recor': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1510,"ts":1715102888.099,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/recor': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1511,"ts":1715102888.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `9${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1512,"ts":1715102890.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `9${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1513,"ts":1715102890.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1514,"ts":1715102890.958,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1515,"ts":1715102893.145,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')}`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1516,"ts":1715102895.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')}`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1517,"ts":1715102895.319,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1518,"ts":1715102896.891,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1519,"ts":1715102897.809,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      ca\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1520,"ts":1715102898.186,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      ca\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      cas\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1521,"ts":1715102898.262,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      cas\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1522,"ts":1715102898.476,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1523,"ts":1715102898.563,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case '\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1524,"ts":1715102898.657,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case '\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1525,"ts":1715102898.987,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1526,"ts":1715102899.174,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1527,"ts":1715102899.335,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/st\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1528,"ts":1715102899.519,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/st\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/s\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1529,"ts":1715102899.876,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/s\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/sp\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1530,"ts":1715102900.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/sp\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spre\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1531,"ts":1715102900.939,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spre\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/sprea\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1532,"ts":1715102901.043,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/sprea\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1533,"ts":1715102901.087,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread'\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1534,"ts":1715102901.361,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread'\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread':\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1535,"ts":1715102901.558,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread':\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1536,"ts":1715102901.6,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': re\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1537,"ts":1715102901.784,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': re\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': retu\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1538,"ts":1715102901.961,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': retu\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1539,"ts":1715102902.103,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1540,"ts":1715102902.231,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return '\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1541,"ts":1715102902.348,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return '\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1542,"ts":1715102903.298,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1543,"ts":1715102903.485,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `.\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1544,"ts":1715102903.76,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `.\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1545,"ts":1715102903.935,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1546,"ts":1715102904.138,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1547,"ts":1715102905.38,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1548,"ts":1715102905.498,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstT\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1549,"ts":1715102905.729,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstT\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstTo\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1550,"ts":1715102905.863,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstTo\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToS\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1551,"ts":1715102905.959,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToS\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToStr\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1552,"ts":1715102906.175,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToStr\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToStri\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1553,"ts":1715102906.231,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToStri\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1554,"ts":1715102906.3,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1555,"ts":1715102906.553,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1556,"ts":1715102906.979,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1557,"ts":1715102907.198,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cs\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1558,"ts":1715102907.441,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cs\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1559,"ts":1715102907.926,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1560,"ts":1715102908.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0]\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1561,"ts":1715102908.218,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0]\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1562,"ts":1715102908.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1563,"ts":1715102909.306,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1564,"ts":1715102909.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1565,"ts":1715102911.657,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1566,"ts":1715102912.32,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cas\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1567,"ts":1715102912.512,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cas\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cass\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1568,"ts":1715102912.646,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cass\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      casst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1569,"ts":1715102912.825,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      casst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cass\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1570,"ts":1715102913.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cass\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1571,"ts":1715102913.266,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1572,"ts":1715102913.358,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(', ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1573,"ts":1715102915.445,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(', ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1574,"ts":1715102916.388,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(', ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1575,"ts":1715102917.308,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast '\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1576,"ts":1715102919.371,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast '\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1577,"ts":1715102922.459,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1578,"ts":1715102922.645,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1579,"ts":1715102922.771,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/str\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1580,"ts":1715102922.924,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/str\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/stri\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1581,"ts":1715102923.021,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/stri\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/strin\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1582,"ts":1715102923.088,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/strin\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1583,"ts":1715102923.122,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string'\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1584,"ts":1715102923.357,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string'\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1585,"ts":1715102923.567,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1586,"ts":1715102923.633,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': re\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1587,"ts":1715102923.871,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': re\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': retu\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1588,"ts":1715102924.071,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': retu\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1589,"ts":1715102924.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1590,"ts":1715102924.282,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1591,"ts":1715102925.15,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1592,"ts":1715102925.614,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"$\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1593,"ts":1715102925.857,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"$\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1594,"ts":1715102925.942,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${c\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1595,"ts":1715102928.101,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${c\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1596,"ts":1715102928.241,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1597,"ts":1715102928.3,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1598,"ts":1715102928.53,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1599,"ts":1715102929.351,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}\"\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1600,"ts":1715102931.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}\"\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1601,"ts":1715102932.003,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1602,"ts":1715102932.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1603,"ts":1715102932.798,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${un}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1604,"ts":1715102934.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${un}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unw}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1605,"ts":1715102935.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unw}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwr}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1606,"ts":1715102935.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwr}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwra}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1607,"ts":1715102935.162,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwra}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrap}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1608,"ts":1715102935.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrap}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapA}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1609,"ts":1715102935.603,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapA}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapAr}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1610,"ts":1715102935.763,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapAr}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArra}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1611,"ts":1715102935.906,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArra}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1612,"ts":1715102936.002,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1613,"ts":1715102936.354,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(c}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1614,"ts":1715102938.099,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(c}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1615,"ts":1715102938.262,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1616,"ts":1715102938.525,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1617,"ts":1715102938.652,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1618,"ts":1715102938.764,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1])}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1619,"ts":1715102939.117,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1])}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1620,"ts":1715102939.585,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).m}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1621,"ts":1715102939.748,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).m}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1622,"ts":1715102939.835,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1623,"ts":1715102940.065,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1624,"ts":1715102943.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1625,"ts":1715102943.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t =}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1626,"ts":1715102943.24,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t =}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t =>}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1627,"ts":1715102943.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t =>}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t => }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1628,"ts":1715102943.877,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t => }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1629,"ts":1715102947.538,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(t}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1630,"ts":1715102947.86,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        \n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1631,"ts":1715102948.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        \n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1632,"ts":1715102948.701,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t \n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1633,"ts":1715102948.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t \n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t =\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1634,"ts":1715102948.905,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t =\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => \n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1635,"ts":1715102949.112,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => \n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1636,"ts":1715102949.376,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1637,"ts":1715102950.075,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${c\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1638,"ts":1715102951.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${c\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1639,"ts":1715102951.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst[\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1640,"ts":1715102952.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst[\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1641,"ts":1715102954.169,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cs\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1642,"ts":1715102954.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cs\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${c\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1643,"ts":1715102954.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${c\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1644,"ts":1715102954.531,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${t\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1645,"ts":1715102954.993,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${t\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${t[\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1646,"ts":1715102955.153,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${t[\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${t[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1647,"ts":1715102955.704,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${t[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${ct[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1648,"ts":1715102956.922,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${ct[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1649,"ts":1715102957.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cst[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstt[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1650,"ts":1715102957.296,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstt[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstTt[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1651,"ts":1715102957.784,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstTt[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstTot[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1652,"ts":1715102957.918,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstTot[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToSt[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1653,"ts":1715102958.007,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToSt[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToStrt[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1654,"ts":1715102958.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToStrt[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToStringt[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1655,"ts":1715102958.375,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToStringt[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1656,"ts":1715102958.67,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1657,"ts":1715102959.974,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1658,"ts":1715102960.787,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}{\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1659,"ts":1715102961.107,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}{\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1660,"ts":1715102961.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1661,"ts":1715102961.477,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${c\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1662,"ts":1715102963.657,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${c\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${cst\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1663,"ts":1715102963.821,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${cst\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${cs\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1664,"ts":1715102963.989,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${cs\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${c\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1665,"ts":1715102964.247,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${c\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1666,"ts":1715102964.383,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1667,"ts":1715102964.493,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1668,"ts":1715102964.598,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1669,"ts":1715102964.725,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1670,"ts":1715102964.829,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1671,"ts":1715102964.998,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1672,"ts":1715102965.226,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0])\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1673,"ts":1715102965.623,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0])\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1674,"ts":1715102966.113,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1675,"ts":1715102966.315,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1676,"ts":1715102966.82,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => valueToString(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => c(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1677,"ts":1715102971.985,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => c(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cst(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1678,"ts":1715102972.121,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cst(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstT(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1679,"ts":1715102972.388,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstT(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstTo(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1680,"ts":1715102972.5,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstTo(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToS(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1681,"ts":1715102972.608,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToS(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToStr(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1682,"ts":1715102972.836,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToStr(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToStri(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1683,"ts":1715102972.884,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToStri(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToStrin(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1684,"ts":1715102972.94,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":1},{"type":"rich-text","idx":51,"sel":null}]}],"prev":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToStrin(fromNode(v))","loc":51}},"meta":{},"metaPrev":{},"map":{"51":{"type":"raw-code","lang":"javascript","raw":"v => cstToString(fromNode(v))","loc":51}},"nsMap":{},"nsPrev":{},"id":1685,"ts":1715102972.996,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1686,"ts":1715102987.936,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      ))}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1687,"ts":1715102991.658,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      ))}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1688,"ts":1715102994.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      ))}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1689,"ts":1715103001.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      ))}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1690,"ts":1715103002.417,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string': return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1691,"ts":1715103005.25,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n      return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1692,"ts":1715103005.449,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n      return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1693,"ts":1715103005.586,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1694,"ts":1715103010.146,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1695,"ts":1715103010.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        /t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1696,"ts":1715103012.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        /t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        //t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1697,"ts":1715103013.146,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        //t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        1//t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1698,"ts":1715103014.193,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${unwrapArray(cst[1]).map(\n        1//t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        1//t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1699,"ts":1715103017.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        1//t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        1/t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1700,"ts":1715103019.581,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        1/t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        1t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1701,"ts":1715103019.718,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        1t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1702,"ts":1715103019.869,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(\n        t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1703,"ts":1715103022.189,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`\n      )}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)}\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1704,"ts":1715103026.306,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)}\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n          }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1705,"ts":1715103029.019,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n          }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1706,"ts":1715103029.588,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n        \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1707,"ts":1715103033.43,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n        \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n      \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1708,"ts":1715103033.673,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n      \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n      }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1709,"ts":1715103033.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n      }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n      \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1710,"ts":1715103034.305,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n      \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n     \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1711,"ts":1715103034.561,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n     \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    \n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1712,"ts":1715103034.885,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    \n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1713,"ts":1715103035.356,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]} ${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1714,"ts":1715103041.543,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]} ${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1715,"ts":1715103042.322,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])/.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1716,"ts":1715103044.603,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])/.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1717,"ts":1715103044.763,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1718,"ts":1715103047.501,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1719,"ts":1715103050.612,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1720,"ts":1715103050.888,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;*\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1721,"ts":1715103052.418,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;*\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;*/\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1722,"ts":1715103052.668,"libraryRoot":""},{"id":1723,"meta":{},"metaPrev":{},"revert":1722,"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;*/\n    }\n};\n","loc":37}},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;*\n    }\n};\n","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1715103056.122,"libraryRoot":""},{"id":1724,"meta":{},"metaPrev":{},"revert":1721,"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;*\n    }\n};\n","loc":37}},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1715103056.605,"libraryRoot":""},{"id":1725,"meta":{},"metaPrev":{},"revert":1720,"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /*cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1715103056.966,"libraryRoot":""},{"id":1726,"meta":{},"metaPrev":{},"revert":1719,"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      /cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1715103057.33,"libraryRoot":""},{"id":1727,"meta":{},"metaPrev":{},"revert":1718,"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`;\n    }\n};\n","loc":37}},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1715103058.834,"libraryRoot":""},{"id":1728,"meta":{},"metaPrev":{},"revert":1717,"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])//.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])/.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1715103059.171,"libraryRoot":""},{"id":1729,"meta":{},"metaPrev":{},"revert":1716,"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1])/.map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"nsMap":{},"nsPrev":{},"ts":1715103059.461,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cast 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cas 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1730,"ts":1715103061.053,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      cas 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1731,"ts":1715103061.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1732,"ts":1715103066.539,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\$${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1733,"ts":1715103066.732,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\$${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1734,"ts":1715103067.154,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1735,"ts":1715103069.08,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (vc) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1736,"ts":1715103076.51,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (vc) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1737,"ts":1715103076.75,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (v) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (c) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1738,"ts":1715103076.884,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (c) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1739,"ts":1715103077.069,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    /*if (typeof v === 'object' && v && 'type' in v) {\n        if (v.type === 'cons' || v.type === 'nil') {\n            const un = unwrapList(v);\n            return '[' + un.map(valueToString).join(' ') + ']';\n        }\n\n        let args = [];\n        for (let i = 0; i in v; i++) {\n            args.push(v[i]);\n        }\n        return `(${v.type}${args\n            .map((arg) => ' ' + valueToString(arg))\n            .join('')})`;\n    }\n    if (typeof v === 'string') {\n        if (v.includes('\"') && !v.includes(\"'\")) {\n            return (\n                \"'\" + JSON.stringify(v).slice(1, -1).replace(/\\\\\"/g, '\"') + \"'\"\n            );\n        }\n        return JSON.stringify(v);\n    }\n    if (typeof v === 'function') {\n        return '<function>';\n    }\n\n    return '' + v;*/\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1740,"ts":1715103080.728,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapArray(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapL(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1741,"ts":1715103086.844,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapL(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapLi(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1742,"ts":1715103087.027,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapLi(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1743,"ts":1715103087.114,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapArray(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapL(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1744,"ts":1715103089.475,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapL(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapLi(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1745,"ts":1715103089.618,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapLi(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1746,"ts":1715103089.71,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapArray(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapL(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1747,"ts":1715103091.177,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapL(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapLi(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1748,"ts":1715103091.309,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapLi(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1749,"ts":1715103091.409,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapArray(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapL(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1750,"ts":1715103094.533,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapL(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapLi(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1751,"ts":1715103094.689,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapLi(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1752,"ts":1715103094.814,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":154,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":154,"type":"end"}]}],"prev":{"56":{"type":"list","values":[57,53,154],"loc":56},"154":{"type":"raw-code","lang":"javascript","loc":154,"raw":"'(cst/id \"10\" 55)'"}},"meta":{},"metaPrev":{},"map":{"56":{"type":"list","values":[57,53,154],"loc":56},"154":{"type":"blank","loc":154}},"nsMap":{},"nsPrev":{},"id":1753,"ts":1715103110.657,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":196,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":154,"type":"subtext","at":0}]}],"prev":{"56":{"type":"list","values":[57,53,154],"loc":56},"196":null},"meta":{},"metaPrev":{},"map":{"56":{"type":"list","values":[57,53,196],"loc":56},"196":{"type":"raw-code","lang":"javascript","loc":196,"raw":"\"10\""}},"nsMap":{},"nsPrev":{},"id":1754,"ts":1715103111.943,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":155,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":155,"type":"end"}]}],"prev":{"61":{"type":"list","values":[62,63,155],"loc":61},"155":{"type":"raw-code","lang":"javascript","loc":155,"raw":"'(cst/array [(cst/id \"1\" 69) (cst/id \"2\" 71)] 68)'"}},"meta":{},"metaPrev":{},"map":{"61":{"type":"list","values":[62,63,155],"loc":61},"155":{"type":"blank","loc":155}},"nsMap":{},"nsPrev":{},"id":1755,"ts":1715103115.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":197,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":155,"type":"start"}]}],"prev":{"61":{"type":"list","values":[62,63,155],"loc":61},"197":null},"meta":{},"metaPrev":{},"map":{"61":{"type":"list","values":[62,63,197],"loc":61},"197":{"type":"raw-code","lang":"javascript","loc":197,"raw":"\"[1 2]\""}},"nsMap":{},"nsPrev":{},"id":1756,"ts":1715103116.035,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":151,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":151,"type":"end"}]}],"prev":{"74":{"type":"list","values":[75,76,151],"loc":74},"151":{"type":"raw-code","lang":"javascript","loc":151,"raw":"'(cst/string \"hi \" [(, (cst/id \"1\" 81) (, \" 12\" 82))] 79)'"}},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,151],"loc":74},"151":{"type":"blank","loc":151}},"nsMap":{},"nsPrev":{},"id":1757,"ts":1715103117.377,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":198,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":151,"type":"subtext","at":0}]}],"prev":{"74":{"type":"list","values":[75,76,151],"loc":74},"198":null},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,198],"loc":74},"198":{"type":"raw-code","lang":"javascript","loc":198,"raw":"'\"hi ${1} 12\"'"}},"nsMap":{},"nsPrev":{},"id":1758,"ts":1715103120.74,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":152,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":152,"type":"end"}]}],"prev":{"86":{"type":"list","values":[87,88,152],"loc":86},"152":{"type":"raw-code","lang":"javascript","loc":152,"raw":"'(cst/record [(cst/id \"hi\" 92) (cst/id \"10\" 93)] 88)'"}},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,152],"loc":86},"152":{"type":"blank","loc":152}},"nsMap":{},"nsPrev":{},"id":1759,"ts":1715103123.916,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":199,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":152,"type":"subtext","at":0}]}],"prev":{"86":{"type":"list","values":[87,88,152],"loc":86},"199":null},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,199],"loc":86},"199":{"type":"raw-code","lang":"javascript","loc":199,"raw":"\"{hi 10}\""}},"nsMap":{},"nsPrev":{},"id":1760,"ts":1715103125.213,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"const cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1761,"ts":1715103132.156,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"/\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1762,"ts":1715103132.911,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"/\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"//\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1763,"ts":1715103133.068,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"//\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1764,"ts":1715103133.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// T\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1765,"ts":1715103134.889,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// T\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// Thi\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1766,"ts":1715103135.053,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// Thi\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1767,"ts":1715103135.179,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This i\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1768,"ts":1715103135.26,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This i\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1769,"ts":1715103135.435,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1770,"ts":1715103135.515,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1771,"ts":1715103135.648,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1772,"ts":1715103135.73,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a li\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1773,"ts":1715103135.863,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a li\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a lit\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1774,"ts":1715103135.904,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a lit\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a litt\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1775,"ts":1715103136.052,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a litt\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a littl\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1776,"ts":1715103136.173,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a littl\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1777,"ts":1715103136.306,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little h\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1778,"ts":1715103136.483,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little h\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little he\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1779,"ts":1715103136.631,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little he\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little help\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1780,"ts":1715103136.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little help\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helpe\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1781,"ts":1715103136.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helpe\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1782,"ts":1715103136.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper t\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1783,"ts":1715103137.164,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper t\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1784,"ts":1715103137.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1785,"ts":1715103137.367,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to j\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1786,"ts":1715103137.457,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to j\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to ju\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1787,"ts":1715103137.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to ju\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to just\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1788,"ts":1715103137.686,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to just\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to just \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1789,"ts":1715103137.797,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to just \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1790,"ts":1715103148.275,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to m\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1791,"ts":1715103148.514,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to m\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to mak\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1792,"ts":1715103148.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to mak\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1793,"ts":1715103148.707,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1794,"ts":1715103148.843,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make o\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1795,"ts":1715103148.874,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make o\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make ou\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1796,"ts":1715103148.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make ou\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1797,"ts":1715103149.018,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1798,"ts":1715103149.087,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our te\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1799,"ts":1715103149.372,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our te\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our test\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1800,"ts":1715103149.478,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our test\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1801,"ts":1715103149.608,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1802,"ts":1715103149.778,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests e\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1803,"ts":1715103149.926,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests e\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests eas\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1804,"ts":1715103150.063,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests eas\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easie\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1805,"ts":1715103150.252,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easie\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1806,"ts":1715103150.321,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1807,"ts":1715103150.392,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier t\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1808,"ts":1715103150.448,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier t\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1809,"ts":1715103150.556,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1810,"ts":1715103150.601,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to \nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to re\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1811,"ts":1715103151.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to re\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to rea\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1812,"ts":1715103151.383,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to rea\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1813,"ts":1715103151.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} )`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1814,"ts":1715103180.107,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} )`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1815,"ts":1715103180.258,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${c)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1816,"ts":1715103180.715,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${c)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1817,"ts":1715103180.857,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1818,"ts":1715103181.001,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1819,"ts":1715103181.129,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1)`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1])`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1820,"ts":1715103181.273,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1])`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1821,"ts":1715103181.634,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1822,"ts":1715103183.091,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1823,"ts":1715103183.243,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${c]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1824,"ts":1715103183.654,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${c]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1825,"ts":1715103183.807,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1826,"ts":1715103183.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1827,"ts":1715103184.09,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[11]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1828,"ts":1715103184.136,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[11]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[11]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1829,"ts":1715103184.268,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[11]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[11]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1830,"ts":1715103184.788,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[11]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1831,"ts":1715103184.928,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1832,"ts":1715103185.132,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} }`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1833,"ts":1715103186.194,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} }`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1834,"ts":1715103186.354,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${c}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1835,"ts":1715103186.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${c}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1836,"ts":1715103186.818,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1837,"ts":1715103187.001,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1838,"ts":1715103187.118,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1839,"ts":1715103187.233,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1840,"ts":1715103189.45,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} `\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1841,"ts":1715103193.854,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} `\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1842,"ts":1715103194.015,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${c`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1843,"ts":1715103194.38,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${c`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1844,"ts":1715103194.505,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1845,"ts":1715103194.638,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1846,"ts":1715103194.747,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1847,"ts":1715103194.839,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1848,"ts":1715103195.06,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} `)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1849,"ts":1715103198.492,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} `)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1850,"ts":1715103198.62,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1851,"ts":1715103199.691,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1852,"ts":1715103199.858,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1853,"ts":1715103200.025,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1]`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1854,"ts":1715103200.213,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1]`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1855,"ts":1715103200.331,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1856,"ts":1715103200.439,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1857,"ts":1715103200.547,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1858,"ts":1715103200.85,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1859,"ts":1715103202.758,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1860,"ts":1715103203.426,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1861,"ts":1715103205.192,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1862,"ts":1715103205.623,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1863,"ts":1715103205.881,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${c\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1864,"ts":1715103206.274,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${c\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1865,"ts":1715103206.425,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1866,"ts":1715103206.554,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1867,"ts":1715103206.668,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1868,"ts":1715103206.768,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1869,"ts":1715103207.01,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1870,"ts":1715103207.269,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":196,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":196,"type":"end"}]}],"prev":{"56":{"type":"list","values":[57,53,196],"loc":56},"196":{"type":"raw-code","lang":"javascript","loc":196,"raw":"\"10\""}},"meta":{},"metaPrev":{},"map":{"56":{"type":"list","values":[57,53,196],"loc":56},"196":{"type":"blank","loc":196}},"nsMap":{},"nsPrev":{},"id":1871,"ts":1715103210.054,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":200,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":0,"idx":52},{"idx":56,"type":"child","at":2},{"idx":196,"type":"subtext","at":0}]}],"prev":{"56":{"type":"list","values":[57,53,196],"loc":56},"200":null},"meta":{},"metaPrev":{},"map":{"56":{"type":"list","values":[57,53,200],"loc":56},"200":{"type":"raw-code","lang":"javascript","loc":200,"raw":"\"10:55\""}},"nsMap":{},"nsPrev":{},"id":1872,"ts":1715103211.983,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1873,"ts":1715103221.476,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}} ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}: ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1874,"ts":1715103221.777,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}: ${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1875,"ts":1715103222.309,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1876,"ts":1715103232.357,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1877,"ts":1715103232.713,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')} ${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1878,"ts":1715103233.887,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')})${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1879,"ts":1715103234.203,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]})`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1880,"ts":1715103235.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}]`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1881,"ts":1715103236.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])} ${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1882,"ts":1715103240.171,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}],"end":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"end"}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]} ${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1883,"ts":1715103243.178,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\"`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1884,"ts":1715103246.779,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1885,"ts":1715103246.951,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$}`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1886,"ts":1715103246.994,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$}`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$}c`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1887,"ts":1715103247.304,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$}c`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$}`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1888,"ts":1715103247.487,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$}`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1889,"ts":1715103247.633,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":$`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1890,"ts":1715103247.962,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${c`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1891,"ts":1715103248.17,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${c`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1892,"ts":1715103248.317,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1893,"ts":1715103248.613,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2[`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1894,"ts":1715103248.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2[`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2[}`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1895,"ts":1715103249.181,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2[}`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2[`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1896,"ts":1715103249.594,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2[`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1897,"ts":1715103249.733,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst2`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1898,"ts":1715103249.869,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1899,"ts":1715103249.981,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1900,"ts":1715103250.115,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2}`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1901,"ts":1715103250.366,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2}`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1902,"ts":1715103250.858,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2]`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1903,"ts":1715103251.022,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"type":"rich-text","idx":37,"sel":null}]}],"prev":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2]`\n    }\n};\n","loc":37}},"meta":{},"metaPrev":{},"map":{"37":{"type":"raw-code","lang":"javascript","raw":"// This is a little helper to make our tests easier to read\nconst cstToString = (cst) => {\n    switch (cst.type) {\n      case 'cst/id': return `${cst[0]}:${cst[1]}`\n      case 'cst/list': return `(${unwrapList(cst[0]).map(cstToString).join(' ')}):${cst[1]}`\n      case 'cst/array': return `[${unwrapList(cst[0]).map(cstToString).join(' ')}]:${cst[1]}`\n      case 'cst/record': return `{${unwrapList(cst[0]).map(cstToString).join(' ')}}:${cst[1]}`\n      case 'cst/spread': return `..${cstToString(cst[0])}:${cst[1]}`\n      case 'cst/string':\n        return `\"${cst[0]}${\n          unwrapList(cst[1]).map(t => `\\${${cstToString(t[0])}}${t[1][0]}:${t[1][1]}`)\n        }\":${cst[2]}`\n    }\n};\n","loc":37}},"nsMap":{},"nsPrev":{},"id":1904,"ts":1715103251.207,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":197,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":197,"type":"end"}]}],"prev":{"61":{"type":"list","values":[62,63,197],"loc":61},"197":{"type":"raw-code","lang":"javascript","loc":197,"raw":"\"[1 2]\""}},"meta":{},"metaPrev":{},"map":{"61":{"type":"list","values":[62,63,197],"loc":61},"197":{"type":"blank","loc":197}},"nsMap":{},"nsPrev":{},"id":1905,"ts":1715103268.454,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":198,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":198,"type":"end"}]}],"prev":{"74":{"type":"list","values":[75,76,198],"loc":74},"198":{"type":"raw-code","lang":"javascript","loc":198,"raw":"'\"hi ${1} 12\"'"}},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,198],"loc":74},"198":{"type":"blank","loc":198}},"nsMap":{},"nsPrev":{},"id":1906,"ts":1715103269.528,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":199,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":199,"type":"end"}]}],"prev":{"86":{"type":"list","values":[87,88,199],"loc":86},"199":{"type":"raw-code","lang":"javascript","loc":199,"raw":"\"{hi 10}\""}},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,199],"loc":86},"199":{"type":"blank","loc":199}},"nsMap":{},"nsPrev":{},"id":1907,"ts":1715103270.516,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":201,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":1,"idx":52},{"idx":61,"type":"child","at":2},{"idx":197,"type":"subtext","at":0}]}],"prev":{"61":{"type":"list","values":[62,63,197],"loc":61},"201":null},"meta":{},"metaPrev":{},"map":{"61":{"type":"list","values":[62,63,201],"loc":61},"201":{"type":"raw-code","lang":"javascript","loc":201,"raw":"\"[1:69 2:71]:68\""}},"nsMap":{},"nsPrev":{},"id":1908,"ts":1715103271.684,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":202,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"idx":198,"type":"subtext","at":0}]}],"prev":{"74":{"type":"list","values":[75,76,198],"loc":74},"202":null},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,202],"loc":74},"202":{"type":"raw-code","lang":"javascript","loc":202,"raw":"'\"hi ${1:81} 12:82\":79'"}},"nsMap":{},"nsPrev":{},"id":1909,"ts":1715103272.744,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":3},{"idx":203,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"type":"rich-text","idx":202,"sel":null}]}],"prev":{"74":{"type":"list","values":[75,76,202],"loc":74},"203":null},"meta":{},"metaPrev":{},"map":{"74":{"type":"list","values":[75,76,202,203],"loc":74},"203":{"type":"raw-code","lang":"javascript","loc":203,"raw":"\"{hi:92 10:93}:88\""}},"nsMap":{},"nsPrev":{},"id":1910,"ts":1715103273.435,"libraryRoot":""},{"id":1911,"meta":{},"metaPrev":{},"revert":1910,"prev":{"74":{"type":"list","values":[75,76,202,203],"loc":74},"203":{"type":"raw-code","lang":"javascript","loc":203,"raw":"\"{hi:92 10:93}:88\""}},"map":{"74":{"type":"list","values":[75,76,202],"loc":74},"203":null},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":2},{"type":"rich-text","idx":202,"sel":null}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":2,"idx":52},{"idx":74,"type":"child","at":3},{"idx":203,"type":"end"}]}],"nsMap":{},"nsPrev":{},"ts":1715103274.457,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":204,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":199,"type":"subtext","at":0}]}],"prev":{"86":{"type":"list","values":[87,88,199],"loc":86},"204":null},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,204],"loc":86},"204":{"type":"raw-code","lang":"javascript","loc":204,"raw":"\"{hi:92 10:93}:88\""}},"nsMap":{},"nsPrev":{},"id":1912,"ts":1715103275.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":2},{"idx":205,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":1},{"idx":93,"type":"subtext","at":2}]}],"prev":{"88":{"type":"record","values":[92,93],"loc":88},"205":null},"meta":{},"metaPrev":{},"map":{"88":{"type":"record","values":[92,93,205],"loc":88},"205":{"type":"blank","loc":205}},"nsMap":{},"nsPrev":{},"id":1913,"ts":1715103280.428,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":2},{"idx":206,"type":"attribute","at":1},{"idx":207,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":2},{"idx":205,"type":"start"}]}],"prev":{"88":{"type":"record","values":[92,93,205],"loc":88},"206":null,"207":null},"meta":{},"metaPrev":{},"map":{"88":{"type":"record","values":[92,93,206],"loc":88},"206":{"type":"recordAccess","target":205,"items":[207],"loc":206},"207":{"type":"accessText","text":"","loc":207}},"nsMap":{},"nsPrev":{},"id":1914,"ts":1715103280.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":2},{"idx":208,"type":"spread-contents"},{"idx":205,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":2},{"idx":206,"type":"attribute","at":1},{"idx":207,"type":"subtext","at":0}]}],"prev":{"88":{"type":"record","values":[92,93,206],"loc":88},"206":{"type":"recordAccess","target":205,"items":[207],"loc":206},"207":{"type":"accessText","text":"","loc":207},"208":null},"meta":{},"metaPrev":{},"map":{"88":{"type":"record","values":[92,93,208],"loc":88},"206":null,"207":null,"208":{"type":"spread","contents":205,"loc":208}},"nsMap":{},"nsPrev":{},"id":1915,"ts":1715103280.809,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":2},{"idx":208,"type":"spread-contents"},{"idx":205,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":1},{"idx":88,"type":"child","at":2},{"idx":208,"type":"spread-contents"},{"idx":205,"type":"start"}]}],"prev":{"205":{"type":"blank","loc":205}},"meta":{},"metaPrev":{},"map":{"205":{"type":"identifier","text":"a","loc":205}},"nsMap":{},"nsPrev":{},"id":1916,"ts":1715103280.903,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":204,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":204,"type":"end"}]}],"prev":{"86":{"type":"list","values":[87,88,204],"loc":86},"204":{"type":"raw-code","lang":"javascript","loc":204,"raw":"\"{hi:92 10:93}:88\""}},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,204],"loc":86},"204":{"type":"blank","loc":204}},"nsMap":{},"nsPrev":{},"id":1917,"ts":1715103283.01,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":209,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"child","at":2},{"type":"child","at":3,"idx":52},{"idx":86,"type":"child","at":2},{"idx":204,"type":"subtext","at":0}]}],"prev":{"86":{"type":"list","values":[87,88,204],"loc":86},"209":null},"meta":{},"metaPrev":{},"map":{"86":{"type":"list","values":[87,88,209],"loc":86},"209":{"type":"raw-code","lang":"javascript","loc":209,"raw":"\"{hi:92 10:93 ..a:205:208}:88\""}},"nsMap":{},"nsPrev":{},"id":1918,"ts":1715103284.199,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","idx":3,"child":47},{"type":"ns-top","idx":36},{"type":"start","idx":37}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":36,"idx":0},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,195],"type":"normal"},"3":{"type":"normal","top":2,"children":[36,47],"id":3,"collapsed":false}},"nsPrev":{"0":{"id":0,"top":-1,"children":[1,20,36,193,3,98,195],"type":"normal"},"3":{"type":"normal","top":2,"children":[47],"id":3,"collapsed":false}},"id":1919,"ts":1715103323.37,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns","idx":47},{"type":"ns-top","idx":36},{"type":"start","idx":37}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":36,"idx":3},{"type":"ns-top","idx":36},{"idx":37,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"3":{"type":"normal","top":2,"children":[47],"id":3,"collapsed":false},"47":{"type":"normal","top":46,"children":[36],"id":47,"plugin":{"id":"fixture","options":null}}},"nsPrev":{"3":{"type":"normal","top":2,"children":[36,47],"id":3,"collapsed":false},"47":{"type":"normal","top":46,"children":[],"id":47,"plugin":{"id":"fixture","options":null}}},"id":1920,"ts":1715103325.489,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":3,"idx":0},{"type":"ns","child":47,"idx":3},{"type":"ns-top","idx":47},{"idx":46,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"47":{"type":"normal","top":46,"children":[36],"id":47,"plugin":{"id":"fixture","options":null},"collapsed":true}},"nsPrev":{"47":{"type":"normal","top":46,"children":[36],"id":47,"plugin":{"id":"fixture","options":null}}},"id":1921,"ts":1715103327.782,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":103},{"idx":102,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":103,"idx":98},{"type":"ns-top","idx":103},{"idx":102,"type":"start"}]}],"prev":{"210":null},"meta":{},"metaPrev":{},"map":{"210":{"type":"blank","loc":210}},"nsMap":{"98":{"type":"normal","top":97,"children":[211,103],"id":98},"211":{"type":"normal","top":210,"id":211,"children":[]}},"nsPrev":{"98":{"type":"normal","top":97,"children":[103],"id":98},"211":null},"id":1922,"ts":1715103336.757,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":0}]}],"prev":{"210":{"type":"blank","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"comment","text":"","loc":210}},"nsMap":{},"nsPrev":{},"id":1923,"ts":1715103337.683,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":0}]}],"prev":{"210":{"type":"comment","text":"","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"comment","text":"'","loc":210}},"nsMap":{},"nsPrev":{},"id":1924,"ts":1715103337.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":2}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":1}]}],"prev":{"210":{"type":"comment","text":"'","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"comment","text":"';","loc":210}},"nsMap":{},"nsPrev":{},"id":1925,"ts":1715103337.805,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":2}]}],"prev":{"210":{"type":"comment","text":"';","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"comment","text":"'","loc":210}},"nsMap":{},"nsPrev":{},"id":1926,"ts":1715103338.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":1}]}],"prev":{"210":{"type":"comment","text":"'","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"comment","text":"","loc":210}},"nsMap":{},"nsPrev":{},"id":1927,"ts":1715103338.432,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":0}]}],"prev":{"210":{"type":"comment","text":"","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"blank","loc":210}},"nsMap":{"211":{"type":"normal","top":210,"id":211,"children":[]}},"nsPrev":{"211":{"type":"normal","top":210,"id":211,"children":[]}},"id":1928,"ts":1715103338.824,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":1}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"start"}]}],"prev":{"210":{"type":"blank","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"identifier","text":"'","loc":210}},"nsMap":{},"nsPrev":{},"id":1929,"ts":1715103339.033,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"rich-text","sel":0}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"idx":210,"type":"subtext","at":1}]}],"prev":{"210":{"type":"identifier","text":"'","loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":null,"loc":210}},"nsMap":{},"nsPrev":{},"id":1930,"ts":1715103339.19,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":null,"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"t","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1931,"ts":1715103345.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"t","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"to","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1932,"ts":1715103345.43,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"to","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toN","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1933,"ts":1715103345.65,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toN","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNo","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1934,"ts":1715103345.832,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNo","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNod","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1935,"ts":1715103345.923,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNod","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1936,"ts":1715103345.957,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1937,"ts":1715103347.398,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode c","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1938,"ts":1715103347.811,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode c","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode ca","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1939,"ts":1715103347.895,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode ca","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1940,"ts":1715103347.981,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can'","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1941,"ts":1715103348.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can'","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1942,"ts":1715103348.191,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1943,"ts":1715103348.307,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't r","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1944,"ts":1715103348.812,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't r","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't re","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1945,"ts":1715103348.84,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't re","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't rec","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1946,"ts":1715103349.088,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't rec","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reco","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1947,"ts":1715103349.209,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reco","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't recon","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1948,"ts":1715103349.365,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't recon","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't recons","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1949,"ts":1715103349.643,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't recons","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconst","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1950,"ts":1715103349.71,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconst","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstr","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1951,"ts":1715103349.774,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstr","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstru","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1952,"ts":1715103349.858,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstru","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruc","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1953,"ts":1715103349.974,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruc","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1954,"ts":1715103350.134,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1955,"ts":1715103350.389,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct s","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1956,"ts":1715103350.59,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct s","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct so","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1957,"ts":1715103350.662,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct so","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct som","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1958,"ts":1715103350.729,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct som","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1959,"ts":1715103350.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1960,"ts":1715103350.849,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some o","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1961,"ts":1715103350.936,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some o","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1962,"ts":1715103351.009,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1963,"ts":1715103351.09,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of t","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1964,"ts":1715103351.146,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of t","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of th","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1965,"ts":1715103351.234,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of th","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1966,"ts":1715103351.313,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1967,"ts":1715103351.369,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1968,"ts":1715103352.35,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `l","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1969,"ts":1715103352.463,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `l","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `lo","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1970,"ts":1715103352.626,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `lo","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `loc","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1971,"ts":1715103352.659,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the `loc","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1972,"ts":1715103352.918,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1973,"ts":1715103354.302,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" i","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1974,"ts":1715103355.243,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" i","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" id","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1975,"ts":1715103355.332,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" id","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" ide","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1976,"ts":1715103355.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" ide","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" iden","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1977,"ts":1715103355.413,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" iden","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" ident","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1978,"ts":1715103355.533,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" ident","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identi","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1979,"ts":1715103355.608,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identi","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identif","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1980,"ts":1715103355.714,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identif","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifi","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1981,"ts":1715103355.813,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifi","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifie","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1982,"ts":1715103355.908,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifie","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifier","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1983,"ts":1715103355.94,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifier","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1984,"ts":1715103356.135,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers,","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1985,"ts":1715103356.316,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers,","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1986,"ts":1715103356.447,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, s","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1987,"ts":1715103356.61,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, s","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1988,"ts":1715103356.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1989,"ts":1715103356.751,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so w","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1990,"ts":1715103356.875,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so w","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1991,"ts":1715103356.923,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1992,"ts":1715103357.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we c","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1993,"ts":1715103357.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we c","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we ca","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1994,"ts":1715103357.269,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we ca","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1995,"ts":1715103357.327,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can'","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1996,"ts":1715103357.427,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can'","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1997,"ts":1715103357.582,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1998,"ts":1715103357.793,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't s","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":1999,"ts":1715103357.988,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't s","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't so","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2000,"ts":1715103358.06,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't so","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't s","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2001,"ts":1715103358.435,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't s","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2002,"ts":1715103358.56,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't d","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2003,"ts":1715103358.693,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't d","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2004,"ts":1715103358.789,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2005,"ts":1715103359.724,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2006,"ts":1715103359.864,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `e","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2007,"ts":1715103360.318,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `e","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `eq","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2008,"ts":1715103360.563,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `eq","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2009,"ts":1715103360.663,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equa","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2010,"ts":1715103360.723,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equa","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2011,"ts":1715103360.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2012,"ts":1715103361.036,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2013,"ts":1715103362.064,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v,","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2014,"ts":1715103362.225,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v,","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2015,"ts":1715103362.292,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, t","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2016,"ts":1715103362.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, t","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, to","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2017,"ts":1715103362.954,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, to","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toN","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2018,"ts":1715103363.128,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toN","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNo","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2019,"ts":1715103363.287,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNo","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNod","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2020,"ts":1715103363.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNod","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2021,"ts":1715103363.376,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2022,"ts":1715103363.494,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(f","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2023,"ts":1715103363.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(f","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fr","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2024,"ts":1715103363.742,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fr","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fro","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2025,"ts":1715103363.794,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fro","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(from","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2026,"ts":1715103363.845,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(from","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromN","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2027,"ts":1715103364.03,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromN","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNo","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2028,"ts":1715103364.172,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNo","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNod","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2029,"ts":1715103364.248,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNod","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2030,"ts":1715103364.275,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2031,"ts":1715103364.408,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2032,"ts":1715103364.568,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v)","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2033,"ts":1715103364.826,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v)","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v))","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2034,"ts":1715103365.014,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v))","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v)))","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2035,"ts":1715103365.808,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do `equal(v, toNode(fromNode(v)))","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2036,"ts":1715103366.367,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2037,"ts":1715103370.087,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":". ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2038,"ts":1715103370.242,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":". ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2039,"ts":1715103370.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2040,"ts":1715103370.892,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"B","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2041,"ts":1715103371.204,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"B","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Bu","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2042,"ts":1715103371.36,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Bu","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"But","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2043,"ts":1715103371.459,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"But","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"But ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2044,"ts":1715103371.543,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"But ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"But","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2045,"ts":1715103372.344,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"But","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Bu","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2046,"ts":1715103372.456,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"Bu","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"B","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2047,"ts":1715103372.585,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"B","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2048,"ts":1715103372.69,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]},{"id":"1a665215-2ba0-4b28-bd66-3f251c544806","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2049,"ts":1715103372.817,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\n","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2050,"ts":1715103373.202,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\n","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nB","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2051,"ts":1715103373.68,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nB","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBu","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2052,"ts":1715103373.838,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBu","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2053,"ts":1715103373.918,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2054,"ts":1715103374.003,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut r","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2055,"ts":1715103374.16,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut r","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut ro","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2056,"ts":1715103374.215,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut ro","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut rou","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2057,"ts":1715103374.255,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut rou","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut roun","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2058,"ts":1715103374.387,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut roun","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2059,"ts":1715103374.499,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2060,"ts":1715103374.672,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-t","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2061,"ts":1715103374.948,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-t","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tr","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2062,"ts":1715103374.988,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tr","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tri","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2063,"ts":1715103375.049,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tri","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-trip","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2064,"ts":1715103375.198,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-trip","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripp","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2065,"ts":1715103375.32,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripp","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-trippi","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2066,"ts":1715103375.436,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-trippi","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-trippin","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2067,"ts":1715103375.497,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-trippin","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2068,"ts":1715103375.564,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2069,"ts":1715103375.655,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping o","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2070,"ts":1715103375.901,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping o","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ou","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2071,"ts":1715103375.947,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ou","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping out","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2072,"ts":1715103376.067,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping out","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ou","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2073,"ts":1715103376.279,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ou","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping oug","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2074,"ts":1715103376.442,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping oug","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ough","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2075,"ts":1715103376.504,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ough","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2076,"ts":1715103376.602,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2077,"ts":1715103376.688,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought t","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2078,"ts":1715103376.756,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought t","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2079,"ts":1715103376.816,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2080,"ts":1715103376.902,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to b","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2081,"ts":1715103377.095,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to b","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2082,"ts":1715103377.184,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2083,"ts":1715103377.277,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2084,"ts":1715103377.384,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2085,"ts":1715103377.48,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a g","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2086,"ts":1715103377.774,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a g","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a go","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2087,"ts":1715103377.799,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a go","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a goo","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2088,"ts":1715103377.915,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a goo","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2089,"ts":1715103377.997,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2090,"ts":1715103378.077,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good i","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2091,"ts":1715103378.122,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good i","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good in","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2092,"ts":1715103378.163,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good in","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good ind","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2093,"ts":1715103378.251,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good ind","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indi","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2094,"ts":1715103378.315,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indi","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indic","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2095,"ts":1715103378.42,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indic","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indica","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2096,"ts":1715103378.551,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indica","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicat","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2097,"ts":1715103378.605,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicat","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicato","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2098,"ts":1715103378.787,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicato","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2099,"ts":1715103378.862,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2100,"ts":1715103378.966,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator t","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2101,"ts":1715103379.042,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator t","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator th","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2102,"ts":1715103379.095,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator th","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator tha","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2103,"ts":1715103379.259,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator tha","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2104,"ts":1715103379.341,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2105,"ts":1715103379.41,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that t","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2106,"ts":1715103379.498,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that t","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that th","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2107,"ts":1715103379.587,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that th","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that thi","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2108,"ts":1715103379.648,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that thi","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that thin","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2109,"ts":1715103379.738,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that thin","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that thing","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2110,"ts":1715103379.904,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that thing","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2111,"ts":1715103379.945,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2112,"ts":1715103380.104,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things a","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2113,"ts":1715103380.196,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things a","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things ar","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2114,"ts":1715103380.275,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things ar","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2115,"ts":1715103380.349,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are ","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2116,"ts":1715103380.435,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are ","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are w","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2117,"ts":1715103380.555,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are w","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are wo","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2118,"ts":1715103380.609,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are wo","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are wor","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2119,"ts":1715103380.675,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are wor","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are work","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2120,"ts":1715103380.739,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are work","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are worki","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2121,"ts":1715103380.831,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are worki","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are workin","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2122,"ts":1715103380.886,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are workin","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are working","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2123,"ts":1715103380.956,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":98,"idx":0},{"type":"ns","child":211,"idx":98},{"type":"ns-top","idx":211},{"type":"rich-text","idx":210,"sel":"06db4573-49c0-423d-a118-9b69d3f0460b"}]}],"prev":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are working","styles":{}}],"children":[]}],"loc":210}},"meta":{},"metaPrev":{},"map":{"210":{"type":"rich-text","contents":[{"id":"06db4573-49c0-423d-a118-9b69d3f0460b","type":"paragraph","props":{"textColor":"default","backgroundColor":"default","textAlignment":"left"},"content":[{"type":"text","text":"toNode can't reconstruct some of the ","styles":{}},{"type":"text","text":"loc","styles":{"code":true}},{"type":"text","text":" identifiers, so we can't do ","styles":{}},{"type":"text","text":"equal(v, toNode(fromNode(v)))","styles":{"code":true}},{"type":"text","text":".\nBut round-tripping ought to be a good indicator that things are working.","styles":{}}],"children":[]}],"loc":210}},"nsMap":{},"nsPrev":{},"id":2124,"ts":1715103381.07,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"start"}]}],"prev":{},"meta":{},"metaPrev":{},"map":{},"nsMap":{"157":{"type":"normal","top":156,"children":[],"id":157,"display":{"id":"none","options":null}}},"nsPrev":{"157":{"type":"normal","top":156,"children":[],"id":157}},"id":2125,"ts":1715103407.895,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":2},{"idx":212,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":1},{"idx":160,"type":"subtext","at":3}]}],"prev":{"156":{"loc":156,"type":"list","values":[159,160,161,167,173,177,181]},"212":null},"meta":{},"metaPrev":{},"map":{"156":{"loc":156,"type":"list","values":[159,160,212,161,167,173,177,181]},"212":{"type":"blank","loc":212}},"nsMap":{},"nsPrev":{},"id":2126,"ts":1715103421.865,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":2},{"idx":213,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":2},{"idx":212,"type":"start"}]}],"prev":{"156":{"loc":156,"type":"list","values":[159,160,212,161,167,173,177,181]},"213":null,"214":null,"215":null,"216":null},"meta":{},"metaPrev":{},"map":{"156":{"loc":156,"type":"list","values":[159,160,213,161,167,173,177,181]},"213":{"loc":213,"type":"list","values":[214,215,216]},"214":{"loc":214,"type":"identifier","text":"cst/id"},"215":{"loc":215,"type":"identifier","text":"string"},"216":{"loc":216,"type":"identifier","text":"int"}},"nsMap":{},"nsPrev":{},"id":2127,"ts":1715103422.055,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":6},{"idx":177,"type":"start"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":6},{"idx":177,"type":"end"}]}],"prev":{"156":{"loc":156,"type":"list","values":[159,160,213,161,167,173,177,181]},"177":{"loc":177,"type":"list","values":[178,179,180]},"178":{"loc":178,"type":"identifier","text":"cst/id"},"179":{"loc":179,"type":"identifier","text":"string"},"180":{"loc":180,"type":"identifier","text":"int"}},"meta":{},"metaPrev":{},"map":{"156":{"loc":156,"type":"list","values":[159,160,213,161,167,173,177,181]},"177":{"type":"blank","loc":177},"178":null,"179":null,"180":null},"nsMap":{},"nsPrev":{},"id":2128,"ts":1715103423.226,"libraryRoot":""},{"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":5},{"idx":173,"type":"end"}]}],"prevAt":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":6},{"idx":177,"type":"start"}]}],"prev":{"156":{"loc":156,"type":"list","values":[159,160,213,161,167,173,177,181]},"177":{"type":"blank","loc":177}},"meta":{},"metaPrev":{},"map":{"156":{"loc":156,"type":"list","values":[159,160,213,161,167,173,181]},"177":null},"nsMap":{},"nsPrev":{},"id":2129,"ts":1715103423.5,"libraryRoot":""}],"clipboard":[],"hover":[],"regs":{},"at":[{"start":[{"type":"card","idx":-1,"card":0},{"type":"ns","child":193,"idx":0},{"type":"ns","child":157,"idx":193},{"type":"ns-top","idx":157},{"idx":156,"type":"child","at":5},{"idx":173,"type":"end"}]}],"cards":[{"path":[],"top":0}],"nsMap":{"0":{"id":0,"top":-1,"children":[1,20,193,3,98,195],"type":"normal"},"1":{"id":1,"top":0,"children":[],"type":"normal"},"3":{"type":"normal","top":2,"children":[47],"id":3,"collapsed":false},"20":{"type":"normal","id":20,"top":21,"children":[22],"collapsed":true},"22":{"type":"normal","id":22,"top":23,"children":[],"collapsed":false},"36":{"type":"normal","id":36,"top":37,"children":[]},"47":{"type":"normal","top":46,"children":[36],"id":47,"plugin":{"id":"fixture","options":null},"collapsed":true},"98":{"type":"normal","top":97,"children":[211,103],"id":98},"100":{"type":"normal","top":99,"children":[],"id":100,"plugin":{"id":"evaluator","options":"jcst.js"}},"103":{"type":"normal","top":102,"children":[],"id":103,"plugin":{"id":"fixture","options":null}},"157":{"type":"normal","top":156,"children":[],"id":157,"display":{"id":"none","options":null}},"193":{"type":"normal","top":192,"id":193,"children":[157]},"195":{"type":"normal","top":194,"children":[100],"id":195},"211":{"type":"normal","top":210,"id":211,"children":[]}},"highlight":[],"evaluator":":js:"}